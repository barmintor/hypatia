<?xml version="1.0" encoding="UTF-8"?>
<foxml:digitalObject VERSION="1.1" PID="hypatia:fixture_ftk_file_factory" xmlns:foxml="info:fedora/fedora-system:def/foxml#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="info:fedora/fedora-system:def/foxml# http://www.fedora.info/definitions/1/0/foxml1-1.xsd">
  <foxml:objectProperties>
    <foxml:property NAME="info:fedora/fedora-system:def/model#state" VALUE="Active"/>
    <foxml:property NAME="info:fedora/fedora-system:def/model#label" VALUE=""/>
    <foxml:property NAME="info:fedora/fedora-system:def/model#ownerId" VALUE="fedoraAdmin"/>
    <foxml:property NAME="info:fedora/fedora-system:def/model#createdDate" VALUE="2011-09-15T22:00:53.675Z"/>
    <foxml:property NAME="info:fedora/fedora-system:def/view#lastModifiedDate" VALUE="2011-09-15T22:00:54.177Z"/>
  </foxml:objectProperties>
  <foxml:datastream ID="AUDIT" STATE="A" CONTROL_GROUP="X" VERSIONABLE="false">
    <foxml:datastreamVersion ID="AUDIT.0" LABEL="Audit Trail for this object" CREATED="2011-09-15T22:00:53.675Z" MIMETYPE="text/xml" FORMAT_URI="info:fedora/fedora-system:format/xml.fedora.audit">
      <foxml:xmlContent>
        <audit:auditTrail xmlns:audit="info:fedora/fedora-system:def/audit#">
          <audit:record ID="AUDREC1">
            <audit:process type="Fedora API-M"/>
            <audit:action>addDatastream</audit:action>
            <audit:componentID>DS1</audit:componentID>
            <audit:responsibility>fedoraAdmin</audit:responsibility>
            <audit:date>2011-09-15T22:00:53.917Z</audit:date>
            <audit:justification/>
          </audit:record>
          <audit:record ID="AUDREC2">
            <audit:process type="Fedora API-M"/>
            <audit:action>addDatastream</audit:action>
            <audit:componentID>descMetadata</audit:componentID>
            <audit:responsibility>fedoraAdmin</audit:responsibility>
            <audit:date>2011-09-15T22:00:53.992Z</audit:date>
            <audit:justification/>
          </audit:record>
          <audit:record ID="AUDREC3">
            <audit:process type="Fedora API-M"/>
            <audit:action>addDatastream</audit:action>
            <audit:componentID>derivative_html</audit:componentID>
            <audit:responsibility>fedoraAdmin</audit:responsibility>
            <audit:date>2011-09-15T22:00:54.075Z</audit:date>
            <audit:justification/>
          </audit:record>
          <audit:record ID="AUDREC4">
            <audit:process type="Fedora API-M"/>
            <audit:action>addDatastream</audit:action>
            <audit:componentID>RELS-EXT</audit:componentID>
            <audit:responsibility>fedoraAdmin</audit:responsibility>
            <audit:date>2011-09-15T22:00:54.177Z</audit:date>
            <audit:justification/>
          </audit:record>
        </audit:auditTrail>
      </foxml:xmlContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
  <foxml:datastream ID="DC" STATE="A" CONTROL_GROUP="X" VERSIONABLE="true">
    <foxml:datastreamVersion ID="DC1.0" LABEL="Dublin Core Record for this object" CREATED="2011-09-15T22:00:53.675Z" MIMETYPE="text/xml" FORMAT_URI="http://www.openarchives.org/OAI/2.0/oai_dc/" SIZE="339">
      <foxml:xmlContent>
        <oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
          <dc:identifier>fixture:hypatia_ftk_file_factory</dc:identifier>
        </oai_dc:dc>
      </foxml:xmlContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
  <foxml:datastream ID="DS1" STATE="A" CONTROL_GROUP="M" VERSIONABLE="true">
    <foxml:datastreamVersion ID="DS1.0" LABEL="" CREATED="2011-09-15T22:00:53.917Z" MIMETYPE="application/octet-stream" SIZE="47570">
      <foxml:binaryContent> gsYAA8YKCgoKwwAqIcNIT01BR0UgVE8glE9QQUJJTklBlYMKCsMAKirDgwrDACoVw1RoZSBCdXJnZXNz IFNoYWxlIGFuZCB0aGUgTmF0dXJlIG9mIEhpc3RvcnmDCgoKCsMAKiLDU3RlcGhlbiBKYXkgR291bGSD CgrDACocw011c2V1bSBvZiBDb21wYXJhdGl2ZSBab29sb2d5gwrDACohw0hhcnZhcmQgVW5pdmVyc2l0
        eYMKwwAqIcNDYW1icmlkZ2UsIE1BIDAybDM4gwoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK CgoKCtxmAAAAAAAA3IxDaGFwdGVyIEk6IJRUaGUgSWNvbm9ncmFwaHkgb2YgYW4gRXhwZWN0YXRpb26V CgpBKSAglEEgUHJvbG9ndWUgaW4gUGljdHVyZXMKCsECBMGVCQlBbmQgSSB3aWxsIGxheSBzaW5ld3Mg
        dXBvbiB5b3UsIGFuZCB3aWxsIGJyaW5nIHVwIGZsZXNoDQkJdXBvbiB5b3UsIGFuZCBjb3ZlciB5b3Ug d2l0aCBza2luLCBhbmQgcHV0IGJyZWF0aCBpbg0JCXlvdSwgYW5kIHllIHNoYWxsIGxpdmUgKEV6ZWtp ZWwgMzc6NikuCgoJTm90IHNpbmNlIHRoZSBMb3JkIGhpbXNlbGYgc2hvd2VkIGhpcyBzdHVmZiB0byBF
        emVraWVsIGluDXRoZSBWYWxsZXkgb2YgRHJ5IEJvbmVzIGhhZCBhbnlvbmUgc2hvd24gc3VjaCBncmFj ZSBhbmQgc2tpbGwgaW4NdGhlIHJlY29uc3RydWN0aW9uIG9mIGFuaW1hbHMgZnJvbSBkaXNhcnRpY3Vs YXRlZCBza2VsZXRvbnMuIA1DaGFybGVzIFIuIEtuaWdodCwgbW9zdCBjZWxlYnJhdGVkIG9mIGFsbCBh
        cnRpc3RzIGluIHRoZQ1yZWFuaW1hdGlvbiBvZiBmb3NzaWxzLCBwYWludGVkIGFsbCB0aGUgY2Fub25p Y2FsIGZpZ3VyZXMgb2YNZGlub3NhdXJzIHRoYXQgZmlyZSBvdXIgZmVhciBhbmQgaW1hZ2luYXRpb24g dG8gdGhpcyBkYXkuICBJbg1GZWJydWFyeSwgbDk0MiwgS25pZ2h0IGRlc2lnbmVkIGEgY2hyb25vbG9n
        aWNhbCBzZXJpZXMgb2YNcGFub3JhbWFzLCBkZXBpY3RpbmcgdGhlIGhpc3Rvcnkgb2YgbGlmZSBmcm9t IHRoZSBhZHZlbnQgb2YNbXVsdGljZWxsdWxhciBhbmltYWxzIHRvIHRoZSB0cml1bXBoIG9mIJRIb21v lSCUc2FwaWVuc5UsIGZvcg2UTmF0aW9uYWyVIJRHZW9ncmFwaGljlS4gIChUaGlzIGlzIHRoZSBvbmUg
        aXNzdWUgdGhhdCdzIGFsd2F5cyBzYXZlZA1hbmQgdGhlcmVmb3JlIGFsd2F5cyBtaXNzaW5nIHdoZW4g eW91IHNlZSBhICJjb21wbGV0ZSIgcnVuIG9mIHRoZQ1tYWdhemluZSBvbiBzYWxlIGZvciB0d28gYml0 cyBhbiBpc3N1ZSBvbiB0aGUgYmFjayBzaGVsdmVzIG9mIHRoZQ1nZW5lcmFsIHN0b3JlIGluIEJ1Y29s
        aWEsIE1haW5lLikgIEhlIGJhc2VkIGhpcyBmaXJzdCBwYWludGluZyBpbg10aGUgc2VyaWVzIKmpIHRo ZSBjb3ZlciBvZiB0aGlzIGJvb2sgqakgb24gdGhlIGFuaW1hbHMgb2YgdGhlDUJ1cmdlc3MgU2hhbGUu CglXaXRob3V0IGhlc2l0YXRpb24gb3IgYW1iaWd1aXR5LCBhbmQgZnVsbHkgbWluZGZ1bCBvZiBzdWNo
        DXBhbGVvbnRvbG9naWNhbCB3b25kZXJzIGFzIGxhcmdlIGRpbm9zYXVycyBhbmQgQWZyaWNhbiBhcGWp bWVuLCBJDXN0YXRlIHRoYXQgdGhlIGludmVydGVicmF0ZXMgb2YgdGhlIEJ1cmdlc3MgU2hhbGUsIGZv dW5kIGhpZ2ggaW4NdGhlIENhbmFkaWFuIFJvY2tpZXMgaW4gWW9obyBOYXRpb25hbCBQYXJrIG9uIHRo
        ZSBlYXN0ZXJuIGJvcmRlcg1vZiBCcml0aXNoIENvbHVtYmlhLCBhcmUgdGhlIHdvcmxkJ3MgbW9zdCBp bXBvcnRhbnQgYW5pbWFs3GQAAAAAAgDcC2Zvc3NpbHMuICBNb2Rlcm4gbXVsdGljZWxsdWxhciBhbmlt YWxzIG1ha2UgdGhlaXIgZmlyc3QNdW5jb250ZXN0ZWQgYXBwZWFyYW5jZSBpbiB0aGUgZm9zc2lsIHJl
        Y29yZCBzb21lIDU3MCBtaWxsaW9uDXllYXJzIGFnbyCpqSBhbmQgd2l0aCBhIGJhbmcsIG5vdCBhIHBy b3RyYWN0ZWQgY3Jlc2NlbmRvLiAgVGhpcw0iQ2FtYnJpYW4gZXhwbG9zaW9uIiBtYXJrcyB0aGUgYWR2 ZW50IChhdCBsZWFzdCBpbnRvIGRpcmVjdA1ldmlkZW5jZSkgb2YgdmlydHVhbGx5IGFsbCBtYWpvciBn
        cm91cHMgb2YgbW9kZXJuIGFuaW1hbHMgqakgYW5kDWFsbCB3aXRoaW4gdGhlIG1pbnVzY3VsZSBzcGFu LCBnZW9sb2dpY2FsbHkgc3BlYWtpbmcsIG9mIGEgZmV3DW1pbGxpb24geWVhcnMuICBUaGUgQnVyZ2Vz cyBTaGFsZSByZXByZXNlbnRzIGEgcGVyaW9kIGp1c3QgYWZ0ZXINdGhpcyBleHBsb3Npb24sIGEgdGlt
        ZSB3aGVuIHRoZSBmdWxsIHJhbmdlIG9mIGl0cyBwcm9kdWN0cw1pbmhhYml0ZWQgb3VyIHNlYXMuICBU aGVzZSBDYW5hZGlhbiBmb3NzaWxzIGFyZSBwcmVjaW91cyBiZWNhdXNlDXRoZXkgcHJlc2VydmUsIGlu IGV4cXVpc2l0ZSBkZXRhaWwgZG93biB0byB0aGUgbGFzdCBmaWxhbWVudCBvZiBhDXRyaWxvYml0ZSdz
        IGdpbGwsIG9yIHRoZSBkZXRhaWxzIG9mIGEgbGFzdCBtZWFsIGluIGEgd29ybSdzIGd1dCwNdGhlIHNv ZnQgYW5hdG9teSBvZiBvcmdhbmlzbXMuICBPdXIgZm9zc2lsIHJlY29yZCBpcyBhbG1vc3QNZXhjbHVz aXZlbHkgdGhlIHN0b3J5IG9mIGhhcmQgcGFydHMuICBCdXQgbW9zdCBhbmltYWxzIGhhdmUgbm9uZTsN
        YW5kIHRob3NlIHRoYXQgZG8gb2Z0ZW4gcmV2ZWFsIHZlcnkgbGl0dGxlIGFib3V0IHRoZWlyIGFuYXRv bWllcw1pbiB0aGVpciBvdXRlciBjb3ZlcmluZ3MgKHdoYXQgY291bGQgeW91IGluZmVyIGFib3V0IGEg Y2xhbSBmcm9tDWl0cyBzaGVsbCBhbG9uZSkuICBUaHVzLCB0aGUgcmFyZSBzb2Z0IGJvZGllZCBmYXVu
        YXMgb2YgdGhlDWZvc3NpbCByZWNvcmQgYXJlIHByZWNpb3VzIHdpbmRvd3MgaW50byB0aGUgdHJ1ZSBy YW5nZSBhbmQNZGl2ZXJzaXR5IG9mIGFuY2llbnQgbGlmZS4gIFRoZSBCdXJnZXNzIFNoYWxlIGlzIG91 ciBvbmx5DWV4dGVuc2l2ZSwgd2VsbKlkb2N1bWVudGVkIHdpbmRvdyB1cG9uIHRoYXQgbW9zdCBjcnVj
        aWFsIGV2ZW50IGluDXRoZSBoaXN0b3J5IG9mIGFuaW1hbCBsaWZlIKmpIHRoZSBmaXJzdCBmbG93ZXJp bmcgb2YgdGhlIENhbWJyaWFuDWV4cGxvc2lvbi4KCVRoZSBCdXJnZXNzIFNoYWxlIGFsc28gcHJlc2Vu dHMgYSBmYXNjaW5hdGluZyBzdG9yeSBpbiBodW1hbg10ZXJtcy4gIFRoZSBmYXVuYSB3YXMgZGlzY292
        ZXJlZCBpbiBsOTA5IGJ5IEFtZXJpY2EncyBncmVhdGVzdA1wYWxlb250b2xvZ2lzdCBhbmQgc2NpZW50 aWZpYyBhZG1pbmlzdHJhdG9yLCBDaGFybGVzIERvb2xpdHRsZQ1XYWxjb3R0LCBTZWNyZXRhcnkgKHRo ZWlyIG5hbWUgZm9yIGJvc3MpIG9mIHRoZSBTbWl0aHNvbmlhbg1JbnN0aXR1dGlvbi4gIFdhbGNvdHQg
        cHJvY2VlZGVkIHRvIG1pc2ludGVycHJldCB0aGVzZSBmb3NzaWxzIGlu3GQAAAAAAgDcC2EgY29tcHJl aGVuc2l2ZSBhbmQgdGhvcm91Z2hseSBjb25zaXN0ZW50IG1hbm5lciBwcm9jZWVkaW5nDWRpcmVjdGx5 IGZyb20gaGlzIGNvbnZlbnRpb25hbCB2aWV3IG9mIGxpZmUuICBJbiBzaG9ydCwgaGUNc2hvZWhvcm5l
        ZCBldmVyeSBsYXN0IEJ1cmdlc3MgYW5pbWFsIGludG8gYSBtb2Rlcm4gZ3JvdXAsIHZpZXdpbmcNdGhl IGZhdW5hIGNvbGxlY3RpdmVseSBhcyBhIHNldCBvZiBwcmltaXRpdmUgb3IgYW5jZXN0cmFsDXZlcnNp b25zIG9mIGxhdGVyLCBpbXByb3ZlZCBmb3Jtcy4gIFdhbGNvdHQncyB3b3JrIHdhcyBub3QNY29uc2lz
        dGVudGx5IGNoYWxsZW5nZWQgZm9yIG1vcmUgdGhhbiA1MCB5ZWFycy4gIEluIGw5N2wsDVByb2Zlc3Nv ciBIYXJyeSBXaGl0dGluZ3RvbiBvZiBDYW1icmlkZ2UgVW5pdmVyc2l0eSBwdWJsaXNoZWQgdGhlDWZp cnN0IG1vbm9ncmFwaCBpbiBhIGNvbXByZWhlbnNpdmUgcmVleGFtaW5hdGlvbiB0aGF0IGJlZ2FuIHdp
        dGgNV2FsY290dCdzIHByZXN1bXB0aW9ucyBhbmQgZW5kZWQgd2l0aCBhIHJhZGljYWwgaW50ZXJwcmV0 YXRpb24sDW5vdCBvbmx5IGZvciB0aGUgQnVyZ2VzcyBTaGFsZSwgYnV0IChieSBpbXBsaWNhdGlvbikg Zm9yIHRoZQ1lbnRpcmUgaGlzdG9yeSBvZiBsaWZlLCBpbmNsdWRpbmcgb3VyIG93biBldm9sdXRpb24u
        ICAKCVRoaXMgYm9vayBoYXMgdGhyZWUgbWFqb3IgYWltcy4gIEl0IGlzLCBmaXJzdCBhbmQgZm9yZW1v c3QsDWEgY2hyb25pY2xlIG9mIHRoZSBpbnRlbnNlIGludGVsbGVjdHVhbCBkcmFtYSBiZWhpbmQgdGhl IG91dHdhcmQNc2VyZW5pdHkgb2YgdGhpcyByZWludGVycHJldGF0aW9uLiAgU2Vjb25kLCBhbmQgYnkg
        dW5hdm9pZGFibGUNaW1wbGljYXRpb24sIGl0IGlzIGEgc3RhdGVtZW50IGFib3V0IHRoZSBuYXR1cmUg b2YgaGlzdG9yeSBhbmQNdGhlIGF3ZXNvbWUgaW1wcm9iYWJpbGl0eSBvZiBodW1hbiBldm9sdXRpb24u ICBBcyBhIHRoaXJkIHRoZW1lLA1JIGdyYXBwbGUgd2l0aCB0aGUgcGFyYWRveCBvZiB3aHkgc3VjaCBh
        IGZ1bmRhbWVudGFsIHByb2dyYW0gb2YNcmVzZWFyY2ggaGFzIGJlZW4gcGVybWl0dGVkIHRvIHBhc3Mg c28gaW52aXNpYmx5IGJlZm9yZSB0aGUNcHVibGljIGdhemUuICBXaHkgaXMglE9wYWJpbmlhlSwga2V5 IGFuaW1hbCBpbiBhIG5ldyB2aWV3IG9mIGxpZmUsDW5vdCBhIGhvdXNlaG9sZCBuYW1lIGluIGFsbCBk
        b21pY2lsZXMgdGhhdCBjYXJlIGFib3V0IHRoZSByaWRkbGVzDW9mIGV4aXN0ZW5jZT8KCUluIHNob3J0 LCBIYXJyeSBXaGl0dGluZ3RvbiBhbmQgaGlzIHN0dWRlbnRzIGhhdmUgc2hvd24gdGhhdA1tb3N0IEJ1 cmdlc3Mgb3JnYW5pc21zIGRvIG5vdCBiZWxvbmcgdG8gZmFtaWxpYXIgZ3JvdXBzLCBhbmQgdGhhdA10
        aGUgY3JlYXR1cmVzIGZyb20gdGhpcyBzaW5nbGUgcXVhcnJ5IGluIEJyaXRpc2ggQ29sdW1iaWENcHJv YmFibHkgZXhjZWVkLCBpbiBhbmF0b21pY2FsIHJhbmdlLCB0aGUgZW50aXJlIHNwZWN0cnVtIG9mDWlu dmVydGVicmF0ZSBsaWZlIGluIHRvZGF5J3Mgb2NlYW5zLiAgU29tZSBsNSB0byAyMCBCdXJnZXNz3GQA
        AAAAAgDcC3NwZWNpZXMgY2Fubm90IGJlIGFsbGllZCB3aXRoIGFueSBrbm93biBncm91cCwgYW5kIHNo b3VsZA1wcm9iYWJseSBiZSBjbGFzc2lmaWVkIGFzIHNlcGFyYXRlIHBoeWxhLiAgTWFnbmlmeSBzb21l IG9mIHRoZW0NYmV5b25kIHRoZSBmZXcgY2VudGltZXRlcnMgb2YgdGhlaXIgYWN0dWFsIHNpemUsIGFu
        ZCB5b3UgYXJlIG9uDXRoZSBzZXQgb2YgYSBzY2llbmNlIGZpY3Rpb24gZmlsbTsgb25lIHBhcnRpY3Vs YXJseSBhcnJlc3RpbmcNY3JlYXR1cmUgaGFzIGJlZW4gZm9ybWFsbHkgbmFtZWQglEhhbGx1Y2lnZW5p YZUuICBXaXRoaW4ga25vd24NZ3JvdXBzLCBCdXJnZXNzIGRpdmVyc2l0eSBmYXIgZXhjZWVkcyB0aGUg
        bW9kZXJuIHJhbmdlLiAgVGhlDUJ1cmdlc3MgU2hhbGUsIGZvciBleGFtcGxlLCBpbmNsdWRlcyBlYXJs eSByZXByZXNlbnRhdGl2ZXMgb2YgYWxsDWZvdXIgbWFqb3Iga2luZHMgb2YgYXJ0aHJvcG9kcywgdGhl IGRvbWluYW50IGFuaW1hbHMgb24gZWFydGgNdG9kYXkgqakgdGhlIHRyaWxvYml0ZXMgKG5vdyBleHRp
        bmN0KSwgdGhlIGNydXN0YWNlYW5zIChpbmNsdWRpbmcNbG9ic3RlcnMsIGNyYWJzIGFuZCBzaHJpbXAp LCB0aGUgY2hlbGljZXJhdGVzIChpbmNsdWRpbmcgc3BpZGVycw1hbmQgc2NvcnBpb25zKSwgYW5kIHRo ZSB1bmlyYW1pYW5zIChpbmNsdWRpbmcgaW5zZWN0cykuICBCdXQgdGhlDUJ1cmdlc3MgU2hhbGUgYWxz
        byBjb250YWlucyBzb21lIDIwqTMwIGRpZmZlcmVudCBraW5kcyBvZg1hcnRocm9wb2RzIHRoYXQgY2Fu bm90IGJlIHBsYWNlZCBpbnRvIGFueSBtb2Rlcm4gZ3JvdXAuICBDb25zaWRlcg10aGUgbWFnbml0dWRl IG9mIHRoaXMgZGlmZmVyZW5jZS4gIFRheG9ub21pc3RzIGhhdmUgZGVzY3JpYmVkDWFsbW9zdCBhIG1p
        bGxpb24gc3BlY2llcyBvZiBhcnRocm9wb2RzOyBhbGwgZml0IGludG8gZm91ciBtYWpvcg1ncm91cHMu ICBPbmUgcXVhcnJ5IGluIEJyaXRpc2ggQ29sdW1iaWEsIHJlcHJlc2VudGluZyB0aGUgZmlyc3QNZXhw bG9zaW9uIG9mIG11bHRpY2VsbHVsYXIgbGlmZSwgcmV2ZWFscyBtb3JlIHRoYW4gMjAgYWRkaXRpb25h
        bA1hcnRocm9wb2QgZGVzaWducyEgIFRoZSBoaXN0b3J5IG9mIGxpZmUgaXMgYSBzdG9yeSBvZiBtYXNz aXZlDXdpbm5vd2luZyBmb2xsb3dlZCBieSBkaWZmZXJlbnRpYXRpb24gd2l0aGluIGEgZmV3IHN1cnZp dmluZw1zdG9ja3MsIG5vdCB0aGUgY29udmVudGlvbmFsIHRhbGUgb2Ygc3RlYWRpbHkgaW5jcmVhc2lu
        Zw1leGNlbGxlbmNlLCBjb21wbGV4aXR5IGFuZCBkaXZlcnNpdHkuCglBcyBhbiBlcGl0b21lIG9mIHRo aXMgbmV3IGludGVycHJldGF0aW9uLCBjb21wYXJlIENoYXJsZXMgUi4NS25pZ2h0J3MgcmVzdG9yYXRp b24gb2YgdGhlIEJ1cmdlc3MgZmF1bmEsIGJhc2VkIGVudGlyZWx5IG9uDVdhbGNvdHQncyB2ZXJzaW9u
        LCB3aXRoIG9uZSB0aGF0IGFjY29tcGFuaWVkIGEgcmVjZW50IGFydGljbGUNKGw5ODUpIGRlZmVuZGlu ZyB0aGUgcmV2ZXJzZWQgdmlldy4gIAoJbC4gIFRoZSBjZW50ZXJwaWVjZSBvZiBLbmlnaHQncyByZWNv bnN0cnVjdGlvbiBpcyBhbiBhbmltYWzcZAAAAAAAANwLbmFtZWQglFNpZG5leWlhlSwgbGFyZ2VzdCBv
        ZiBCdXJnZXNzIGFydGhyb3BvZHMga25vd24gIHRvIFdhbGNvdHQsDWFuZCBhbiBhbmNlc3RyYWwgY2hl bGljZXJhdGUgaW4gaGlzIHZpZXcuICBJbiB0aGUgbW9kZXJuIHZlcnNpb24sDZRTaWRuZXlpYZUgaGFz IGJlZW4gYmFuaXNoZWQgdG8gdGhlIGxvd2VyIHJpZ2h0LCBpdHMgcGxhY2UgdXN1cnBlZA1ieSCUQW5v
        bWFsb2NhcmlzlSwgdHdvIGZvb3QgdGVycm9yIG9mIHRoZSBDYW1icmlhbiBzZWFzLCBhbmQgb25lIG9m DXRoZSBCdXJnZXNzICJ1bmNsYXNzaWZpYWJsZXMuIgoJMi4gIEtuaWdodCByZXN0b3JlcyBlYWNoIGFu aW1hbCBhcyBhIG1lbWJlciBvZiBhIHdlbGypa25vd24NZ3JvdXAgdGhhdCBlbmpveWVkIHN1YnN0YW50
        aWFsIGxhdGVyIHN1Y2Nlc3MuICCUTWFycmVsbGGVIGlzDXJlY29uc3RydWN0ZWQgYXMgYSB0cmlsb2Jp dGUsIJRXYXB0aWGVIGFzIGEgcHJvdG+pc2hyaW1wIChzZWUNRmlndXJlIGwpIKmpIHRob3VnaCBib3Ro IGFyZSByYW5rZWQgYW1vbmcgdGhlIHVucGxhY2VhYmxlDWFydGhyb3BvZHMgdG9kYXkuICBUaGUgbW9k
        ZXJuIHZlcnNpb24gZmVhdHVyZXMgdGhlIHVuaXF1ZSBCdXJnZXNzDXBoeWxhIKmpIGdpYW50IJRBbm9t YWxvY2FyaXOVLCCUT3BhYmluaWGVIHdpdGggaXRzIGZpdmUgZXllcyBhbmQNZnJvbnRhbCAibm96emxl LCIglFdpd2F4aWGVIHdpdGggaXRzIGNvdmVyaW5nIG9mIHNjYWxlcyBhbmQgdHdvDXJvd3Mgb2YgZG9y
        c2FsIHNwaW5lcyAoRmlndXJlIDIpLgoJMy4gIEtuaWdodCdzIGNyZWF0dXJlcyBvYmV5IHRoZSBjb252 ZW50aW9uIG9mIHRoZSAicGVhY2VhYmxlDWtpbmdkb20uIiAgQWxsIGFyZSBjcm93ZGVkIHRvZ2V0aGVy IGluIGFuIGFwcGFyZW50IGhhcm1vbnkgb2YNbXV0dWFsIHRvbGVyYXRpb247IHRoZXkgZG8gbm90IGlu
        dGVyYWN0LiAgVGhlIG1vZGVybiB2ZXJzaW9uDXJldGFpbnMgdGhpcyB1bnJlYWxpc3RpYyBjcm93ZGlu ZyAoYSBuZWNlc3NhcnkgdHJhZGl0aW9uIGZvciAgICAgDWVjb25vbXkncyBzYWtlKSwgYnV0IGZlYXR1 cmVzIHRoZSBlY29sb2dpY2FsIHJlbGF0aW9ucyB1bmNvdmVyZWQNYnkgcmVjZW50IHJlc2VhcmNoOiBw
        cmlhcHVsaWQgYW5kIHBvbHljaGFldGUgd29ybXMgYnVycm93IGluIHRoZQ1tdWQ7IHRoZSBteXN0ZXJp b3VzIJRBeXNoZWFpYZUgZ3JhemVzIG9uIHNwb25nZXM7IJRBbm9tYWxvY2FyaXOVDWV2ZXJ0cyBpdHMg amF3IGFuZCBjcnVuY2hlcyBhIHRyaWxvYml0ZS4KCTQuICBDb25zaWRlciCUQW5vbWFsb2NhcmlzlSBh
        cyBhIHByb3RvdHlwZSBmb3IgcmV2aXNpb24uIA1LbmlnaHQgaW5jbHVkZXMgdHdvIGFuaW1hbHMgb21p dHRlZCBmcm9tIHRoZSBtb2Rlcm4NcmVjb25zdHJ1Y3Rpb246IGplbGx5ZmlzaGVzIGluIHRoZSB1cHBl ciByaWdodCwgYW5kIGEgY3VyaW91cw1hcnRocm9wb2QsIGNlbnRlciBsZWZ0LCBjb21wb3NlZCBvZiBh
        IHNocmltcCdzIHJlYXIgZW5kIGNvdmVyZWQNaW4gZnJvbnQgYnkgYSBiaXZhbHZlZCBzaGVsbC4gIEJv dGggYXJlIGVycm9ycyBjb21taXR0ZWQgaW4gdGhl3GQAAAAAAgDcC292ZXJ6ZWFsb3VzIGF0dGVtcHQg dG8gc2hvZWhvcm4gQnVyZ2VzcyBhbmltYWxzIGludG8gbW9kZXJuDWdyb3Vwcy4gIFdhbGNvdHQncyAi
        amVsbHlmaXNoIiB0dXJucyBvdXQgdG8gYmUgdGhlIGNpcmNsZXQgb2YNcGxhdGVzIHN1cnJvdW5kaW5n IHRoZSBtb3V0aCBvZiCUQW5vbWFsb2NhcmlzlS4gIFRoZSBwb3N0ZXJpb3IgYm9keQ1vZiBoaXMgInNo cmltcCIgaXMgYSBmZWVkaW5nIGFwcGVuZGFnZSBvZiB0aGUgc2FtZSBjYXJuaXZvcm91cw1iZWFzdC4g
        IFdhbGNvdHQncyBwcm90b3R5cGVzIGZvciB0d28gbW9kZXJuIGdyb3VwcyBiZWNvbWUgYm9keQ1wYXJ0 cyBvZiB0aGUgbGFyZ2VzdCBCdXJnZXNzIG9kZGJhbGwsIHRoZSBhcHByb3ByaWF0ZWx5IG5hbWVkDZRB bm9tYWxvY2FyaXOVLiAgCglJIHRodXMgYmVnaW4gYnkgZXBpdG9taXppbmcgYSBjb21wbGV4IHNoaWZ0
        IGluIGlkZWFzIHdpdGggYW4NYWx0ZXJhdGlvbiBpbiBwaWN0dXJlcy4gIEljb25vZ3JhcGh5IGlzIGEg bmVnbGVjdGVkIGtleSB0bw1jaGFuZ2luZyBvcGluaW9ucywgZm9yIHRoZSBoaXN0b3J5IGFuZCBtZWFu aW5nIG9mIGxpZmUgaW4NZ2VuZXJhbCwgYXMgd2VsbCBhcyBmb3IgdGhlIEJ1cmdlc3Mgc2hhbGUgaW4g
        c3RhcmsgcGFydGljdWxhcnMuCgpCKSAglFRoZSBMYWRkZXIgYW5kIHRoZSBDb25lOiBJY29ub2dyYXBo aWVzIG9mIFByb2dyZXNzlQoJRmFtaWxpYXJpdHkgaGFzIGJlZW4gYnJlZWRpbmcgb3ZlcnRpbWUgaW4g b3VyIG1vdHRvZXMgqakNcHJvZHVjaW5nIGV2ZXJ5dGhpbmcgZnJvbSBjb250ZW1wdCAoYWNjb3JkaW5n
        IHRvIEFlc29wKSB0bw1jaGlsZHJlbiAoYXMgTWFyayBUd2FpbiBvYnNlcnZlZCkuICBQb2xvbml1cywg YW1pZHN0IGhpcw1sb3F1YWNpb3VzIHdhbmRlcmluZ3MsIHVyZ2VkIExhZXJ0ZXMgdG8gc2VlayBmYW1p bGlhcml0eSwgd2hpbGUNc2h1bm5pbmcgdnVsZ2FyaXR5IKmpIGFuZCB0aGVuLCBoYXZpbmcgY2hvc2Vu
        IHdlbGwsIHRvICJncmFwcGxlIg10aGUgZmFtaWxpYXIgInRvIHRoeSBzb3VsIHdpdGggaG9vcHMgb2Yg c3RlZWwuIgoJWWV0LCBhcyBQb2xvbml1cycgZXZlbnR1YWwgbXVyZGVyZXIgc3RhdGVkIGluIHRoZSBt b3N0DWZhbW91cyBzb2xpbG9xdXkgb2YgYWxsIHRpbWU6ICJheSwgdGhlcmUncyB0aGUgcnViLiIgIFRo
        b3NlIGhvb3BzDW9mIHN0ZWVsIGFyZSBub3QgZWFzaWx5IHVuYm91bmQsIGFuZCB0aGUgY29tZm9ydGFi bHkgZmFtaWxpYXINYmVjb21lcyBhIHByaXNvbiBvZiB0aG91Z2h0LgoJV29yZHMgYXJlIG91ciBmYXZv cmVkIG1lZGl1bSBvZiBlbmZvcmNlZCBjb25zZW5zdXM7IG5vdGhpbmcNaW5zcGlyZXMgb3J0aG9kb3h5
        IGFuZCBwdXJwb3NlZnVsIHVuYW5pbWl0eSBvZiBhY3Rpb24gc28gd2VsbCBhcw1hIGZpbmVseSBjcmFm dGVkIG1vdHRvIKmpIHdpbiBvbmUgZm9yIHRoZSBHaXBwZXIsIGFuZCBHb2Qgc2hlZNxkAAAAAAIA3AtI aXMgZ3JhY2Ugb24gdGhlZS4gIEJ1dCBvdXIgcmVjZW50IGludmVudGlvbiBvZiBzcGVlY2ggY2Fubm90
        DWVudGlyZWx5IGJ1cnkgYW4gZWFybGllciBoZXJpdGFnZS4gIFByaW1hdGVzIGFyZSB2aXN1YWwgYW5p bWFscw1wYXIgZXhjZWxsZW5jZSCpqSBhbmQgdGhlIGljb25vZ3JhcGh5IG9mIHBlcnN1YXNpb24gc3Ry aWtlcyBldmVuDWNsb3NlciB0byB0aGUgY29yZSBvZiBvdXIgYmVpbmcuICBFdmVyeSBkZW1hZ29ndWUs
        IGV2ZXJ5DWh1bW9yaXN0LCBldmVyeSBhZHZlcnRpemluZyBleGVjdXRpdmUgaGFzIGtub3duIGFuZCBl eHBsb2l0ZWQgdGhlDWV2b2NhdGl2ZSBwb3dlciBvZiBhIHdlbGwgY2hvc2VuIHBpY3R1cmUuCglTY2ll bnRpc3RzIGxvc3QgdGhpcyBpbnNpZ2h0IHNvbWV3aGVyZSBhbG9uZyB0aGUgd2F5LiAgV2UNdXNlIHBp
        Y3R1cmVzIG1vcmUgdGhhbiBtb3N0IHNjaG9sYXJzLCBhcnQgaGlzdG9yaWFucyBleGNlcHRlZC4gDSJO ZXh0IHNsaWRlIHBsZWFzZSIgZXZlbiBzdXJwYXNzZXMgIml0IHNlZW1zIHRvIG1lIHRoYXQuLi4iIGFz DXRoZSBtb3N0IGNvbW1vbiBwaHJhc2Ugb2YgcHJvZmVzc2lvbmFsIHRhbGtzIGF0IHNjaWVudGlmaWMN
        bWVldGluZ3MuICBCdXQgb3VyIHBpY3R1cmVzIGFyZSBpbGx1c3RyYXRpb25zIG9mIHdoYXQgd2UgZGVm ZW5kDWJ5IHdvcmRzLiAgRmV3IHNjaWVudGlzdHMgd291bGQgdmlldyBhbiBpbWFnZSBpdHNlbGYgYXMN aW50cmluc2ljYWxseSBpZGVvbG9naWNhbCBpbiBjb250ZW50LiAgUGljdHVyZXMsIGFzIGFjY3VyYXRl
        DW1pcnJvcnMgb2YgbmF0dXJlLCBqdXN0IGFyZS4KCUkgY2FuIHVuZGVyc3RhbmQgc3VjaCBhbiBhdHRp dHVkZSBkaXJlY3RlZCB0b3dhcmRzDXBob3RvZ3JhcGhzIG9mIG9iamVjdHMgqakgdGhvdWdoIG9wcG9y dHVuaXRpZXMgZm9yIHN1YnRsZQ1tYW5pcHVsYXRpb24gYXJlIGxlZ2lvbiBldmVuIGhlcmUuICBCdXQg
        bWFueSBvZiBvdXIgZmlndXJlcyBhcmUNaW5jYXJuYXRpb25zIG9mIGNvbmNlcHRzIG1hc3F1ZXJhZGlu ZyBhcyBuZXV0cmFsIGRlc2NyaXB0aW9ucyBvZg1uYXR1cmUuICBUaGVzZSBhcmUgdGhlIG1vc3QgcG90 ZW50IHNvdXJjZXMgb2YgY29uZm9ybWl0eSwgc2luY2UNaWRlYXMgcGFzc2luZyBhcyBkZXNjcmlwdGlv
        bnMgbGVhZCB1cyB0byBlcXVhdGUgdGhlIHRlbnRhdGl2ZQ13aXRoIHRoZSB1bmFtYmlndW91c2x5IGZh Y3R1YWwuICBTdWdnZXN0aW9ucyBmb3IgdGhlIG9yZ2FuaXphdGlvbg1vZiB0aG91Z2h0IGFyZSB0cmFu c2Zvcm1lZCB0byBlc3RhYmxpc2hlZCBwYXR0ZXJucyBpbiBuYXR1cmUuIA1HdWVzc2VzIGFuZCBodW5j
        aGVzIGJlY29tZSB0aGluZ3MuCglUaGUgZmFtaWxpYXIgaWNvbm9ncmFwaGllcyBvZiBldm9sdXRpb24g YXJlIGFsbCBkaXJlY3RlZCCpqQ1zb21ldGltZXMgY3J1ZGVseSwgc29tZXRpbWVzIHN1YnRseSCpqSB0 b3dhcmRzIHJlaW5mb3JjaW5nIGENY29tZm9ydGFibGUgdmlldyBvZiBodW1hbiBpbmV2aXRhYmlsaXR5
        IGFuZCBzdXBlcmlvcml0eS4gIFRoZdxkAAAAAAIA3AtzdGFya2VzdCB2ZXJzaW9uLCB0aGUgY2hhaW4g b2YgYmVpbmcgb3IgbGFkZGVyIG9mIGxpbmVhcg1wcm9ncmVzcywgaGFzIGFuIGFuY2llbnQsIHByZall dm9sdXRpb25hcnkgcGVkaWdyZWUgKHNlZSBBLk8uDUxvdmVqb3kncyBjbGFzc2ljLCCUVGhlIEdyZWF0
        IENoYWluIG9mIEJlaW5nlSwgbDkzNik6CgkJRmFyIGFzIGNyZWF0aW9uJ3MgYW1wbGUgcmFuZ2UgZXh0 ZW5kcywgCgkJVGhlIHNjYWxlIG9mIHNlbnN1YWwsIG1lbnRhbCBwb3dlcnMgYXNjZW5kczoKCQlNYXJr IGhvdyBpdCBtb3VudHMgdG8gbWFuJ3MgaW1wZXJpYWwgcmFjZSwKCQlGcm9tIHRoZSBncmVlbiBteXJp
        YWRzIGluIHRoZSBwZW9wbGVkIGdyYXNzCgkJCQkJCUFsZXhhbmRlciBQb3BlLCCURXNzYXkgb24gTWFu lQpDb25zaWRlciBhIGZhbW91cyB2ZXJzaW9uIGZyb20gbDc5OSAoRmlndXJlIDMpLiAgSW4gaGlzIJRS ZWd1bGFyDUdyYWRhdGlvbiBpbiBNYW6VLCBCcml0aXNoIHBoeXNpY2lhbiBDaGFybGVzIFdoaXRlIHNo
        b2Vob3JuZWQgYWxsDXRoZSByYW1pZnlpbmcgZGl2ZXJzaXR5IG9mIHZlcnRlYnJhdGUgbGlmZSBpbnRv IGEgc2luZ2xlIG1vdGxleQ1zZXF1ZW5jZSBydW5uaW5nIGZyb20gYmlyZHMgdGhyb3VnaCBjcm9jb2Rp bGVzIGFuZCBkb2dzLCBwYXN0DWFwZXMgYW5kIHVwIHRoZSBjb252ZW50aW9uYWwgcmFjaXN0IGxhZGRl
        ciBvZiBodW1hbiBncm91cHMgdG8gYQ1DYXVjYXNpYW4gcGFyYWdvbiwgZGVzY3JpYmVkIHdpdGggdGhl IHJvY29jbyBmbG91cmlzaCBvZiBXaGl0ZSdzDWR5aW5nIGNlbnR1cnkuIAoJCVdoZXJlIHNoYWxsIHdl IGZpbmQsIHVubGVzcyBpbiB0aGUgRXVyb3BlYW4sIHRoYXQgbm9ibHkNCQlhcmNoZWQgaGVhZCwgY29u
        dGFpbmluZyBzdWNoIGEgcXVhbnRpdHkgb2YgYnJhaW4uLi4NCQlXaGVyZSB0aGUgcGVycGVuZGljdWxh ciBmYWNlLCB0aGUgcHJvbWluZW50IG5vc2UsIGFuZA0JCXJvdW5kIHByb2plY3RpbmcgY2hpbj8gIFdo ZXJlIHRoYXQgdmFyaWV0eSBvZiBmZWF0dXJlcywNCQlhbmQgZnVsbG5lc3Mgb2YgZXhwcmVzc2lvbi4u
        LiB0aG9zZSByb3N5IGNoZWVrcyBhbmQNCQljb3JhbCBsaXBzPwoJVGhpcyB0cmFkaXRpb24gbmV2ZXIg dmFuaXNoZWQsIGV2ZW4gaW4gb3VyIG1vcmUgZW5saWdodGVuZWQNYWdlLiAgSW4gdGhlIGw5MjAncywg SGVucnkgRmFpcmZpZWxkIE9zYm9ybiBjZWxlYnJhdGVkIHRoZSBsaW5lYXINYWNjcmV0aW9uIG9mIGNv
        Z25pdGlvbiBpbiBhIGZpZ3VyZSBmdWxsIG9mIGlsbHVtaW5hdGluZyBlcnJvcnMuIA1DaGltcHMgYXJl IG5vdCBhbmNlc3RvcnMgKEZpZ3VyZSA0KSwgYnV0IG1vZGVybiBjb3VzaW5zIGVxdWFsbHkNZGlzdGFu dCBpbiBldm9sdXRpb25hcnkgdGVybXMgZnJvbSB0aGUgdW5rbm93biBmb3JlYmVhciBvZtxkAAAAAAIA
        3AtBZnJpY2FuIGdyZWF0IGFwZXMgYW5kIGh1bWFucy4gIJRQaXRoZWNhbnRocm9wdXOVICiUSG9tb5Ug lGVyZWN0dXOVIGluDW1vZGVybiB0ZXJtcykgaXMgYSBwb3RlbnRpYWwgYW5jZXN0b3IsIGFuZCBvbmx5 IGxlZ2l0aW1hdGUgbWVtYmVyDW9mIHRoZSBzZXF1ZW5jZS4gIFRoZSBpbmNsdXNpb24gb2YgUGlsdGRv
        d24gaXMgZXNwZWNpYWxseQ1yZXZlYWxpbmcuICBXZSBub3cga25vdyB0aGF0IFBpbHRkb3duIHdhcyBh IGZyYXVkIGNvbXBvc2VkIG9mIGENbW9kZXJuIGh1bWFuIGNyYW5pdW0gYW5kIGFuIGFwZSdzIGphdy4g IEFzIGEgY29udGVtcG9yYXJ5IHNrdWxsLA1QaWx0ZG93biBwb3NzZXNzZWQgYSBicmFpbiBvZiBtb2Rl
        cm4gc2l6ZTsgeWV0IHNvIGNvbnZpbmNlZCB3ZXJlDU9zYm9ybidzIGNvbGxlYWd1ZXMgdGhhdCBodW1h biBmb3NzaWxzIG11c3Qgc2hvdyBpbnRlcm1lZGlhdGUNdmFsdWVzIG9uIGEgbGFkZGVyIG9mIHByb2dy ZXNzLCB0aGF0IHRoZXkgcmVjb25zdHJ1Y3RlZA1QaWx0ZG93bidzIHNrdWxsIGFjY29yZGluZyB0byB0
        aGVpciBleHBlY3RhdGlvbnMuICBBcyBmb3INTmVhbmRlcnRoYWwsIHRoZXNlIGNyZWF0dXJlcyB3ZXJl IHByb2JhYmx5IGNsb3NlIGNvdXNpbnMNYmVsb25naW5nIHRvIGEgc2VwYXJhdGUgc3BlY2llcywgbm90 IGFuY2VzdG9ycy4gIEluIGFueSBjYXNlLA10aGV5IGhhZCBicmFpbnMgYXMgbGFyZ2Ugb3IgbGFyZ2Vy
        IHRoYW4gb3VycywgT3Nib3JuJ3MgbGFkZGVyDW5vdHdpdGhzdGFuZGluZy4KCU5vciBoYXZlIHdlIGFi YW5kb25lZCB0aGlzIGljb25vZ3JhcGh5IGluIG91ciBnZW5lcmF0aW9uLgpDb25zaWRlciBGaWd1cmUg NSwgZnJvbSBvbmUgb2YgdGhlIGJlc3QgYW5kIG1vc3QgcG9wdWxhciBvZg1tb2Rlcm4gdGV4dGJvb2tz
        IChDYW1wYmVsbCwgbDk3NikuICBUaGUgbWFyY2ggb2YgcHJvZ3Jlc3MsIHNpbmdsZQ1maWxlLCBjb3Vs ZCBub3QgYmUgbW9yZSBncmFwaGljLiAgV2UgZGVzY2VuZCBmcm9tIHRoZSB0cmVlcyBhbmQNYmVnaW4g b3VyIHVwd2FyZCBqb3VybmV5IHRvIGxhcmdlciBzaXplLCBiaWdnZXIgYnJhaW5zLCBsZXNzDWhhaXJ5
        IGJvZGllcywgYW5kIG1vcmUgZXJlY3QgZ2FpdC4gIFNtb290aCBpbnRlcm1lZGlhY3kgaXMgZm9yY2Vk DXVwb24gcmVjYWxjaXRyYW50IGRhdGEuICBPdXIgYXVzdHJhbG9waXRoZWNpbmUgYW5jZXN0b3JzIGFy ZQ1yZWNvbnN0cnVjdGVkIGFzIHN0b29wqXNob3VsZGVyZWQsIHRob3VnaCB3ZSBoYXZlIGtub3duIGZv
        ciBmaWZ0eQ15ZWFycyB0aGF0IHRoZXkgcHJvYmFibHkgd2Fsa2VkIGFzIGVyZWN0IGFzIHlvdSBvciBJ LiAgTW9yZW92ZXIsDWxlc3Qgd2UgdGhpbmsgdGhhdCBvbmx5IFdlc3Rlcm4gY3VsdHVyZSBwcm9tb3Rl cyB0aGlzIGNvbmNlaXQsIEkNcHJlc2VudCBvbmUgaWxsdXN0cmF0aW9uIG9mIGl0cyBzcHJlYWQgKEZp
        Z3VyZSA2KSwgcHVyY2hhc2VkIGF0DXRoZSBiYXphYXIgb2YgQWdyYSBpbiBsOTg1LiAgCglUaGUgIm1h cmNoIG9mIHByb2dyZXNzIiBhcyCUdGhllSBjYW5vbmljYWwgcmVwcmVzZW50YXRpb24gb2bcZAAAAAAA ANwLZXZvbHV0aW9uIKmpIHRoZSBvbmUgcGljdHVyZSBpbW1lZGlhdGVseSBncmFzcGVkIGFuZCB2aXNj
        ZXJhbGx5DXVuZGVyc3Rvb2QgYnkgYWxsIKmpIG1heSBiZXN0IGJlIGFwcHJlY2lhdGVkIGJ5IGl0cyBw cm9taW5lbnQgdXNlDWluIGh1bW9yIGFuZCBhZHZlcnRpc2luZy4gIFRoZXNlIHByb2Zlc3Npb25zIHBy b3ZpZGUgb3VyIGJlc3QNdGVzdCBvZiBwdWJsaWMgcGVyY2VwdGlvbnMuICBKb2tlcyBhbmQgYWRzIG11
        c3QgImNsaWNrIiBpbiB0aGUNZmxlZXRpbmcgc2Vjb25kIHRoYXQgb3VyIGF0dGVudGlvbiBncmFudHMg dGhlbS4gIENvbnNpZGVyIEZpZ3VyZQ03LCBkcmF3biBieSBMYXJyeSBKb2huc29uIGZvciB0aGUgQm9z dG9uIEdsb2JlLCBiZWZvcmUgYSByZWNlbnQNUGF0cmlvdHOpUmFpZGVycyBmb290YmFsbCBnYW1lLiAg
        T3IgRmlndXJlIDggYnkgdGhlIGNhcnRvb25pc3QNU3plcCwgb24gdGhlIHByb3BlciBwbGFjZSBvZiB0 ZXJyb3Jpc207IG9yIEZpZ3VyZSA5LCBvbg0ic2NpZW50aWZpYyBjcmVhdGlvbmlzbS4iICBPciBGaWd1 cmUgbDAgYnkgbXkgZnJpZW5kIE1pa2UgUGV0ZXJzLA1vbiBzb2NpYWwgcG9zc2liaWxpdGllcyB0cmFk
        aXRpb25hbGx5IG9wZW4gdG8gbWVuIGFuZCB3b21lbi4gIEZvcg1hZHZlcnRpc2luZywgY29uc2lkZXIg dGhlIGV2b2x1dGlvbiBvZiBHdWluZXNzIChGaWd1cmUgbGwpIG9yIG9mDXJlbnRhbCB0ZWxldmlzaW9u 4gAAAQAEAAQB/wpKjSBJbnZva2luZyBhbm90aGVyIGFzcGVjdCBvZiB0aGUgc2FtZSBpbWFnZXJ5IKmp
        IHRoZQ1lcXVhdGlvbiBvZiBvbGQgYW5kIGV4dGluY3Qgd2l0aCBpbmFkZXF1YXRlIKmpIEdyYW5hZGEg ZXhob3J0cyB1cw10byByZW50IHJhdGhlciB0aGFuIGJ1eSBiZWNhdXNlICJ0b2RheSdzIGxhdGVzdCBt b2RlbHMgY291bGQgYmUNb2Jzb2xldGUgYmVmb3JlIHlvdSBjYW4gc2F5IGJyb250b3NhdXJ1cy4iIOIg
        KEZpZ3VyZSBsMikuIAoJVGhlIHN0cmFpZ2h0amFja2V0IG9mIGxpbmVhciBhZHZhbmNlIGdvZXMgYmV5 b25kIGljb25vZ3JhcGh5DXRvIHRoZSBkZWZpbml0aW9uIG9mIGV2b2x1dGlvbi4gIFRoZSB3b3JkIGl0 c2VsZiBiZWNvbWVzIGENc3lub255bSBmb3IgcHJvZ3Jlc3MhICBUaGUgbWFrZXJzIG9mIERvcmFsIGNp
        Z2FyZXR0ZXPiAAACAAgMCAH/CkqNIFdvbmRlcmZ1bGx5IGlyb25pYywgc2luY2UgdGhlIHNlcXVlbmNl IHNob3dlZCwgYmFzaWNhbGx5LA1tb3JlIGVmZmVjdGl2ZSBmaWx0ZXJzLiAgRXZvbHV0aW9uLCB0byBw cm9mZXNzaW9uYWxzLCBpcw1hZGFwdGF0aW9uIHRvIGNoYW5naW5nIGVudmlyb25tZW50cywgbm90IHBy
        b2dyZXNzLiAgU2luY2UgZmlsdGVycw1hcmUgcmVzcG9uc2VzIHRvIG5ldyBjb25kaXRpb25zIKmpIHB1 YmxpYyBrbm93bGVkZ2Ugb2YgaGVhbHRoDWRhbmdlcnMgqakgRG9yYWwgZGlkIHVzZSAiZXZvbHV0aW9u IiBwcm9wZXJseS4gIFN1cmVseSwgaG93ZXZlciwNdGhleSBpbnRlbmRlZCAiYWJzb2x1dGVseSBiZXR0
        ZXIiIHJhdGhlciB0aGFuICJwdW50aW5nIHRvDW1haW50YWluIHByb2ZpdCIgqakgYSByYXRoZXIgZ3Jp c2x5IGNsYWltIGluIHRoZSBsaWdodCBvZiBzZXZlcmFsDW1pbGxpb24gZGVhdGhzIGF0dHJpYnV0YWJs ZSB0byB0aGUgZW50aXJlIGluZHVzdHJ5LuIgb25jZQ1wcmVzZW50ZWQgYSBsaW5lYXIgc2VxdWVuY2Ug
        b2YgImltcHJvdmVkIiBwcm9kdWN0cyB0aHJvdWdoIHRoZQ15ZWFycywgYWxsIHVuZGVyIHRoZSBoZWFk aW5nICJEb3JhbCdzIHRoZW9yeSBvZiBldm9sdXRpb24uIiANKFBlcmhhcHMgdGhleSBhcmUgbm93IGVt YmFycmFzc2VkIGJ5IHRoaXMgbWlzZ3VpZGVkIGNsYWltLCBzaW5jZQ10aGV5IHJlZnVzZWQgbWUgcGVy
        bWlzc2lvbiB0byByZXByaW50IHRoZSBhZC4pICBPciBjb25zaWRlctxIAB4AAAIA3AtGaWd1cmUgbDMg ZnJvbSBBbmR5IENhcHAuICBGbG8gaGFzIG5vIHByb2JsZW0gd2l0aCBldm9sdXRpb24sIGJ1dA1zaGUg ZGVmaW5lcyBpdCBhcyBwcm9ncmVzcywgYW5kIHZpZXdzIEFuZHkncyBxdWFkcnVwZWRhbA1ob21lY29t
        aW5nIGFzIHNvbWV0aGluZyBkaWZmZXJlbnQsIGFuZCBpbiByZXZlcnNlLgoJTGlmZSBpcyBhIGNvcGlv dXNseSBicmFuY2hpbmcgYnVzaCwgY29udGludWFsbHkgcHJ1bmVkIGJ5DXRoZSBncmltIHJlYXBlciBv ZiBleHRpbmN0aW9uLCBub3QgYSBsYWRkZXIgb2YgcHJlZGljdGFibGUNcHJvZ3Jlc3MuICBNb3N0IHBl
        b3BsZSBtYXkga25vdyB0aGlzIGFzIGEgcGhyYXNlIHRvIGJlIHV0dGVyZWQsDWJ1dCBub3QgYXMgYSBj b25jZXB0IGJyb3VnaHQgaW50byB0aGUgZGVlcCBpbnRlcmlvciBvZg11bmRlcnN0YW5kaW5nLiAgVGh1 cyB3ZSBjb250aW51YWxseSBtYWtlIGVycm9ycyBpbnNwaXJlZCBieQ11bmNvbnNjaW91cyBhbGxlZ2lh
        bmNlIHRvIHRoZSBsYWRkZXIgb2YgcHJvZ3Jlc3MsIGV2ZW4gd2hlbiB3ZQ1leHBsaWNpdGx5IGRlbnkg c3VjaCBhIHN1cGVyYW5udWF0ZWQgdmlldyBvZiBsaWZlLiAgQ29uc2lkZXIgdHdvDWV4YW1wbGVzLCB0 aGUgc2Vjb25kIHByb3ZpZGluZyBhIGtleSB0byBvdXIgY29udmVudGlvbmFsDW1pc3VuZGVyc3RhbmRp
        bmcgb2YgdGhlIEJ1cmdlc3MgU2hhbGUuCglGaXJzdCwgaW4gYW4gZXJyb3IgdGhhdCBJIGNhbGwgImxp ZmUncyBsaXR0bGUgam9rZSIgKEdvdWxkLA1sOTg3KSwgd2UgYXJlIHZpcnR1YWxseSBjb21wZWxsZWQg dG8gdGhlIHN0dW5uaW5nIG1pc3Rha2Ugb2YNY2l0aW5nIHVuc3VjY2Vzc2Z1bCBsaW5lYWdlcyBhcyBj
        bGFzc2ljICJ0ZXh0Ym9vayIgY2FzZXMgb2YNImV2b2x1dGlvbi4iICBXZSBkbyB0aGlzIGJlY2F1c2Ug d2UgdHJ5IHRvIGV4dHJhY3QgYSBzaW5nbGUgbGluZQ1vZiBhZHZhbmNlIGZyb20gdGhlIHRydWUgdG9w b2xvZ3kgb2YgY29waW91cyBicmFuY2hpbmcuICBJbiB0aGlzDW1pc2d1aWRlZCBlZmZvcnQsIHdlIGFy
        ZSBpbmV2aXRhYmx5IGRyYXduIHRvIGJ1c2hlcyBzbyBuZWFyIHRoZQ1icmluayBvZiB0b3RhbCBhbm5p aGlsYXRpb24gdGhhdCB0aGV5IGNvbnRhaW4gb25seSBvbmUgc3Vydml2aW5nDXR3aWcuICBXZSB0aGVu IHZpZXcgdGhpcyB0d2lnIGFzIHRoZSBhY21lIG9mIHVwd2FyZCBhY2hpZXZlbWVudCwNcmF0aGVyIHRo
        YW4gdGhlIHByb2JhYmxlIGxhc3QgZ2FzcCBvZiBhIHJpY2hlciBhbmNlc3RyeS4gIAoJQ29uc2lkZXIg dGhlIGdyZWF0IHdhcmhvcnNlIG9mIHRyYWRpdGlvbiCpqSB0aGUgZXZvbHV0aW9uYXJ5DWxhZGRlciBv ZiBob3JzZXMgdGhlbXNlbHZlcyAoRmlndXJlIGw0KS4gIFRvIGJlIHN1cmUsIGFuIHVuYnJva2VuDWV2
        b2x1dGlvbmFyeSBjb25uZWN0aW9uIGRvZXMgbGluayCUSHlyYWNvdGhlcml1bZUgKCKURW9oaXBwdXOV IikgdG8NbW9kZXJuIJRFcXV1c5UuICBBbmQsIHllcyBhZ2FpbiwgbW9kZXJuIGhvcnNlcyBhcmUgYmln Z2VyLCB3aXRoDWZld2VyIHRvZXMgYW5kIGhpZ2hlciBjcm93bmVkIHRlZXRoLiAgQnV0IJRIeXJhY290
        aGVyaXVtlamURXF1dXOVIGlz3GQAAAAAAgDcC25vdCBhIGxhZGRlciwgb3IgZXZlbiBhIGNlbnRyYWwg bGluZWFnZS4gIFRoaXMgc2VxdWVuY2UgaXMgYnV0DW9uZSBsYWJ5cmludGhpbmUgcGF0aHdheSBhbW9u ZyB0aG91c2FuZHMgaW4gYSBjb21wbGV4IGJ1c2guICBUaGlzDXBhcnRpY3VsYXIgcm91dGUgaGFzIGFj
        aGlldmVkIGl0cyBwcm9taW5lbmNlIGZvciBvbmUgaXJvbmljDXJlYXNvbiBhbG9uZSCpqSBiZWNhdXNl IGFsbCBvdGhlciB0d2lncyBhcmUgZXh0aW5jdC4gIJRFcXV1c5UgaXMNdGhlIG9ubHkgYnJhbmNoIGxl ZnQsIGhlbmNlIHRoZSB0aXAgb2YgYSBsYWRkZXIgaW4gb3VyIGZhbHNlDWljb25vZ3JhcGh5LiAgSG9y
        c2VzIGJlY2FtZSB0aGUgY2xhc3NpYyBjYXNlIG9mIHByb2dyZXNzaXZlDWV2b2x1dGlvbiBiZWNhdXNl IHRoZWlyIGJ1c2ggaGFzIGJlZW4gc28gdW5zdWNjZXNzZnVsLiAgV2UgbmV2ZXINZ3JhbnQgcHJvcGVy IGFjY2xhaW0gdG8gdGhlIHJlYWwgdHJpdW1waHMgb2YgbWFtbWFsaWFuIGV2b2x1dGlvbi4NV2hvIGhh
        cyBldmVyIGhlYXJkIGEgc3RvcnkgYWJvdXQgdGhlIGV2b2x1dGlvbiBvZiBiYXRzLA1hbnRlbG9wZXMs IG9yIHJvZGVudHMgqakgdGhvdWdoIHRoZXkgYXJlIHRoZSBjdXJyZW50IGNoYW1waW9ucyBvZg1tYW1t YWxpYW4gbGlmZS4gIFdlIHRlbGwgbm8gc3VjaCB0YWxlcyBiZWNhdXNlIHdlIGNhbm5vdA1saW5lYXJp
        emUgdGhlIGJvdW50ZW91cyBzdWNjZXNzIG9mIHRoZXNlIGNyZWF0dXJlcyBpbnRvIG91cg1mYXZvcmVk IGxhZGRlci4gIFRoZXkgcHJlc2VudCB1cyB3aXRoIHRob3VzYW5kcyBvZiB0d2lncyBvbiBhDXZpZ29y b3VzIGJ1c2guCglOZWVkIEkgcmVtaW5kIGV2ZXJ5b25lIHRoYXQgYXQgbGVhc3Qgb25lIG90aGVyIGxp
        bmVhZ2Ugb2YNbWFtbWFscywgZXNwZWNpYWxseSBkZWFyIHRvIG91ciBoZWFydHMgZm9yIHBhcm9jaGlh bCByZWFzb25zLA1zaGFyZXMgd2l0aCBob3JzZXMgYm90aCB0aGUgcHJvcGVyIHRvcG9sb2d5IG9mIGEg YnVzaCB3aXRoIG9uZQ1zdXJ2aXZpbmcgdHdpZywgYW5kIHRoZSBmYWxzZSBpY29ub2dyYXBoeSBvZiBh
        IG1hcmNoIHRvIHByb2dyZXNzLgoJQXMgYSBzZWNvbmQgZ3JlYXQgZXJyb3IsIHdlIG1heSBhYmFuZG9u IHRoZSBsYWRkZXIgYW5kDWFja25vd2xlZGdlIHRoZSBicmFuY2hpbmcgY2hhcmFjdGVyIG9mIGV2b2x1 dGlvbmFyeSBsaW5lYWdlcywgeWV0DXN0aWxsIHBvcnRyYXkgdGhlIHRyZWUgb2YgbGlmZSBpbiBhIGNv
        bnZlbnRpb25hbCBtYW5uZXIgY2hvc2VuIHRvDXZhbGlkYXRlIG91ciBob3BlcyBmb3IgcHJlZGljdGFi bGUgcHJvZ3Jlc3MuCglUaGUgdHJlZSBvZiBsaWZlIGdyb3dzIHdpdGggYSBmZXcgY3J1Y2lhbCBjb25z dHJhaW50cyB1cG9uDWl0cyBmb3JtLiAgRmlyc3QsIHNpbmNlIGFueSB3ZWxsqWRlZmluZWQgdGF4b25v
        bWljIGdyb3VwIGNhbg10cmFjZSBpdHMgb3JpZ2luIHRvIGEgc2luZ2xlIGNvbW1vbiBhbmNlc3Rvciwg ZXZvbHV0aW9uYXJ5IHRyZWVz3GAAAAAAAwDcC211c3QgaGF2ZSBhIHVuaXF1ZSBiYXNhbCB0cnVuay7i AAADABMAEwH/CkqNIFByb3Blcmx5IGRlZmluZWQgZ3JvdXBzIHdpdGggc2luZ2xlIGNvbW1vbiBhbmNl
        c3RvcnMgYXJlDWNhbGxlZCAibW9ub3BoeWxldGljLiIgIFRheG9ub21pc3RzIGluc2lzdCB1cG9uIG1v bm9waHlseSBpbg1mb3JtYWwgY2xhc3NpZmljYXRpb24sIGJ1dCBtYW55IHZlcm5hY3VsYXIgbmFtZXMg ZG8gbm90DWNvcnJlc3BvbmQgdG8gd2VsbKljb25zdGl0dXRlZCBldm9sdXRpb25hcnkgZ3JvdXBzIGJl
        Y2F1c2UgdGhleQ1pbmNsdWRlIGNyZWF0dXJlcyB3aXRoIGRpc3BhcmF0ZSBhbmNlc3RyaWVzIKmpICJw b2x5cGh5bGV0aWMiDWdyb3VwcyBpbiB0ZWNobmljYWwgcGFybGFuY2UuICBPbGRlciBmb2xrIGNsYXNz aWZpY2F0aW9ucyB0aGF0DWluY2x1ZGVkIGJhdHMgYW1vbmcgYmlyZHMsIG9yIHdoYWxlcyBhbW9uZyBm
        aXNoZXMgd2VyZQ1wb2x5cGh5bGV0aWMuICBUaGUgdmVybmFjdWxhciB0ZXJtICJhbmltYWwiIGl0c2Vs ZiBwcm9iYWJseQ1kZW5vdGVzIGEgcG9seXBoeWxldGljIGdyb3VwaW5nIHdpdGggc2V2ZXJhbCB0cnVu a3MsIHNpbmNlDXNwb25nZXMgKGFsbW9zdCBzdXJlbHkpLCBhbmQgcHJvYmFibHkgY29yYWxzIGFuZCB0
        aGVpciBhbGxpZXMgYXMNd2VsbCwgYXJvc2Ugc2VwYXJhdGVseSBmcm9tIHVuaWNlbGx1bGFyIGFuY2Vz dG9ycyCpqSB3aGlsZSBhbGwNb3RoZXIgYW5pbWFscyBvZiBvdXIgb3JkaW5hcnkgZGVmaW5pdGlvbnMg YmVsb25nIHRvIGEgdGhpcmQNZGlzdGluY3QgZ3JvdXAuICBUaGUgQnVyZ2VzcyBTaGFsZSBjb250YWlu
        cyBudW1lcm91cyBzcG9uZ2VzLCBhbmQNcHJvYmFibHkgc29tZSBtZW1iZXJzIG9mIHRoZSBjb3JhbCBw aHlsdW0gYXMgd2VsbCwgYnV0IHRoaXMgYm9vaw13aWxsIHRyZWF0IG9ubHkgdGhlIHRoaXJkIGdyZWF0 IGdyb3VwIG9mIGNvZWxvbWF0ZXMsIG9yIGFuaW1hbHMNd2l0aCBhIGJvZHkgY2F2aXR5LiAgVGhlIGNv
        ZWxvbWF0ZXMgaW5jbHVkZSBhbGwgdmVydGVicmF0ZXMgYW5kDWFsbCBjb21tb24gaW52ZXJ0ZWJyYXRl cyBleGNlcHQgc3BvbmdlcywgY29yYWxzLCBhbmQgdGhlaXINYWxsaWVzLiAgU2luY2UgdGhlIGNvZWxv bWF0ZXMgYXJlIGNsZWFybHkgbW9ub3BoeWxldGljIChIYW5zb24sDWw5NzcpIHRoZSBzdWJqZWN0cyBv
        ZiB0aGlzIGJvb2sgZm9ybSBhIHByb3BlciBldm9sdXRpb25hcnkgZ3JvdXAu4iAgU2Vjb25kLCBhbGwg YnJhbmNoZXMgb2YgdGhlDXRyZWUgZWl0aGVyIGRpZSBvciByYW1pZnkgZnVydGhlci4gIFNlcGFyYXRp b24gaXMgaXJyZXZvY2FibGU7DWRpc3RpbmN0IGJyYW5jaGVzIGRvIG5vdCBqb2luLuIAAAQADyoPAf8K
        So0gVGhpcyBmdW5kYW1lbnRhbCBwcmluY2lwbGUsIHdoaWxlIHRydWUgZm9yIHRoZSBjb21wbGV4DW11 bHRpY2VsbHVsYXIgYW5pbWFscyB0cmVhdGVkIGluIHRoaXMgYm9vaywgZG9lcyBub3QgYXBwbHkgdG8g YWxsDWxpZmUuICBIeWJyaWRpemF0aW9uIGJldHdlZW4gZGlzdGFudCBsaW5lYWdlcyBvY2N1cnMgZnJl
        cXVlbnRseQ1pbiBwbGFudHMsIHByb2R1Y2luZyBhICJ0cmVlIG9mIGxpZmUiIHRoYXQgb2Z0ZW4gbG9v a3MgbW9yZSBsaWtlDWEgbmV0d29yayB0aGFuIGEgY29udmVudGlvbmFsIGJ1c2guICAoSSBmaW5kIGl0 IGFtdXNpbmcgdGhhdCB0aGUNY2xhc3NpYyBtZXRhcGhvciwgdXNlZCBhcyBhIHBpY3R1cmUgb2YgZXZv
        bHV0aW9uIGV2ZXIgc2luY2UNRGFyd2luLCBhbmQgc28gYmVhdXRpZnVsbHkgYWNjdXJhdGUgZm9yIGFu aW1hbHMgqakgIHRoZSAidHJlZSBvZg1saWZlIiCpqSBtYXkgbm90IGFwcGx5IHdlbGwgdG8gdGhlIG9y Z2FuaWMgc291cmNlIG9mIHRoZSBpbWFnZS4pIA1JbiBhZGRpdGlvbiwgd2Ugbm93IGtub3cgdGhhdCBn
        ZW5lcyBjYW4gYmUgdHJhbnNmZXJyZWQgbGF0ZXJhbGx5LA11c3VhbGx5IGJ5IHZpcnVzZXMsIGFjcm9z cyBzcGVjaWVzIGJvdW5kYXJpZXMuICBUaGlzIHByb2Nlc3MgbWF5DWJlIGltcG9ydGFudCBpbiB0aGUg ZXZvbHV0aW9uIG9mIHNvbWUgdW5pY2VsbHVsYXIgY3JlYXR1cmVzLCBidXQNcHJvYmFibHkgcGxheXMg
        b25seSBhIHNtYWxsIHJvbGUgaW4gdGhlIHBoeWxvZ2VueSBvZiBjb21wbGV4DWFuaW1hbHMsIGlmIG9u bHkgYmVjYXVzZSB0d28gZW1icnlvbG9naWNhbCBzeXN0ZW1zIGJhc2VkIHVwb24NaW50cmljYXRlbHkg ZGlmZmVyZW50IGRldmVsb3BtZW50YWwgcGF0aHdheXMgY2Fubm90IG1lc2gsIHJlY2VudA1maWxtcyBh
        Ym91dCBmbGllcyBhbmQgaHVtYW5zIG5vdHdpdGhzdGFuZGluZy7iCglZZXQsIHdpdGhpbiB0aGVzZSBj b25zdHJhaW50cyBvZiCUbW9ub3BoeWx5lSBhbmQglGRpdmVyZ2VuY2WVLA10aGUgZ2VvbWV0cmljIHBv c3NpYmlsaXRpZXMgZm9yIGV2b2x1dGlvbmFyeSB0cmVlcyBhcmUgbmVhcmx5DWVuZGxlc3MuICBBIGJ1
        c2ggbWlnaHQgcXVpY2tseSBleHBhbmQgdG8gbWF4aW1hbCB3aWR0aCBhbmQgdGhlbg10YXBlciBjb250 aW51b3VzbHksIGxpa2UgYSBDaHJpc3RtYXMgdHJlZS4gIE9yIGl0IG1pZ2h0IGRpdmVyc2lmeQ1yYXBp ZGx5LCBidXQgdGhlbiBtYWludGFpbiBpdHMgZnVsbCB3aWR0aCBieSBhIGNvbnRpbnVpbmcgYmFsYW5j
        ZdwcAEoAAAIA3AtvZiBvcmlnaW4gYW5kIGRlYXRoLiAgT3IgaXQgbWlnaHQsIGxpa2UgYSB0dW1ibGV3 ZWVkLCBicmFuY2gNaGVsdGVyqXNrZWx0ZXIgaW4gYSBjb25mdXNpbmcganVtYmxlIG9mIHNoYXBlcyBh bmQgc2l6ZXMuCglJZ25vcmluZyB0aGVzZSBtdWx0aWZhcmlvdXMgcG9zc2liaWxpdGllcywgY29udmVu
        dGlvbmFsDWljb25vZ3JhcGh5IGhhcyBmYXN0ZW5lZCB1cG9uIGEgcHJpbWFyeSBtb2RlbCwgdGhlICJj b25lIG9mDWluY3JlYXNpbmcgZGl2ZXJzaXR5LCIgb3IgQ2hyaXN0bWFzIHRyZWUgaW4gcmV2ZXJzZS4g IExpZmUgYmVnaW5zDXdpdGggdGhlIHJlc3RyaWN0ZWQgYW5kIHNpbXBsZSwgcHJvZ3Jlc3NpbmcgZXZl
        ciB1cHdhcmQgdG8gbW9yZQ1hbmQgbW9yZSBhbmQsIGJ5IGltcGxpY2F0aW9uLCBiZXR0ZXIgYW5kIGJl dHRlci4gIEZpZ3VyZSBsNSBvbg10aGUgZXZvbHV0aW9uIG9mIGNvZWxvbWF0ZSBhbmltYWxzICh0aGUg c3ViamVjdCBvZiB0aGlzIGJvb2spLA1zaG93cyB0aGUgb3JkZXJseSBvcmlnaW4gb2YgZXZlcnl0aGlu
        ZyBmcm9tIGEgc2ltcGxlIGZsYXR3b3JtLiANVGhlIHN0ZW0gc3BsaXRzIHRvIGEgZmV3IGJhc2ljIHN0 b2Nrczsgbm9uZSBiZWNvbWUgZXh0aW5jdCwgYW5kDWVhY2ggZGl2ZXJzaWZpZXMgZnVydGhlciB0byBh IGNvbnRpbnVhbGx5IGluY3JlYXNpbmcgbnVtYmVyIG9mDXN1Ymdyb3Vwcy4gIAoJSSBwcmVzZW50LCBh
        cyBGaWd1cmUgbDYsIGEgcGFub3BseSBvZiBjb25lcyBkcmF3biBmcm9tDXBvcHVsYXIgbW9kZXJuIHRl eHRib29rcyCpqSB0aHJlZSBhYnN0cmFjdCBhbmQgdGhyZWUgYWN0dWFsDWV4YW1wbGVzIGZvciBncm91 cHMgY3J1Y2lhbCB0byB0aGUgYXJndW1lbnQgb2YgdGhpcyBib29rLiAgKEluDUNoYXB0ZXIgMywgSSBz
        aGFsbCBkaXNjdXNzIHRoZSBvcmlnaW4gb2YgdGhpcyBtb2RlbCBpbiBIYWVja2VsJ3MNb3JpZ2luYWwg dHJlZXMgYW5kIHRoZWlyIGluZmx1ZW5jZSB1cG9uIFdhbGNvdHQncyBncmVhdCBlcnJvciBpbg1yZWNv bnN0cnVjdGluZyB0aGUgQnVyZ2VzcyBmYXVuYS4pICBBbGwgdGhlc2UgdHJlZXMgc2hvdyB0aGUgc2Ft
        ZQ1wYXR0ZXJuOiBicmFuY2hlcyBzcGxpdCwgd2hpbGUgZ3Jvd2luZyBldmVyIHVwd2FyZCBhbmQgb3V0 d2FyZC4gDUlmIHNvbWUgZWFybHkgbGluZWFnZXMgZGllLCBsYXRlciBnYWlucyBzb29uIG92ZXJiYWxh bmNlIGFueQ1sb3NzLiAgRWFybHkgZGVhdGhzIGNhbiBvbmx5IGVsaW1pbmF0ZSBzbWFsbCBicmFuY2hl
        cyBuZWFyIHRoZQ1jZW50cmFsIHRydW5rLiAgRXZvbHV0aW9uIHVuZm9sZHMgYXMgdGhvdWdoIHRoZSB0 cmVlIHdlcmUgZ3Jvd2luZw11cCBhIGZ1bm5lbCwgYWx3YXlzIGZpbGxpbmcgdGhlIGNvbnRpbnVhbGx5 IGV4cGFuZGluZyBjb25lIG9mDXBvc3NpYmlsaXRpZXMuIAoJVGhlIGNvbmUgb2YgZGl2ZXJzaXR5IHBy
        b3BhZ2F0ZXMgYW4gaW50ZXJlc3RpbmcgY29uZmxhdGlvbg1vZiBtZWFuaW5nIGluIGl0cyBjb252ZW50 aW9uYWwgaW50ZXJwcmV0YXRpb24uICBUaGUgaG9yaXpvbnRhbNxkAAAAAAIA3AtkaW1lbnNpb24gaXMg ZGl2ZXJzaXR5IKmpIGZpc2hlcyBwbHVzIGluc2VjdHMgcGx1cyBzbmFpbHMgcGx1cw1zdGFyZmlzaGVz
        IGF0IHRoZSB0b3AgdGFrZSB1cCBtdWNoIG1vcmUgbGF0ZXJhbCByb29tIHRoYW4ganVzdA1mbGF0d29y bXMgYXQgdGhlIGJvdHRvbS4gIEJ1dCB3aGF0IGRvZXMgdGhlIHZlcnRpY2FsIGRpbWVuc2lvbg1yZXBy ZXNlbnQ/ICBJbiBhIGxpdGVyYWwgcmVhZGluZywgdXAgYW5kIGRvd24gc2hvdWxkIG9ubHkgcmVjb3Jk
        DXlvdW5nZXIgYW5kIG9sZGVyIGluIGdlb2xvZ2ljYWwgdGltZSCpqSB0aGUgbmVjayBvZiB0aGUgZnVu bmVsIGlzDWFuY2llbnQsIHRoZSBsaXAgcmVjZW50LiAgQnV0IHdlIGFsc28gcmVhZCB2ZXJ0aWNhbCBt b3ZlbWVudCBhcw1zaW1wbGUgdG8gY29tcGxleCwgb3IgcHJpbWl0aXZlIHRvIGFkdmFuY2VkLiAglFBs
        YWNlbWVudCBpbiB0aW1lDWlzIGNvbmZsYXRlZCB3aXRoIGp1ZGdtZW50IG9mIHdvcnRolS4KCU91ciBv cmRpbmFyeSBkaXNjb3Vyc2UgYWJvdXQgYW5pbWFscyBmb2xsb3dzIHRoaXMNaWNvbm9ncmFwaHkuICBO YXR1cmUncyB0aGVtZSBpcyBkaXZlcnNpdHkuICBXZSBsaXZlIHN1cnJvdW5kZWQgYnkNY29ldmFsIHR3
        aWdzIG9mIGxpZmUncyB0cmVlLiAgSW4gRGFyd2luJ3Mgd29ybGQsIGFsbCAoYXMNc3Vydml2b3JzIGlu IGEgdG91Z2ggZ2FtZSkgaGF2ZSBzb21lIGNsYWltIHRvIGVxdWFsIHN0YXR1cy4gIFdoeSwNdGhlbiwg ZG8gd2UgdXN1YWxseSBjaG9vc2UgdG8gY29uc3RydWN0IGEgcmFua2luZyBvZiBpbXBsaWVkDXdvcnRo
        IChieSBhc3N1bWVkIGNvbXBsZXhpdHksIG9yIHJlbGF0aXZlIG5lYXJuZXNzIHRvIGh1bWFucywgZm9y DWV4YW1wbGUpPyAgSW4gYSByZWNlbnQgcmV2aWV3IG9mIGEgYm9vayBvbiBjb3VydHNoaXAgaW4gdGhl DWFuaW1hbCBraW5nZG9tLCBKb25hdGhhbiBXZWluZXIgKJROZXcgWW9yayBUaW1lcyBCb29rIFJldmll
        d5UsDU1hcmNoIDI3LCBsOTg4KSBkZXNjcmliZXMgdGhlIGF1dGhvcidzIHNjaGVtZSBvZiBvcmdhbml6 YXRpb246DSJXb3JraW5nIGluIGxvb3NlbHkgZXZvbHV0aW9uYXJ5IG9yZGVyLCBNci4gV2FsdGVycyBi ZWdpbnMgd2l0aA1ob3JzZXNob2UgY3JhYnMsIHdoaWNoIGhhdmUgYmVlbiBtZWV0aW5nIGFuZCBtYXRp
        bmcgb24gZGFyaw1iZWFjaGVzIGluIHN5bmNocm9ueSB3aXRoIHRpZGUgYW5kIG1vb24gZm9yIDIwMCBt aWxsaW9uIHllYXJzLiIgDUxhdGVyIGNoYXB0ZXJzIG1ha2UgdGhlICJsb25nIGV2b2x1dGlvbmFyeSBs ZWFwIHRvIHRoZSBhbnRpY3Mgb2YNdGhlIHB5Z215IGNoaW1wYW56ZWUuIiAgV2h5IGlzIHRoaXMgc2Vx
        dWVuY2UgY2FsbGVkICJldm9sdXRpb25hcnkNb3JkZXIiPyAgQW5hdG9taWNhbGx5IGNvbXBsZXggaG9y c2VzaG9lIGNyYWJzIGFyZSBub3QgYW5jZXN0cmFsDXRvIHZlcnRlYnJhdGVzOyB0aGUgdHdvIHBoeWxh LCBBcnRocm9wb2RhIGFuZCBDaG9yZGF0YSwgaGF2ZSBiZWVuDXNlcGFyYXRlIGZyb20gdGhlIHZlcnkg
        Zmlyc3QgcmVjb3JkcyBvZiBtdWx0aWNlbGx1bGFyIGxpZmUuICAKCUluIGFub3RoZXIgcmVjZW50IGV4 YW1wbGUsIGFuZCB0byBzaG93IHRoYXQgdGhpcyBlcnJvctxkAAAAAAAA3AtpbmZlc3RzIHRlY2huaWNh bCBhcyB3ZWxsIGFzIGxheSBkaXNjb3Vyc2UsIGFuIGVkaXRvcmlhbCBpbg2UU2NpZW5jZZUsIHRoZSBs
        ZWFkaW5nIHByb2Zlc3Npb25hbCBqb3VybmFsIGluIEFtZXJpY2EsIGNvbnN0cnVjdHMNYW4gb3JkZXIg ZXZlcnkgYml0IGFzIG1vdGxleSBhbmQgc2Vuc2VsZXNzIGFzIFdoaXRlJ3MgInJlZ3VsYXINZ3JhZGF0 aW9uIiAoRmlndXJlIDMpLiAgQ29tbWVudGluZyBvbiBzcGVjaWVzIGNvbW1vbmx5IHVzZWQgZm9yDWxh
        Ym9yYXRvcnkgd29yaywgdGhlIGVkaXRvcnMgZGlzY3VzcyB0aGUgIm1pZGRsZSByYW5nZSIgYmV0d2Vl bg11bmljZWxsdWxhciBjcmVhdHVyZXMgYW5kIGd1ZXNzIHdobyBhdCB0aGUgYXBleDogIkhpZ2hlciBv biB0aGUNZXZvbHV0aW9uYXJ5IGxhZGRlciwiIHdlIGxlYXJuLCAidGhlIG5lbWF0b2RlLCB0aGUgZmx5
        IGFuZCB0aGUNZnJvZyBoYXZlIHRoZSBhZHZhbnRhZ2Ugb2YgY29tcGxleGl0eSBiZXlvbmQgdGhlIHNp bmdsZSBjZWxsLCBidXQNcmVwcmVzZW50IGZhciBzaW1wbGVyIHNwZWNpZXMgdGhhbiBtYW1tYWxzIiAo SnVuZSBsMCwgbDk4OCkuCglUaGUgZmF0dW91cyBpZGVhIG9mIGEgc2luZ2xlIG9yZGVyIGFtaWRzdCB0
        aGUgbXVsdGlmYXJpb3VzDWRpdmVyc2l0eSBvZiBtb2Rlcm4gbGlmZSBmbG93cyBmcm9tIG91ciBjb252 ZW50aW9uYWwNaWNvbm9ncmFwaGllcyBhbmQgdGhlIHByZWp1ZGljZXMgdGhhdCBudXJ0dXJlIHRoZW0g qakgdGhlIGxhZGRlcg1vZiBsaWZlIGFuZCB0aGUgY29uZSBvZiBpbmNyZWFzaW5nIGRpdmVyc2l0eS4g
        IEJ5IHRoZSBsYWRkZXIsDWhvcnNlc2hvZSBjcmFicyBhcmUganVkZ2VkIGFzIHNpbXBsZTsgYnkgdGhl IGNvbmUsIHRoZXkgYXJlDWRlZW1lZCBvbGQu4gAABQAJAAkB/wpKjSBBbm90aGVyIGZhY3R1YWwgaXJv bnk6IENvbnRyYXJ5IHRvIHRoZSB1c3VhbCBwaWN0dXJlIG9mDWhvcnNlc2hvZSBjcmFicyBhcyAibGl2
        aW5nIGZvc3NpbHMsIiCUTGltdWx1c5UglHBvbHlwaGVtdXOVLCBvdXINQW1lcmljYW4gZWFzdCBjb2Fz dCBzcGVjaWVzLCBoYXMgbm8gZm9zc2lsIHJlY29yZCB3aGF0ZXZlci4gIFRoZQ1nZW51cyCUTGltdWx1 c5Ugb25seSByYW5nZXMgYmFjayBzb21lIDIwIG1pbGxpb24geWVhcnMgKG5vdCAyMDApLiANV2UgbWlz
        ZGlhZ25vc2UgaG9yc2VzaG9lIGNyYWJzIGFzICJsaXZpbmcgZm9zc2lscyIgYmVjYXVzZSB0aGUNZ3Jv dXAgaGFzIG5ldmVyIHByb2R1Y2VkIG1hbnkgc3BlY2llcywgYW5kIHRoZXJlZm9yZSBuZXZlcg1kZXZl bG9wZWQgbXVjaCBldm9sdXRpb25hcnkgcG90ZW50aWFsIGZvciBkaXZlcnNpZmljYXRpb24uIA1Db25z
        ZXF1ZW50bHksIG1vZGVybiBzcGVjaWVzIGFyZSBtb3JwaG9sb2dpY2FsbHkgc2ltaWxhciB0byBlYXJs eQ1mb3JtcywgYnV0IHRoZSBzcGVjaWVzIHRoZW1zZWx2ZXMgYXJlIG5vdCBub3RhYmx5IG9sZC7iICBB bmQgb25lIGltcGxpZXMgdGhlIG90aGVyIHVuZGVyIHRoZSBncmFuZA1jb25mbGF0aW9uIGRpc2N1c3Nl
        ZCBhYm92ZSCpqSBkb3duIG9uIHRoZSBsYWRkZXIgYWxzbyBtZWFucyBvbGQsDXdoaWxlIGxvdyBvbiB0 aGUgY29uZSBkZW5vdGVzIHNpbXBsZS4KCUkgZG9uJ3QgdGhpbmsgdGhhdCBhbnkgcGFydGljdWxhciBz ZWNyZXQsIG15c3Rlcnkgb3INaW5vcmRpbmF0ZSBzdWJ0bGV0eSB1bmRlcmxpZXMgdGhlIHJlYXNvbnMg
        Zm9yIG91ciBhbGxlZ2lhbmNlIHRvDXRoZXNlIGZhbHNlIGljb25vZ3JhcGhpZXMgb2YgbGFkZGVycyBh bmQgY29uZXMuICBUaGV5IGFyZSBjaG9zZW4NYmVjYXVzZSB0aGV5IG51cnR1cmUgb3VyIGhvcGVzIGZv ciBhIHVuaXZlcnNlIG9mIGludHJpbnNpY9xQABYAAAIA3AttZWFuaW5nIGRlZmluZWQgaW4gb3VyIHRl
        cm1zLiAgV2Ugc2ltcGx5IGNhbm5vdCBiZWFyIHRoZQ1pbXBsaWNhdGlvbnMgb2YgT21hciBLaGF5eWFt J3MgaG9uZXN0eToKCQlJbnRvIHRoaXMgVW5pdmVyc2UsIGFuZCBXaHkgbm90IGtub3dpbmcsCgkJTm9y IHdoZW5jZSwgbGlrZSBXYXRlciB3aWxsealuaWxseSBmbG93aW5nOgogIAkJQW5kIG91dCBvZiBpdCwg
        YXMgV2luZCBhbG9uZyB0aGUgV2FzdGUKCQlJIGtub3cgbm90IFdoaXRoZXIsIHdpbGx5qW5pbGx5IGJs b3dpbmcuCkEgbGF0ZXIgcXVhdHJhaW4gb2YgdGhlIFJ1YmFpeWF0IHByb3Bvc2VzIGEgY291bnRlcmFj dGluZw1zdHJhdGVneSwgYnV0IGFja25vd2xlZGdlcyBpdHMgc3RhdHVzIGFzIGEgdmFpbiBob3BlOgoJ
        CUFoIExvdmUhIGNvdWxkIHlvdSBhbmQgSSB3aXRoIEZhdGUgY29uc3BpcmUKCQlUbyBncmFzcCB0aGlz IHNvcnJ5IFNjaGVtZSBvZiBUaGluZ3MgZW50aXJlLAoJCVdvdWxkIHdlIG5vdCBzaGF0dGVyIGl0IHRv IGJpdHMgqakgYW5kIHRoZW4KCQlSZaltb2xkIGl0IG5lYXJlciB0byB0aGUgSGVhcnQncyBEZXNpcmUh
        CglNb3N0IG15dGhzIGFuZCBlYXJseSBzY2llbnRpZmljIGV4cGxhbmF0aW9ucyBvZiBXZXN0ZXJuDWN1 bHR1cmUgcGF5IGhvbWFnZSB0byB0aGlzICJoZWFydCdzIGRlc2lyZS4iICBDb25zaWRlciB0aGUgcHJp bWFsDXRhbGUgb2YgR2VuZXNpcyCpqSBhIHdvcmxkIGJ1dCBhIGZldyB0aG91c2FuZCB5ZWFycyBvbGQs
        DWluaGFiaXRlZCBieSBodW1hbnMgZm9yIGFsbCBidXQgdGhlIGZpcnN0IGZpdmUgZGF5cywgYW5kDXBv cHVsYXRlZCBieSBjcmVhdHVyZXMgbWFkZSBmb3Igb3VyIGJlbmVmaXQgYW5kIHN1Ym9yZGluYXRlIHRv DW91ciBuZWVkcy4gIFN1Y2ggYSBnZW9sb2dpY2FsIGJhY2tncm91bmQgY291bGQgaW5zcGlyZSBBbGV4
        YW5kZXINUG9wZSdzIGNvbmZpZGVuY2UgYWJvdXQgdGhlIGRlZXBlciBtZWFuaW5nIG9mIGltbWVkaWF0 ZQ1hcHBlYXJhbmNlczoKCQlBbGwgbmF0dXJlIGlzIGJ1dCBhcnQsIHVua25vd24gdG8gdGhlZTsKCQlB bGwgY2hhbmNlLCBkaXJlY3Rpb24gd2hpY2ggdGhvdSBjYW5zdCBub3Qgc2VlOwoJCUFsbCBkaXNjb3Jk
        LCBoYXJtb255IG5vdCB1bmRlcnN0b29kOwoJCUFsbCBwYXJ0aWFsIGV2aWwsIHVuaXZlcnNhbCBnb29k LgoJQnV0LCBhcyBGcmV1ZCBvYnNlcnZlZCwgb3VyIHJlbGF0aW9uc2hpcCB3aXRoIHNjaWVuY2UgbXVz dA1iZSBwYXJhZG94aWNhbCBiZWNhdXNlIHdlIGFyZSBmb3JjZWQgdG8gcGF5IGFuIGFsbW9zdCBpbnRv
        bGVyYWJsZdxkAAAAAAIA3AtwcmljZSBmb3IgZWFjaCBtYWpvciBnYWluIGluIGtub3dsZWRnZSBhbmQg cG93ZXIgqakgdGhlDXBzeWNob2xvZ2ljYWwgY29zdCBvZiBwcm9ncmVzc2l2ZSBkZXRocm9uZW1lbnQg ZnJvbSB0aGUgY2VudGVyIG9mDXRoaW5ncywgYW5kIGluY3JlYXNpbmcgbWFyZ2luYWxpdHkgaW4gYW4g
        dW5jYXJpbmcgdW5pdmVyc2UuIA1UaHVzLCBwaHlzaWNzIGFuZCBhc3Ryb25vbXkgcmVsZWdhdGVkIG91 ciBob21lIHRvIGEgY29ybmVyIG9mIHRoZQ1jb3Ntb3MsIGFuZCBiaW9sb2d5IHNoaWZ0ZWQgb3VyIHN0 YXR1cyBmcm9tIGEgc2ltdWxhY3J1bSBvZiBHb2QNdG8gYSBuYWtlZCwgdXByaWdodCBhcGUuCglNeSBw
        cm9mZXNzaW9uIGNvbnRyaWJ1dGVkIGl0cyBvd24gc3BlY2lhbCBzaG9jayB0byB0aGlzDWNvc21pYyBy ZWRlZmluaXRpb24gqakgZ2VvbG9neSdzIG1vc3QgZnJpZ2h0ZW5pbmcgZmFjdCwgd2UgbWlnaHQNc2F5 LiAgQnkgdGhlIHR1cm4gb2YgdGhlIGxhc3QgY2VudHVyeSwgd2Uga25ldyB0aGF0IHRoZSBlYXJ0aCBo
        YWQNZW5kdXJlZCBmb3IgbWlsbGlvbnMgb2YgeWVhcnMsIGFuZCB0aGF0IGh1bWFuIGV4aXN0ZW5jZSBv Y2N1cGllZA1idXQgdGhlIGxhc3QgZ2VvbG9naWNhbCBtaWxsaW1pY3Jvc2Vjb25kIG9mIHRoaXMgaGlz dG9yeSCpqSB0aGUNbGFzdCBpbmNoIG9mIHRoZSBjb3NtaWMgbWlsZSwgb3IgdGhlIGxhc3Qgc2Vjb25k
        IG9mIHRoZQ1nZW9sb2dpY2FsIHllYXIsIGluIG91ciBzdGFuZGFyZCBwZWRhZ29naWNhbCBtZXRhcGhv cnMuCglXZSBjYW5ub3QgYmVhciB0aGUgY2VudHJhbCBpbXBsaWNhdGlvbiBvZiB0aGlzIGJyYXZlIG5l dw13b3JsZC4gIElmIHdlIGFyb3NlIGp1c3QgeWVzdGVyZGF5IGFzIGEgc21hbGwgdHdpZyBvbiBvbmUg
        YnJhbmNoDW9mIGEgZmxvdXJpc2hpbmcgdHJlZSwgdGhlbiBsaWZlIG1heSBub3QsIGluIGFueSBnZW51 aW5lIHNlbnNlLA1leGlzdCBmb3Igb3IgYmVjYXVzZSBvZiB1cy4gIFBlcmhhcHMgd2UgYXJlIG9ubHkg YW4gYWZ0ZXJ0aG91Z2h0LA1hIGtpbmQgb2YgY29zbWljIGFjY2lkZW50LCBqdXN0IG9uZSBiYXVibGUg
        b24gdGhlIENocmlzdG1hcyB0cmVlDW9mIGV2b2x1dGlvbi4KCVdoYXQgb3B0aW9ucyBhcmUgbGVmdCBp biB0aGUgZmFjZSBvZiBnZW9sb2d5J3MgbW9zdA1mcmlnaHRlbmluZyBmYWN0PyAgT25seSB0d28sIHJl YWxseS4gIFdlIG1heSwgYXMgdGhpcyBib29rDWFkdm9jYXRlcywgYWNjZXB0IHRoZSBpbXBsaWNhdGlv
        bnMgYW5kIGxlYXJuIHRvIHNlZWsgdGhlIG1lYW5pbmcNb2YgaHVtYW4gbGlmZSwgaW5jbHVkaW5nIHRo ZSBzb3VyY2Ugb2YgbW9yYWxpdHksIGluIG90aGVyLCBtb3JlDWFwcHJvcHJpYXRlIGRvbWFpbnMgqakg ZWl0aGVyIHN0b2ljYWxseSB3aXRoIGEgc2Vuc2Ugb2YgbG9zcywgb3INd2l0aCBqb3kgaW4gdGhlIGNo
        YWxsZW5nZSBpZiBvdXIgdGVtcGVyYW1lbnQgYmUgb3B0aW1pc3RpYy4gIE9yDXdlIG1heSBjb250aW51 ZSB0byBzZWVrIGNvc21pYyBjb21mb3J0IGluIG5hdHVyZSBieSByZWFkaW5n3GQAAAAAAgDcC2hpc3Rv cnkgaW4gYSBkaXN0b3J0ZWQgbGlnaHQuCglJZiB3ZSBlbGVjdCB0aGUgc2Vjb25kIHN0cmF0ZWd5LCBv
        dXIgbWFuZXV2ZXJzIGFyZSBzZXZlcmVseQ1yZXN0cmljdGVkIGJ5IG91ciBnZW9sb2dpY2FsIGhpc3Rv cnkuICBXaGVuIHdlIGluZmVzdGVkIGFsbCBidXQNdGhlIGZpcnN0IGZpdmUgZGF5cyBvZiB0aW1lLCB0 aGUgaGlzdG9yeSBvZiBsaWZlIGNvdWxkIGVhc2lseSBiZQ1yZW5kZXJlZCBpbiBvdXIgdGVybXMuICBC
        dXQgaWYgd2Ugd2lzaCB0byBhc3NlcnQgaHVtYW4gY2VudHJhbGl0eQ1pbiBhIHdvcmxkIHRoYXQgZnVu Y3Rpb25lZCB3aXRob3V0IHVzIHVudGlsIHRoZSBsYXN0IG1vbWVudCwgd2UNbXVzdCBzb21laG93IGdy YXNwIGFsbCB0aGF0IGNhbWUgYmVmb3JlIGFzIGEgZ3JhbmQgcHJlcGFyYXRpb24gqaphIGZvcmVzaGFk
        b3dpbmcgb2Ygb3VyIGV2ZW50dWFsIG9yaWdpbi4gIAoJVGhlIG9sZCBjaGFpbiBvZiBiZWluZyB3b3Vs ZCBwcm92aWRlIGdyZWF0ZXN0IGNvbWZvcnQsIGJ1dA13ZSBub3cga25vdyB0aGF0IHRoZSB2YXN0IG1h am9yaXR5IG9mICJzaW1wbGVyIiBjcmVhdHVyZXMgYXJlIG5vdA1odW1hbiBhbmNlc3RvcnMgb3IgZXZl
        biBwcm90b3R5cGVzLCBidXQgb25seSBjb2xsYXRlcmFsIGJyYW5jaGVzDW9uIGxpZmUncyB0cmVlLiAg VGhlIGNvbmUgb2YgaW5jcmVhc2luZyBwcm9ncmVzcyBhbmQgZGl2ZXJzaXR5DXRoZXJlZm9yZSBiZWNv bWVzIG91ciBpY29ub2dyYXBoeSBvZiBjaG9pY2UuICBUaGUgY29uZSBpbXBsaWVzDXByZWRpY3RhYmxl
        IGRldmVsb3BtZW50IGZyb20gc2ltcGxlIHRvIGNvbXBsZXgsIGZyb20gbGVzcyB0bw1tb3JlLiAglEhv bW+VIJRzYXBpZW5zlSBtYXkgb25seSBmb3JtIGEgdHdpZywgYnV0IGlmIGxpZmUgbW92ZXMsIGV2ZW4N Zml0ZnVsbHksIHRvd2FyZHMgZ3JlYXRlciBjb21wbGV4aXR5IGFuZCBoaWdoZXIgbWVudGFsaXR5LCB0
        aGVuDXRoZSBldmVudHVhbCBvcmlnaW4gb2Ygc2VsZqljb25zY2lvdXMgaW50ZWxsaWdlbmNlIG1heSBi ZQ1pbXBsaWNpdCBpbiBhbGwgdGhhdCBjYW1lIGJlZm9yZS4gIEluIHNob3J0LCBJIGNhbm5vdCB1bmRl cnN0YW5kDW91ciBjb250aW51ZWQgYWxsZWdpYW5jZSB0byBtYW5pZmVzdGx5IGZhbHNlIGljb25vZ3Jh
        cGhpZXMgb2YNbGFkZGVyIGFuZCBjb25lIGV4Y2VwdCBhcyBhIGxhc3QgZmluZ2VyIGluIHRoZSBkaWtl IG9mIGNvc21pY2FsbHkNanVzdGlmaWVkIGhvcGUgYW5kIGFycm9nYW5jZS4KCUkgbGVhdmUgdGhlIGxh c3Qgd29yZCBvbiB0aGlzIHN1YmplY3QgdG8gTWFyayBUd2Fpbiwgd2hvDWdyYXNwZWQgc28gZ3JhcGhp
        Y2FsbHksIHdoZW4gdGhlIEVpZmZlbCBUb3dlciB3YXMgdGhlIHdvcmxkJ3MNdGFsbGVzdCBidWlsZGlu ZywgdGhlIGltcGxpY2F0aW9ucyBvZiBnZW9sb2d5J3MgbW9zdCBmcmlnaHRlbmluZw1mYWN0LgoJCU1h biBoYXMgYmVlbiBoZXJlIDMyLDAwMCB5ZWFycy4gIFRoYXQgaXQgdG9vayBhIGh1bmRyZWTcZAAAAAAA
        ANwLCQltaWxsaW9uIHllYXJzIHRvIHByZXBhcmUgdGhlIHdvcmxkIGZvciBoaW3iAAAGAAgACAH/CkqN IFR3YWluIHVzZXMgTG9yZCBLZWx2aW4ncyBlc3RpbWF0ZXMsIHRoZW4gY3VycmVudCwgZm9yIHRoZQ1h Z2Ugb2YgdGhlIGVhcnRoLiAgVGhlIGFnZXMgaGF2ZSBsZW5ndGhlbmVkIHN1YnN0YW50aWFsbHkgc2lu
        Y2UNdGhlbiwgYnV0IFR3YWluJ3MgcHJvcG9ydGlvbnMgYXJlIGp1c3QgYWJvdXQgcmlnaHQuICBIZSB0 YWtlcw1odW1hbiBleGlzdGVuY2UgYXMgYWJvdXQgbC8zMCwwMDAgb2YgdGhlIGVhcnRoJ3MgYWdlLiAg QXQgY3VycmVudA1lc3RpbWF0ZXMgb2YgMjUwLDAwMCB5ZWFycyBmb3IgdGhlIG9yaWdpbiBvZiBvdXIg
        c3BlY2llcywglEhvbW+VDZRzYXBpZW5zlSwgdGhlIGVhcnRoIHdvdWxkIGJlIDcuNSBiaWxsaW9uIHll YXJzIG9sZCBpZiBvdXIgc3Bhbg13ZXJlIGwvMzAsMDAwIG9mIHRvdGFsaXR5LiAgQnkgYmVzdCBjdXJy ZW50IGVzdGltYXRlcywgdGhlIGVhcnRoDWlzIDQuNSBiaWxsaW9uIHllYXJzIG9sZC7iIGlzIHByb29m
        DQkJdGhhdCB0aGF0IGlzIHdoYXQgaXQgd2FzIGRvbmUgZm9yLiAgSSBzdXBwb3NlIGl0IGlzLiAgSQ0J CWR1bm5vLiAgSWYgdGhlIEVpZmZlbCBUb3dlciB3ZXJlIG5vdyByZXByZXNlbnRpbmcgdGhlDQkJd29y bGQncyBhZ2UsIHRoZSBza2luIG9mIHBhaW50IG9uIHRoZSBwaW5uYWNsZSBrbm9iIGF0DQkJaXRzIHN1
        bW1pdCB3b3VsZCByZXByZXNlbnQgbWFuJ3Mgc2hhcmUgb2YgdGhhdCBhZ2U7IGFuZA0JCWFueWJvZHkg d291bGQgcGVyY2VpdmUgdGhhdCB0aGUgc2tpbiB3YXMgd2hhdCB0aGUgdG93ZXINCQl3YXMgYnVpbHQg Zm9yLiBJIHJlY2tvbiB0aGV5IHdvdWxkLCBJIGR1bm5vLgkJIAoKQykgIJRSZXBsYXlpbmcgTGlmZSdz
        IFRhcGU6IFRoZSBDcnVjaWFsIEV4cGVyaW1lbnSVCglUaGUgaWNvbm9ncmFwaHkgb2YgdGhlIGNvbmUg Zm9yY2VzIFdhbGNvdHQncyBvcmlnaW5hbA1pbnRlcnByZXRhdGlvbiBvZiB0aGUgQnVyZ2VzcyBTaGFs ZS4gIEFueSBmYXVuYSBzbyBjbG9zZSB0byB0aGUNb3JpZ2luIG9mIG11bHRpY2VsbHVsYXIgbGlmZSBt
        dXN0IGxpZSBpbiB0aGUgbmVjayBvZiB0aGUgZnVubmVsLiANQnVyZ2VzcyBhbmltYWxzIHRoZXJlZm9y ZSBjYW5ub3Qgc3RyYXkgYmV5b25kIGEgc3RyaWN0bHkgbGltaXRlZA1yYW5nZSBvZiBkaXNwYXJpdHks IGFuZCBhIGJhc2ljIHNpbXBsaWNpdHkgb2YgYW5hdG9teS4gIFRoZXkNbXVzdCwgaW4gc2hvcnQsIGJl
        IGNsYXNzaWZpZWQgZWl0aGVyIGFzIHByaW1pdGl2ZSBkZXNpZ25zIHdpdGhpbg1tb2Rlcm4gZ3JvdXBz LCBvciBhcyBhbmNlc3RyYWwgYW5pbWFscyB0aGF0IG1pZ2h0LCB3aXRoIGluY3JlYXNlZA1jb21wbGV4 aXR5LCBwcm9ncmVzcyB0byBzb21lIGZhbWlsaWFyIGZvcm0gb2YgbW9kZXJuIHNlYXMuICBTbWFsbA13
        b25kZXIsIHRoZW4sIHRoYXQgV2FsY290dCBpbnRlcnByZXRlZCBldmVyeSBvcmdhbmlzbSBpbiB0aGUN QnVyZ2VzcyBTaGFsZSBhcyBhIHByaW1pdGl2ZSBtZW1iZXIgb2YgYSBwcm9taW5lbnQgYnJhbmNoIG9u DWxpZmUncyBsYXRlciB0cmVlLgoJSSBrbm93IG5vIGdyZWF0ZXIgY2hhbGxlbmdlIHRvIHRoZSBpY29u
        b2dyYXBoeSBvZiB0aGUgY29uZSDcUAAUAAAAANyMqakgaGVuY2Ugbm8gbW9yZSBpbXBvcnRhbnQgY2Fz ZSBmb3IgYSBmdW5kYW1lbnRhbGx5IHJldmlzZWQgdmlldw1vZiBsaWZlIKmpIHRoYW4gdGhlIHJhZGlj YWwgcmVjb25zdHJ1Y3Rpb25zIG9mIEJ1cmdlc3MgYW5hdG9teQ1wcmVzZW50ZWQgYnkgV2hpdHRpbmd0
        b24gYW5kIGhpcyBjb2xsZWFndWVzLiAgVGhleSBoYXZlIGxpdGVyYWxseQ1mb2xsb3dlZCBvdXIgbW9z dCB2ZW5lcmFibGUgbWV0YXBob3IgZm9yIHJldm9sdXRpb24gqakgdGhleSBoYXZlDXR1cm5lZCB0aGUg dHJhZGl0aW9uYWwgaW50ZXJwcmV0YXRpb24gb24gaXRzIGhlYWQuICBCeQ1pbGx1c3RyYXRpbmcgc28g
        bWFueSB1bmlxdWUgYW5hdG9taWVzIGluIHRoZSBCdXJnZXNzLCBhbmQgYnkNc2hvd2luZyB0aGF0IGZh bWlsaWFyIGdyb3VwcyB3ZXJlIHRoZW4gZXhwZXJpbWVudGluZyB3aXRoIGRlc2lnbnMNc28gZmFyIGJl eW9uZCB0aGUgbW9kZXJuIHJhbmdlLCB0aGV5IGhhdmUgaW52ZXJ0ZWQgdGhlIGNvbmUuICBUaGUNc3dl
        ZXAgb2YgYW5hdG9taWNhbCBkZXNpZ24gcmVhY2hlZCBhIG1heGltdW0gcmlnaHQgYWZ0ZXIgdGhlDWlu aXRpYWwgZGl2ZXJzaWZpY2F0aW9uIG9mIG11bHRpY2VsbHVsYXIgYW5pbWFscy4gIFRoZSBsYXRlcg1o aXN0b3J5IG9mIGxpZmUgcHJvY2VlZHMgYnkgd2lubm93aW5nLCBub3QgZXhwYW5zaW9uLiAgVGhlDWN1
        cnJlbnQgZWFydGggbWF5IGhvbGQgbW9yZSBzcGVjaWVzIHRoYW4gZXZlciBiZWZvcmUsIGJ1dCBtb3N0 DWFyZSBpdGVyYXRpb25zIHVwb24gYSBmZXcgYmFzaWMgYW5hdG9taWNhbCBkZXNpZ25zLiAgKFRheG9u b21pc3RzDWhhdmUgZGVzY3JpYmVkIG1vcmUgdGhhbiBhIGhhbGYgbWlsbGlvbiBzcGVjaWVzIG9mIGJl
        ZXRsZXMsIGJ1dA1uZWFybHkgYWxsIGFyZSBtaW5pbWFsbHkgYWx0ZXJlZCB4ZXJveGVzIG9mIGEgc2lu Z2xlIGdyb3VuZA1wbGFuLikgIEluIGZhY3QsIHRoZSBwcm9iYWJsZSBpbmNyZWFzZSBpbiBudW1iZXIg b2Ygc3BlY2llcw10aHJvdWdoIHRpbWUgbWVyZWx5IHVuZGVyc2NvcmVzIHRoZSBwdXp6bGUgYW5kIHBh
        cmFkb3guICBDb21wYXJlZA13aXRoIHRoZSBCdXJnZXNzIHNlYXMsIHRvZGF5J3Mgb2NlYW5zIGNvbnRh aW4gbWFueSBtb3JlIHNwZWNpZXMNYmFzZWQgdXBvbiBtYW55IGZld2VyIGFuYXRvbWljYWwgcGxhbnMu ICAKCUZpZ3VyZSBsNyBwcmVzZW50cyBhIHJldmlzZWQgaWNvbm9ncmFwaHkgcmVmbGVjdGluZyB0aGUN
        bGVzc29ucyBvZiB0aGUgQnVyZ2VzcyBTaGFsZS4gIFRoZSBtYXhpbXVtIHJhbmdlIG9mIGFuYXRvbWlj YWwNcG9zc2liaWxpdGllcyBhcmlzZXMgd2l0aCB0aGUgZmlyc3QgcnVzaCBvZiBkaXZlcnNpZmljYXRp b24uIA1MYXRlciBoaXN0b3J5IGlzIGEgdGFsZSBvZiByZXN0cmljdGlvbiwgYXMgbW9zdCBvZiB0aGVz
        ZSBlYXJseQ1leHBlcmltZW50cyBzdWNjdW1iLCB3aGlsZSBsYXRlciBsaWZlIHNldHRsZXMgZG93biB0 byBnZW5lcmF0aW5nDWVuZGxlc3MgdmFyaWFudHMgdXBvbiBhIGZldyBzdXJ2aXZpbmcgbW9kZWxzLgoJ VGhpcyBpbnZlcnRlZCBpY29ub2dyYXBoeSwgaG93ZXZlciBpbnRlcmVzdGluZyBhbmQgcmFkaWNhbNxk
        AAAAAAAA3AtpbiBpdHNlbGYsIG5lZWQgbm90IGltcGx5IGEgcmV2aXNlZCB2aWV3IG9mIGV2b2x1dGlv bmFyeQ1wcmVkaWN0YWJpbGl0eSBhbmQgZGlyZWN0aW9uLiAgRm9yIHdlIGNhbiBhYmFuZG9uIHRoZSBj b25lIGFuZA1hY2NlcHQgdGhlIGljb25vZ3JhcGh5IG9mIHdpbm5vd2luZywgd2hpbGUgbWFpbnRhaW5p
        bmcgZnVsbA1hbGxlZ2lhbmNlIHRvIHRyYWRpdGlvbiB3aXRoIHRoZSBmb2xsb3dpbmcgaW50ZXJwcmV0 YXRpb246IGxpZmUNbWF5IGJlIHdpbm5vd2VkIHRvIGp1c3QgYSBmZXcgcGVyY2VudCBvZiBCdXJnZXNz IHBvc3NpYmlsaXRpZXMsDWJ1dCB0aGUgbG9zZXJzIHdlcmUgY2hhZmYsIGFuZCBwcmVkaWN0YWJseSBk
        b29tZWQuICBTdXJ2aXZvcnMgd29uDWZvciBjYXVzZSCpqSBhbmQgY2F1c2UgaW5jbHVkZXMgYSBjcnVj aWFsIGVkZ2UgaW4gYW5hdG9taWNhbCwNY29tcGxleGl0eSBhbmQgY29tcGV0aXRpdmUgYWJpbGl0eS4K CUJ1dCB0aGUgQnVyZ2VzcyBwYXR0ZXJuIG9mIHdpbm5vd2luZyBhbHNvIHN1Z2dlc3RzIGEgdHJ1bHkN
        cmFkaWNhbCBhbHRlcm5hdGl2ZSwgcHJlY2x1ZGVkIGJ5IHRoZSBpY29ub2dyYXBoeSBvZiB0aGUgY29u ZS4gDVN1cHBvc2UgdGhhdCB3aW5uZXJzIGRvIG5vdCBwcmV2YWlsIGZvciBjYXVzZSBpbiB0aGUgdXN1 YWwgc2Vuc2UuIA1QZXJoYXBzIHRoZSBncmltIHJlYXBlciBpcyBvbmx5IExhZHkgTHVjayBpbiBkcmFn
        LiAgT3IgcGVyaGFwcw10aGUgdXN1YWwgcmVhc29ucyBmb3Igc3Vydml2YWwgZG8gbm90IHN1cHBvcnQg Y29udmVudGlvbmFsIGlkZWFzDW9mIGNhdXNlIGFzIGNvbXBsZXhpdHksIGltcHJvdmVtZW50LCBvciBh bnl0aGluZyBtb3ZpbmcgYXQgYWxsDWh1bWFuqXdhcmQuICBQZXJoYXBzIHRoZSBncmltIHJlYXBlciBv
        ZiBhbmF0b21pY2FsIGRlc2lnbnMgd29ya3MNZHVyaW5nIGJyaWVmIGVwaXNvZGVzIG9mIG1hc3MgZXh0 aW5jdGlvbiwgcHJvdm9rZWQgYnkNdW5wcmVkaWN0YWJsZSBlbnZpcm9ubWVudGFsIGNhdGFzdHJvcGhl cyAob2Z0ZW4gdHJpZ2dlcmVkIGJ5DWltcGFjdHMgb2YgZXh0cmF0ZXJyZXN0cmlhbCBib2RpZXMpLiAg
        R3JvdXBzIG1heSBwcmV2YWlsIG9yIGRpZQoKCgoKCgoK3GQAAAAAAADcjEJPWDogIEkuIERlZmluaXRp b25zIG9mIERpdmVyc2l0eQoJSSBtdXN0IGludHJvZHVjZSwgYXQgdGhpcyBwb2ludCwgYW4gaW1wb3J0 YW50IGRpc3RpbmN0aW9uDXRoYXQgc2hvdWxkIGFsbGF5IGEgY2xhc3NpYyBzb3VyY2Ugb2YgY29uZnVz
        aW9uIGluIHN1Y2gNZGlzY3Vzc2lvbnMuICBCaW9sb2dpc3RzIHVzZSB0aGUgdmVybmFjdWxhciB0ZXJt ICJkaXZlcnNpdHkiIGluDXNldmVyYWwgZGlmZmVyZW50IHRlY2huaWNhbCBzZW5zZXMuICBUaGV5IG1h eSB0YWxrIGFib3V0DSJkaXZlcnNpdHkiIGFzIG51bWJlciBvZiBkaXN0aW5jdCBzcGVjaWVzLiAgQW1v
        bmcgbWFtbWFscywgcm9kZW50DWRpdmVyc2l0eSBpcyBoaWdoIGJ5IHZpcnR1ZSBvZiBtb3JlIHRoYW4g bDUwMCBzZXBhcmF0ZSBzcGVjaWVzOw1ob3JzZSBkaXZlcnNpdHkgaXMgbG93LCBzaW5jZSB6ZWJyYXMs IGRvbmtleXMgYW5kIHRydWUgaG9yc2VzDWNvbWUgaW4gZmV3ZXIgdGhhbiBsMCBzcGVjaWVzLiAgQnV0
        IGJpb2xvZ2lzdHMgYWxzbyBzcGVhayBvZg0iZGl2ZXJzaXR5IiBhcyBkaWZmZXJlbmNlIGluIGJvZHkg cGxhbnMuICBUaHJlZSBibGluZCBtaWNlIChvZg1kaWZmZXJpbmcgc3BlY2llcykgZG8gbm90IG1ha2Ug YSBkaXZlcnNlIGZhdW5hLCBidXQgYW4gZWxlcGhhbnQsDWEgdHJlZSBhbmQgYW4gYW50IGRvIKmpIGV2
        ZW4gdGhvdWdoIGVhY2ggYXNzZW1ibGFnZSBjb250YWlucyBqdXN0DXRocmVlIHNwZWNpZXMuCglUaGUg cmV2aXNpb24gb2YgdGhlIEJ1cmdlc3MgU2hhbGUgcmVzdHMgdXBvbiBkaXZlcnNpdHkgaW4NdGhpcyBz ZWNvbmQgc2Vuc2Ugb2YglGRpc3Bhcml0eZUgaW4gYW5hdG9taWNhbCBwbGFucy4gIEJ1cmdlc3MNZGl2
        ZXJzaXR5LCBtZWFzdXJlZCBhcyBudW1iZXIgb2Ygc3BlY2llcywgaXMgbm90IGhpZ2guICBUaGlzDWZh Y3QsIGFzIHN1Z2dlc3RlZCBhYm92ZSwgZXhwcmVzc2VzIGEgY2VudHJhbCBwYXJhZG94IG9mIGVhcmx5 DWxpZmUuICBIb3cgY291bGQgc28gbXVjaCBkaXNwYXJpdHkgaW4gYm9keSBwbGFucyBiZSBldm9sdmVk
        IGluDXRoZSBhcHBhcmVudCBhYnNlbmNlIG9mIHN1YnN0YW50aWFsIGRpdmVyc2l0eSBpbiBudW1iZXIg b2YNc3BlY2llcyCpqSBmb3IgdGhlIHR3byBhcmUgY29ycmVsYXRlZCwgbW9yZSBvciBsZXNzIGluIGxv Y2tzdGVwLA1ieSB0aGUgaWNvbm9ncmFwaHkgb2YgdGhlIGNvbmUgKEZpZ3VyZSBsNikuCglUaHVzLCB3
        aGVuIEkgc3BlYWsgb2YgIndpbm5vd2luZywiIEkgcmVmZXIgdG8gcmVkdWN0aW9uIGluDWFuYXRvbWlj YWwgZGVzaWducyBmb3IgbGlmZSwgbm90IG51bWJlcnMgb2Ygc3BlY2llcy4gIE1vc3QNcGFsZW9udG9s b2dpc3RzIGFncmVlIHRoYXQgdGhlIHNpbXBsZSBjb3VudCBvZiBzcGVjaWVzIGhhcw1hdWdtZW50ZWQg
        dGhyb3VnaCB0aW1lIChTZXBrb3NraSCUZXSVIJRhbJUuLCBsOThsKSCpqSBhbmQgdGhpcw1pbmNyZWFz ZSBvZiBzcGVjaWVzIG11c3QgdGhlcmVmb3JlIG9jY3VyIJR3aXRoaW6VIGEgcmVkdWNlZCBudW1iZXLc ZAAAAAACANwLb2YgYm9keSBwbGFucy4gIAoJTW9zdCBwZW9wbGUgZG8gbm90IGZ1bGx5IGFwcHJlY2lh
        dGUgdGhlIHN0ZXJlb3R5cGVkDWNoYXJhY3RlciBvZiBjdXJyZW50IGxpZmUuICBXZSBsZWFybiBsaXN0 cyBvZiBvZGQgcGh5bGEgaW4gaGlnaA1zY2hvb2wgqakgdW50aWwga2lub3JoeW5jaCwgcHJpYXB1bGlk LCBnbmF0aG9zdG9tdWxpZCBhbmQNcG9nb25vcGhvcmFuIHJvbGwgb2ZmIHRoZSB0b25ndWUgKGF0IGxl
        YXN0IHVudGlsIHRoZSBleGFtaW5hdGlvbg1lbmRzKS4gIEJ5IGZvY3Vzc2luZyBvbiBhIGZldyBvZGRi YWxscywgd2UgZm9yZ2V0IGhvdyB1bmJhbGFuY2VkDWxpZmUgY2FuIGJlLiAgTmVhcmx5IDgwIHBlcmNl bnQgb2YgYWxsIGRlc2NyaWJlZCBhbmltYWwgc3BlY2llcw1hcmUgYXJ0aHJvcG9kcyAobW9zdGx5IGlu
        c2VjdHMpLiAgT24gdGhlIHNlYSBmbG9vciwgb25jZSB5b3UNZW51bWVyYXRlIHBvbHljaGFldGUgd29y bXMsIHNlYSB1cmNoaW5zLCBjcmFicyBhbmQgc25haWxzLCB0aGVyZQ1hcmVuJ3QgdGhhdCBtYW55IGNv ZWxvbWF0ZSBpbnZlcnRlYnJhdGVzIGxlZnQuICBTdGVyZW90eXB5LCBvcg10aGUgY3JhbW1pbmcgb2Yg
        bW9zdCBzcGVjaWVzIGludG8gYSBmZXcgYW5hdG9taWNhbCBwbGFucywgaXMgYQ1jYXJkaW5hbCBmZWF0 dXJlIG9mIG1vZGVybiBsaWZlIKmpIGFuZCBpdHMgZ3JlYXRlc3QgZGlmZmVyZW5jZQ1mcm9tIHRoZSB3 b3JsZCBvZiBCdXJnZXNzIHRpbWVzLiAKCVNldmVyYWwgb2YgbXkgY29sbGVhZ3VlcyAoSmFhbnVzc29u
        LCBsOThsOyBSdW5uZWdhciwgbDk4NykgIA1oYXZlIHN1Z2dlc3RlZCB0aGF0IHdlIGVsaW1pbmF0ZSB0 aGUgY29uZnVzaW9uIGFib3V0IGRpdmVyc2l0eSBieQ1yZXN0cmljdGluZyB0aGlzIHZlcm5hY3VsYXIg dGVybSB0byB0aGUgZmlyc3Qgc2Vuc2UsIG9yIG51bWJlciBvZg1zcGVjaWVzLiAgVGhlIHNlY29uZCBt
        ZWFuaW5nIG9mIGRpZmZlcmVuY2VzIGluIGFuYXRvbWljYWwgZGVzaWducw1zaG91bGQgdGhlbiBiZSBj YWxsZWQgImRpc3Bhcml0eS4iICBVc2luZyB0aGlzIHRlcm1pbm9sb2d5LCB3ZQ1tYXkgYWNrbm93bGVk Z2UgYSBjZW50cmFsIGFuZCBzdXJwcmlzaW5nIGZhY3Qgb2YgbGlmZSdzIGhpc3RvcnkgqqkgbWFya2Vk
        IGRlY3JlYXNlIGluIGRpc3Bhcml0eSBmb2xsb3dlZCBieSBhbiBvdXRzdGFuZGluZw1pbmNyZWFzZSBp biBkaXZlcnNpdHkgd2l0aGluIHRoZSBmZXcgc3Vydml2aW5nIGRlc2lnbnMuCgoKCgrcZAAAAAAAANyM Zm9yIHJlYXNvbnMgdGhhdCBiZWFyIG5vIHJlbGF0aW9uc2hpcCB0byB0aGUgRGFyd2luaWFuIGJhc2lz
        IG9mDXN1Y2Nlc3MgaW4gbm9ybWFsIHRpbWVzLiAgRXZlbiBpZiBmaXNoZXMgaG9uZSB0aGVpciBhZGFw dGF0aW9ucw10byBwZWFrcyBvZiBhcXVhdGljIHBlcmZlY3Rpb24sIHRoZXkgd2lsbCBhbGwgZGllIGlm IHRoZSBwb25kcw1kcnkgdXAuICBCdXQgZ3J1YmJ5IG9sZCBCdXN0ZXIgdGhlIEx1bmdmaXNoLCBmb3Jt
        ZXIgbGF1Z2hpbmcNc3RvY2sgb2YgdGhlIHBpc2NpbmUgcHJpZXN0aG9vZCwgbWlnaHQgcHVsbCB0aHJv dWdoIKmpIGFuZCBub3QNYmVjYXVzZSBhIGJ1bmlvbiBvbiBoaXMgZ3JlYXQgZ3JhbmRmYXRoZXIncyBm aW4gd2FybmVkIGhpcw1hbmNlc3RvcnMgYWJvdXQgYW4gaW1wZW5kaW5nIGNvbWV0LiAgQnVzdGVyIGFu
        ZCBoaXMga2luIG1heQ1wcmV2YWlsIGJlY2F1c2UgYSBmZWF0dXJlLCBldm9sdmVkIGxvbmcgYWdvIGZv ciBhIGRpZmZlcmVudCB1c2UsDWZvcnR1aXRvdXNseSBwZXJtaXR0ZWQgc3Vydml2YWwgdGhyb3VnaCBh IHN1ZGRlbiBhbmQNdW5wcmVkaWN0YWJsZSBjaGFuZ2UgaW4gcnVsZXMuICBBbmQgaWYgd2UgYXJlIEJ1
        c3RlcidzIGxlZ2FjeSwNYW5kIHRoZSByZXN1bHQgb2YgYSB0aG91c2FuZCBvdGhlciBzaW1pbGFybHkg aGFwcHkgYWNjaWRlbnRzLCBob3cNY2FuIHdlIHBvc3NpYmx5IHZpZXcgbWVudGFsaXR5IGFzIGluZXZp dGFibGUsIG9yIGV2ZW4gcHJvYmFibGU/CglXZSBsaXZlLCBhcyBvdXIgaHVtb3Jpc3RzIHByb2NsYWlt
        LCBpbiBhIHdvcmxkIG9mIGdvb2QgbmV3cw1hbmQgYmFkIG5ld3MuICBUaGUgZ29vZCBuZXdzIGlzIHRo YXQgd2UgY2FuIHNwZWNpZnkgYW4gZXhwZXJpbWVudA10byBkZWNpZGUgYmV0d2VlbiB0aGUgY29udmVu dGlvbmFsIGFuZCByYWRpY2FsIGludGVycHJldGF0aW9ucyBvZg13aW5ub3dpbmcsIHRoZXJlYnkgc2V0
        dGxpbmcgdGhlIG1vc3QgaW1wb3J0YW50IHF1ZXN0aW9uIHdlIGNhbg1hc2sgYWJvdXQgdGhlIGhpc3Rv cnkgb2YgbGlmZS4gIFRoZSBiYWQgbmV3cyBpcyB0aGF0IHdlIGNhbid0DXBvc3NpYmx5IHBlcmZvcm0g dGhlIGV4cGVyaW1lbnQuICAKCUkgY2FsbCB0aGlzIGV4cGVyaW1lbnQgInJlcGxheWluZyBsaWZlJ3Mg
        dGFwZS4iICBZb3UgcHJlc3MNdGhlIHJld2luZCBidXR0b24gYW5kLCBtYWtpbmcgc3VyZSB5b3UgdGhv cm91Z2hseSBlcmFzZQ1ldmVyeXRoaW5nIHRoYXQgYWN0dWFsbHkgaGFwcGVuZWQsIGdvIGJhY2sgdG8g YW55IHRpbWUgaW4gdGhlDXBhc3Qgqakgc2F5IHRoZSBzZWFzIG9mIHRoZSBCdXJnZXNzIFNoYWxlLiAg
        VGhlbiBsZXQgdGhlIHRhcGUgcnVuDWFnYWluIGFuZCBzZWUgaWYgdGhlIHJlcGV0aXRpb24gbG9va3Mg YXQgYWxsIGxpa2UgdGhlIG9yaWdpbmFsLiANSWYgZWFjaCByZXBsYXkgc3Ryb25nbHkgcmVzZW1ibGVz IGxpZmUncyBhY3R1YWwgcGF0aHdheSwgdGhlbiB3ZQ1tdXN0IGNvbmNsdWRlIHRoYXQgd2hhdCByZWFs
        bHkgaGFwcGVuZWQgcHJldHR5IG11Y2ggaGFkIHRvIG9jY3VyLiANQnV0IHN1cHBvc2UgdGhhdCB0aGUg ZXhwZXJpbWVudGFsIHZlcnNpb25zIGFsbCB5aWVsZCBzZW5zaWJsZdxkAAAAAAIA3AtyZXN1bHRzIHN0 cmlraW5nbHkgZGlmZmVyZW50IGZyb20gdGhlIGFjdHVhbCBoaXN0b3J5IG9mIGxpZmU/IA1XaGF0IGNv
        dWxkIHdlIHRoZW4gc2F5IGFib3V0IHRoZSBwcmVkaWN0YWJpbGl0eSBvZiBzZWxmqWNvbnNjaW91cw1p bnRlbGxpZ2VuY2U/IG9yIG9mIG1hbW1hbHM/IG9yIG9mIHZlcnRlYnJhdGVzPyAgb3Igb2YgbGlmZSBv bg1sYW5kPyBvciBzaW1wbHkgb2YgbXVsdGljZWxsdWxhciBwZXJzaXN0ZW5jZSBmb3IgNjAwIG1pbGxp
        b24NZGlmZmljdWx0IHllYXJzPwoJV2UgY2FuIG5vdyBhcHByZWNpYXRlIHRoZSBjZW50cmFsIGltcG9y dGFuY2Ugb2YgdGhlIEJ1cmdlc3MNcmV2aXNpb24sIGFuZCBpdHMgaWNvbm9ncmFwaHkgb2Ygd2lubm93 aW5nLiAgVW5kZXIgdGhlIGxhZGRlciBvcg1jb25lLCB0aGUgaXNzdWUgb2YgbGlmZSdzIHRhcGUgZG9l
        cyBub3QgYXJpc2UuICBUaGUgbGFkZGVyIGhhcw1idXQgb25lIGJvdHRvbSBydW5nLCBhbmQgb25lIGRp cmVjdGlvbi4gIFJlcGx5IHRoZSB0YXBlIGZvcmV2ZXIsDWFuZCBlb2hpcHB1cyBhbHdheXMgZ2FsbG9w cyBpbnRvIHRoZSBzdW5yaXNlLCBiZWFyaW5nIGl0cyBsYXJnZXINYm9keSBvbiBmZXdlciB0b2VzLiAg
        VGhlIGNvbmUgaGFzIGEgbmFycm93IG5lY2sgYW5kIGEgcmVzdHJpY3RlZA1yYW5nZSBvZiB1cHdhcmQg bW92ZW1lbnQuICBSZXdpbmQgdGhlIHRhcGUgYmFjayBpbnRvIHRoZSBuZWNrIG9mDXRpbWUsIGFuZCB5 b3UgYWx3YXlzIG9idGFpbiB0aGUgc2FtZSBwcm90b3R5cGVzLCBjb25zdHJhaW5lZCB0bw1yaXNlIGlu
        IHRoZSBzYW1lIGdlbmVyYWwgZGlyZWN0aW9uLgoJQnV0IGlmIGEgcmFkaWNhbCB3aW5ub3dpbmcgb2Yg YSBtdWNoIGdyZWF0ZXIgcmFuZ2Ugb2YNaW5pdGlhbCBwb3NzaWJpbGl0aWVzIHNldCB0aGUgcGF0dGVy biBvZiBsYXRlciBsaWZlLCBpbmNsdWRpbmcNdGhlIGNoYW5jZSBvZiBvdXIgb3duIG9yaWdpbiwgdGhl
        biBjb25zaWRlciB0aGUgYWx0ZXJuYXRpdmVzLiANU3VwcG9zZSB0aGF0IHRlbiBvZiBhIGh1bmRyZWQg ZGVzaWducyB3aWxsIHN1cnZpdmUgYW5kIGRpdmVyc2lmeT8gDUlmIHRoZSB0ZW4gc3Vydml2b3JzIGFy ZSBwcmVkaWN0YWJsZSBieSBzdXBlcmlvcml0eSBvZiBhbmF0b215DShpbnRlcnByZXRhdGlvbiBvbmUp
        LCB0aGVuIHRoZXkgd2luIGVhY2ggdGltZSCpqSBhbmQgQnVyZ2Vzcw13aW5ub3dpbmcgZG9lcyBub3Qg Y2hhbGxlbmdlIG91ciBjb21mb3J0aW5nIHZpZXcgb2YgbGlmZS4gIEJ1dCBpZg10aGUgdGVuIHN1cnZp dm9ycyBhcmUgcHJvdGVn4YLhcyBvZiBMYWR5IEx1Y2sgb3IgZm9ydHVuYXRlDWJlbmVmaWNpYXJpZXMg
        b2Ygb2RkIGhpc3RvcmljYWwgY29udGluZ2VuY2llcyAoaW50ZXJwcmV0YXRpb24NdHdvKSwgdGhlbiBl YWNoIHJlcGxheSBvZiB0aGUgdGFwZSB5aWVsZHMgYSBkaWZmZXJlbnQgc2V0IG9mDXN1cnZpdm9ycywg YW5kIGEgcmFkaWNhbGx5IGRpZmZlcmVudCBoaXN0b3J5LiAgQW5kIGlmIHlvdSByZWNhbGwNaG93IHRv
        IGNhbGN1bGF0ZSBwZXJtdXRhdGlvbnMgYW5kIGNvbWJpbmF0aW9ucyBmcm9tIGhpZ2ipc2Nob29s3GQA AAAAAgDcC2FsZ2VicmEsIHlvdSB3aWxsIHJlbWVtYmVyIHRoYXQgdGhlIHRvdGFsIG51bWJlciBvZiBj b21iaW5hdGlvbnMNZm9yIGwwIGl0ZW1zIGZyb20gYSBwb29sIG9mIGwwMCB5aWVsZHMgbW9yZSB0aGFu
        IGw3IHRyaWxsaW9uDXBvdGVudGlhbCBvdXRjb21lcy4gSSBhbSB3aWxsaW5nIHRvIGdyYW50IHRoYXQg c29tZSBncm91cHMgbWlnaHQNaGF2ZSBlbmpveWVkIGEgcHJlZGljdGFibGUgZWRnZSAodGhvdWdoIHdl IGhhdmUgbm8gaWRlYSBob3cgdG8NaWRlbnRpZnkgb3IgZGVmaW5lIHRoZW0pLCBidXQgSSBzdXNwZWN0
        IHRoYXQgdGhlIHNlY29uZA1pbnRlcnByZXRhdGlvbiBncmFzcHMgYSBjZW50cmFsIHRydXRoIGFib3V0 IGV2b2x1dGlvbi4gIFRoZQ1CdXJnZXNzIFNoYWxlLCBpbiBtYWtpbmcgdGhpcyBzZWNvbmQgaW50ZXJw cmV0YXRpb24gaW50ZWxsaWdpYmxlDWJ5IHRoZSBoeXBvdGhldGljYWwgZXhwZXJpbWVudCBvZiB0aGUg
        dGFwZSwgcHJvbW90ZXMgYSByYWRpY2FsDXZpZXcgb2YgZXZvbHV0aW9uYXJ5IHBhdGh3YXlzIGFuZCBw cmVkaWN0YWJpbGl0eS4KCVRoZSByZWplY3Rpb24gb2YgY29uZSBhbmQgbGFkZGVyIGRvZXMgbm90IHRo cm93IHVzIGludG8gdGhlDWFybXMgb2YgYSBzdXBwb3NlZCBvcHBvc2l0ZSCpqSBwdXJlIGNoYW5jZSBp
        biB0aGUgc2Vuc2Ugb2YgY29pbg10b3NzaW5nLCBvciBHb2QgcGxheWluZyBkaWNlIHdpdGggdGhlIHVu aXZlcnNlLiAgSnVzdCBhcyB0aGUgY29uZQ1hbmQgbGFkZGVyIGFyZSBsaW1pdGluZyBpY29ub2dyYXBo aWVzIGZvciBsaWZlJ3MgaGlzdG9yeSwgc28gdG9vDWRvZXMgdGhlIHZlcnkgaWRlYSBvZiBkaWNob3Rv
        bXkgZ3JpZXZvdXNseSByZXN0cmljdCBvdXIgdGhpbmtpbmcuIA1EaWNob3RvbXkgaGFzIGl0cyBvd24g dW5mb3J0dW5hdGUgaWNvbm9ncmFwaHkgqakgYSBzaW5nbGUgbGluZQ1lbWJyYWNpbmcgYWxsIHBvc3Np YmxlIG9waW5pb25zLCB3aXRoIHRoZSB0d28gZW5kcyByZXByZXNlbnRpbmcNcG9sYXIgb3Bwb3NpdGVz
        LCBkZXRlcm1pbmlzbSBhbmQgcmFuZG9tbmVzcyBpbiB0aGlzIGNhc2UuCglBbiBvbGQgdHJhZGl0aW9u LCBkYXRpbmcgYXQgbGVhc3QgdG8gQXJpc3RvdGxlLCBhZHZpc2VzIHRoZQ1wcnVkZW50IHBlcnNvbiB0 byBzdGFrZSBvdXQgYSBwb3NpdGlvbiBjb21mb3J0YWJseSB0b3dhcmRzIHRoZQ1taWRkbGUgb2YgdGhl
        IGxpbmUgqakgdGhlIJRhdXJlYZUglG1lZGlvY3JpdGFzlSAob3IgZ29sZGVuIG1lYW4pLiANQnV0LCBp biB0aGlzIGNhc2UsIHRoZSBtaWRkbGUgb2YgdGhlIGxpbmUgaGFzIG5vdCBiZWVuIHNvIGhhcHB5IGEN cGxhY2UsIGFuZCB0aGUgZ2FtZSBvZiBkaWNob3RvbXkgaGFzIHNlcmlvdXNseSBoYW1wZXJlZCBvdXIN
        dGhpbmtpbmcgYWJvdXQgdGhlIGhpc3Rvcnkgb2YgbGlmZS4gIFdlIG1heSB1bmRlcnN0YW5kIHRoYXQg dGhlDW9sZGVyIGRldGVybWluaXNtIG9mIHByZWRpY3RhYmxlIHByb2dyZXNzIGNhbm5vdCBzdHJpY3Rs eSBhcHBseSwNYnV0IHdlIHRoaW5rIHRoYXQgb3VyIG9ubHkgYWx0ZXJuYXRpdmUgbGllcyB3aXRoIHRo
        ZSBkZXNwYWlyIG9mDXB1cmUgcmFuZG9tbmVzcy4gIFNvIHdlIGFyZSBkcml2ZW4gYmFjayB0b3dhcmRz IHRoZSBvbGQgdmlldywgYW5k3GQAAAAAAgDcC2ZpbmlzaCB3aXRoIGRpc2NvbWZvcnQgYXQgc29tZSBp bGypZGVmaW5lZCBjb25mdXNpb24gaW4gYmV0d2Vlbi4KCUkgc3Ryb25nbHkgcmVqZWN0IGFueSB2aXNp
        b24gdGhhdCBwbGFjZXMgb3VyIG9wdGlvbnMgb24gYQ1saW5lLCBhbmQgaG9sZHMgdGhhdCB0aGUgb25s eSBhbHRlcm5hdGl2ZSB0byBhIHBhaXIgb2YgZXh0cmVtZQ1wb3NpdGlvbnMgbGllcyBzb21ld2hlcmUg YmV0d2VlbiB0aGVtLiAgTW9yZSBmcnVpdGZ1bA1wZXJzcGVjdGl2ZXMgb2Z0ZW4gcmVxdWlyZSB0aGF0
        IHdlIHN0ZXAgb2ZmIHRoZSBsaW5lIHRvIGEgc2l0ZQ1vdXRzaWRlIHRoZSBkaWNob3RvbXkuCglJIHdy aXRlIHRoaXMgYm9vayB0byBzdWdnZXN0IGEgdGhpcmQgYXR0aXR1ZGUgb2ZmIHRoZSBsaW5lLiANSSBi ZWxpZXZlIHRoYXQgdGhlIEJ1cmdlc3MgcmV2aXNpb24sIGludGVycHJldGVkIHRocm91Z2ggdGhlDXRo
        ZW1lIG9mIHJlcGxheWluZyBsaWZlJ3MgdGFwZSwgb2ZmZXJzIHBvd2VyZnVsIHN1cHBvcnQgZm9yIHRo aXMNZGlmZmVyZW50IHZpZXcgb2YgbGlmZS4gIEluIHNob3J0LCBhbnkgcmVwbGF5IG9mIHRoZSB0YXBl IHdvdWxkDWxlYWQgZXZvbHV0aW9uIGRvd24gYSBwYXRod2F5IHJhZGljYWxseSBkaWZmZXJlbnQgZnJv
        bSB0aGUgcm9hZA1hY3R1YWxseSB0YWtlbi4gIEJ1dCB0aGVzZSBkaWZmZXJlbmNlcyBpbiBvdXRjb21l IGRvIG5vdCBpbXBseQ10aGF0IGV2b2x1dGlvbiBpcyBzZW5zZWxlc3MsIGFuZCB3aXRob3V0IG1lYW5p bmdmdWwgcGF0dGVybi4gIFRoZQ1kaXZlcmdlbnQgcm91dGUgb2YgdGhlIHJlcGxheSB3b3VsZCBiZSBq
        dXN0IGFzIGludGVycHJldGFibGUsDWp1c3QgYXMgZXhwbGFpbmFibGUglGFmdGVylSB0aGUgZmFjdCwg YXMgdGhlIGFjdHVhbCByb2FkLiAgQnV0IHRoZQ1kaXZlcnNpdHkgb2YgcG9zc2libGUgaXRpbmVyYXJp ZXMgZG9lcyBkZW1vbnN0cmF0ZSB0aGF0IGV2ZW50dWFsDXJlc3VsdHMgY2Fubm90IGJlIHByZWRpY3Rl
        ZCBhdCB0aGUgb3V0c2V0LiAgRWFjaCBzdGVwIHByb2NlZWRzDWZvciBjYXVzZSwgYnV0IG5vIGZpbmFs ZSBjYW4gYmUgc3BlY2lmaWVkIGF0IHRoZSBzdGFydCwgYW5kIG5vbmUNd291bGQgZXZlciBvY2N1ciBh IHNlY29uZCB0aW1lIGluIHRoZSBzYW1lIHdheSwgYmVjYXVzZSBhbnkNcGF0aHdheSBwcm9jZWVkcyB0
        aHJvdWdoIHRob3VzYW5kcyBvZiBpbXByb2JhYmxlIHN0YWdlcy4gIEFsdGVyDWFueSBlYXJseSBldmVu dCwgZXZlciBzbyBzbGlnaHRseSBhbmQgd2l0aG91dCBhcHBhcmVudCBpbXBvcnRhbmNlDWF0IHRoZSB0 aW1lLCBhbmQgZXZvbHV0aW9uIGNhc2NhZGVzIGludG8gYSByYWRpY2FsbHkgZGlmZmVyZW50DWNoYW5u
        ZWwuCglUaGlzIHRoaXJkIGF0dGl0dWRlIGhhcyBhIG5hbWUuICBJdCByZXByZXNlbnRzIG5vIG1vcmUg bm9yDWxlc3MgdGhhbiB0aGUgZXNzZW5jZSBvZiBoaXN0b3J5LiAgSXRzIHdhdGNod29yZCBpcyBjb250 aW5nZW5jeQqpqSBhbmQgY29udGluZ2VuY3kgaXMgYSB0aGluZyB1bnRvIGl0c2VsZiwgbm90IHRoZSB0
        aXRyYXRpb24gb2bcZAAAAAAAANwLZGV0ZXJtaW5pc20gYnkgcmFuZG9tbmVzcy4gIFNjaWVuY2UgaGFz IGJlZW4gc2xvdyB0byBhZG1pdCB0aGUNZGlmZmVyZW50IGV4cGxhbmF0b3J5IHdvcmxkIG9mIGhpc3Rv cnkgaW50byBpdHMgZG9tYWluIKmpIGFuZCBvdXINaW50ZXJwcmV0YXRpb25zIGhhdmUgc3VmZmVyZWQg
        aW4gcG92ZXJ0eSBmb3IgdGhpcyBvbWlzc2lvbi4gDVNjaWVuY2UgaGFzIGFsc28gdGVuZGVkIHRvIGRl bmlncmF0ZSBoaXN0b3J5LCB3aGVuIGZvcmNlZCB0byBhDWNvbmZyb250YXRpb24sIGJ5IHJlZ2FyZGlu ZyBhbnkgaW52b2NhdGlvbiBvZiBjb250aW5nZW5jeSBhcyBsZXNzDWVsZWdhbnQgb3IgbGVzcyBtZWFu
        aW5nZnVsIHRoYW4gZXhwbGFuYXRpb25zIGJhc2VkIGRpcmVjdGx5IG9uDXRpbWVsZXNzICJsYXdzIG9m IG5hdHVyZS4iCglUaGlzIGJvb2sgaXMgYWJvdXQgdGhlIG5hdHVyZSBvZiBoaXN0b3J5LCBhbmQgdGhl DW92ZXJ3aGVsbWluZyBpbXByb2JhYmlsaXR5IG9mIGh1bWFuIGV2b2x1dGlvbiB1bmRlciB0aGVtZXMg
        b2YNY29udGluZ2VuY3kgYW5kIHRoZSBtZXRhcGhvciBvZiByZXBsYXlpbmcgbGlmZSdzIHRhcGUuICBJ dA1mb2N1c3NlcyB1cG9uIHRoZSBuZXcgaW50ZXJwcmV0YXRpb24gb2YgdGhlIEJ1cmdlc3MgU2hhbGUg YXMgb3VyDWZpbmVzdCBpbGx1c3RyYXRpb24gb2Ygd2hhdCBjb250aW5nZW5jeSBpbXBsaWVzIGluIG91
        ciBxdWVzdCB0bw11bmRlcnN0YW5kIHRoZSBldm9sdXRpb24gb2YgbGlmZS4KCUkgY29uY2VudHJhdGUg dXBvbiBkZXRhaWxzIG9mIHRoZSBCdXJnZXNzIFNoYWxlIGJlY2F1c2UgSQ1kb24ndCBiZWxpZXZlIHRo YXQgaW1wb3J0YW50IGNvbmNlcHRzIHNob3VsZCBiZSBkaXNjdXNzZWQNdGVuZGVudGlvdXNseSBpbiB0
        aGUgYWJzdHJhY3QgKG11Y2ggYXMgSSBoYXZlIGRpc29iZXllZCB0aGUgcnVsZQ1pbiB0aGlzIG9wZW5p bmcgY2hhcHRlciEpICBQZW9wbGUsIGFzIGN1cmlvdXMgcHJpbWF0ZXMsIGRvdGUgb24NY29uY3JldGUg b2JqZWN0cyB0aGF0IGNhbiBiZSBzZWVuIGFuZCBmb25kbGVkLiAgR29kIGR3ZWxscyBhbW9uZw10aGUg
        ZGV0YWlscywgbm90IGluIHRoZSByZWFsbSBvZiBwdXJlIGdlbmVyYWxpdHkuICBXZSBtdXN0IHRhY2ts ZQ1hbmQgZ3Jhc3AgdGhlIGxhcmdlciwgZW5jb21wYXNzaW5nIHRoZW1lcyBvZiBvdXIgdW5pdmVyc2Us IGJ1dCB3ZQ1tYWtlIG91ciBiZXN0IGFwcHJvYWNoIHRocm91Z2ggc21hbGwgY3VyaW9zaXRpZXMgdGhh
        dCByaXZldCBvdXQNYXR0ZW50aW9uIKmpIGFsbCB0aG9zZSBwcmV0dHkgcGViYmxlcyBvbiB0aGUgc2hv cmVsaW5lIG9mDWtub3dsZWRnZS4gIEZvciB0aGUgb2NlYW4gb2YgdHJ1dGggd2FzaGVzIG92ZXIgdGhl IHBlYmJsZXMgd2l0aA1ldmVyeSB3YXZlIKmpIGFuZCB0aGV5IHJhdHRsZSBhbmQgY2xpbmsgd2l0aCB0
        aGUgbW9zdCB3b25kcm91cw1kaW4uCglXZSBjYW4gYXJndWUgYWJvdXQgYWJzdHJhY3QgaWRlYXMgZm9y ZXZlci4gIFdlIGNhbiBwb3N0dXJl3GQAAAAAAADcC2FuZCBmZWludC4gIFdlIG1heSAicHJvdmUiIHRv IHRoZSBzYXRpc2ZhY3Rpb24gb2Ygb25lIGdlbmVyYXRpb24sDW9ubHkgdG8gYmVjb21lIHRoZSBsYXVn
        aGluZyBzdG9jayBvZiBhIGxhdGVyIGNlbnR1cnkgKG9yLCB3b3JzZQ1zdGlsbCwgdG8gYmUgdXR0ZXJs eSBmb3Jnb3R0ZW4pLiAgV2UgbWF5IGV2ZW4gdmFsaWRhdGUgYW4gaWRlYSBieQ1ncmFmdGluZyBpdCBw ZXJtYW5lbnRseSB1cG9uIGFuIG9iamVjdCBvZiBuYXR1cmUgqakgdGh1cw1wYXJ0aWNpcGF0aW5nIGlu
        IHRoZSBsZWdpdGltYXRlIHNlbnNlIG9mIGEgZ3JlYXQgaHVtYW4gYWR2ZW50dXJlDWNhbGxlZCAicHJv Z3Jlc3MgaW4gc2NpZW50aWZpYyB0aG91Z2h0LiIKCUJ1dCB0aGUgYW5pbWFscyBvZiB0aGUgQnVyZ2Vz cyBTaGFsZSBhcmUgc29tZWhvdyBldmVuIG1vcmUNc2F0aXNmeWluZyBpbiB0aGVpciBhZGFtYW50aW5l
        IGZhY3R1YWxpdHkuICBXZSB3aWxsIGFyZ3VlIGZvcmV2ZXINYWJvdXQgdGhlIG1lYW5pbmcgb2YgbGlm ZSwgYnV0IJRPcGFiaW5pYZUgZWl0aGVyIGRpZCBvciBkaWQgbm90DWhhdmUgZml2ZSBleWVzIKmpIGFu ZCB3ZSBjYW4ga25vdyBmb3IgY2VydGFpbiBvbmUgd2F5IG9yIHRoZQ1vdGhlci4gIFRoZSBhbmltYWxz
        IG9mIHRoZSBCdXJnZXNzIFNoYWxlIGFyZSBhbHNvIHRoZSB3b3JsZCdzDW1vc3QgaW1wb3J0YW50IGZv c3NpbHMsIGluIHBhcnQgYmVjYXVzZSB0aGV5IGhhdmUgcmV2aXNlZCBvdXINdmlldyBvZiBsaWZlLCBi dXQgYWxzbyBiZWNhdXNlIHRoZXkgYXJlIG9iamVjdHMgb2Ygc3VjaCBleHF1aXNpdGUNYmVhdXR5LiAg
        VGhlaXIgbG92ZWxpbmVzcyBsaWVzIGFzIG11Y2ggaW4gdGhlIGJyZWFkdGggb2YgaWRlYXMNdGhhdCB0 aGV5IGVtYm9keSwgYW5kIGluIHRoZSBtYWduaXR1ZGUgb2Ygb3VyIHN0cnVnZ2xlIHRvDWludGVycHJl dCB0aGVpciBhbmF0b215LCBhcyBpbiB0aGVpciBlbGVnYW5jZSBvZiBmb3JtIGFuZA1wcmVzZXJ2YXRp
        b24uCglUaGUgYW5pbWFscyBvZiB0aGUgQnVyZ2VzcyBTaGFsZSBhcmUgaG9seSBvYmplY3RzIKmpIGlu IHRoZQ11bmNvbnZlbnRpb25hbCBzZW5zZSB0aGF0IHRoaXMgd29yZCBjb252ZXlzIGluIHNvbWUgY3Vs dHVyZXMuICBXZQ1kbyBub3QgcGxhY2UgdGhlbSBvbiBwZWRlc3RhbHMgYW5kIHdvcnNoaXAgZnJvbSBh
        ZmFyLiAgV2UgY2xpbWINbW91bnRhaW5zIGFuZCBkeW5hbWl0ZSBoaWxsc2lkZXMgdG8gZmluZCB0aGVt LiAgV2UgcXVhcnJ5IHRoZW0sDXNwbGl0IHRoZW0sIGNhcnZlIHRoZW0sIGRyYXcgdGhlbSwgYW5kIGRp c3NlY3QgdGhlbSwgc3RydWdnbGluZw10byB3cmVzdCB0aGVpciBzZWNyZXRzLiAgV2UgdmlsaWZ5IGFu
        ZCBjdXJzZSB0aGVtIGZvciB0aGVpciBkYW2pDW5hYmxlIGludHJhbnNpZ2VuY2UuICBUaGV5IGFyZSBn cnViYnkgbGl0dGxlIGNyZWF0dXJlcyBvZiBhIHNlYQ1mbG9vciA1MzAgbWlsbGlvbiB5ZWFycyBvbGQs IGJ1dCB3ZSBncmVldCB0aGVtIHdpdGggYXdlIGJlY2F1c2UNdGhleSBhcmUgdGhlIE9sZCBPbmVzLCBh
        bmQgdGhleSBhcmUgdHJ5aW5nIHRvIHRlbGwgdXMgc29tZXRoaW5nLtxkAAAAAAIA3Iw= </foxml:binaryContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
  <foxml:datastream ID="descMetadata" STATE="A" CONTROL_GROUP="X" VERSIONABLE="true">
    <foxml:datastreamVersion ID="descMetadata.0" LABEL="" CREATED="2011-09-15T22:00:53.992Z" MIMETYPE="text/xml" SIZE="149">
      <foxml:xmlContent>
        <dc xmlns:dcterms="http://purl.org/dc/terms/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <dcterms:extent>46 KB</dcterms:extent>
        </dc>
      </foxml:xmlContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
  <foxml:datastream ID="derivative_html" STATE="A" CONTROL_GROUP="M" VERSIONABLE="true">
    <foxml:datastreamVersion ID="derivative_html.0" LABEL="Display derivative for BURCH1" CREATED="2011-09-15T22:00:54.075Z" MIMETYPE="text/html" SIZE="45175">
      <foxml:binaryContent> PGh0bWw+CjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQv aHRtbDsgY2hhcnNldD1pc28tODg1OS0xIj4KPHRpdGxlPkJVUkNIMTwvdGl0bGU+CjxtZXRhIG5hbWU9 IkdFTkVSQVRPUiIgY29udGVudD0iSFRNTCBUcmFuc2l0IDkuMCBUcmlhbCBWZXJzaW9uIGJ5IEF2YW50
        c3RhciwgSW5jLiB3d3cuYXZhbnRzdGFyLmNvbSI+CjxtZXRhIG5hbWU9IlRyYW5zaXRQdWJJRCIgY29u dGVudD0iNCI+CjwvaGVhZD4KPGJvZHk+PGEgbmFtZT0iVG9wT2ZQYWdlIj4gPC9hPgo8IS0tIFRSQU5T SVQgLSBJTkZPQkVGT1JFIC0tPgoKCjxwIGFsaWduPSJjZW50ZXIiPkhPTUFHRSBUTyA8dT5PUEFCSU5J
        QTwvdT48L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj5UaGUgQnVyZ2VzcyBTaGFsZSBhbmQgdGhlIE5hdHVy ZSBvZiBIaXN0b3J5PC9wPgoKPHAgYWxpZ249ImNlbnRlciI+U3RlcGhlbiBKYXkgR291bGQ8L3A+Cgo8 cCBhbGlnbj0iY2VudGVyIj5NdXNldW0gb2YgQ29tcGFyYXRpdmUgWm9vbG9neTwvcD4KCjxwIGFsaWdu
        PSJjZW50ZXIiPkhhcnZhcmQgVW5pdmVyc2l0eTwvcD4KCjxwIGFsaWduPSJjZW50ZXIiPkNhbWJyaWRn ZSwgTUEgMDJsMzg8L3A+Cgo8cD5DaGFwdGVyIEk6IDx1PlRoZSBJY29ub2dyYXBoeSBvZiBhbiBFeHBl Y3RhdGlvbjwvdT48L3A+Cgo8cD5BKSAgPHU+QSBQcm9sb2d1ZSBpbiBQaWN0dXJlczwvdT48L3A+Cgo8
        cD5BbmQgSSB3aWxsIGxheSBzaW5ld3MgdXBvbiB5b3UsIGFuZCB3aWxsIGJyaW5nIHVwIGZsZXNoICAg dXBvbiB5b3UsIGFuZCBjb3ZlciB5b3Ugd2l0aCBza2luLCBhbmQgcHV0IGJyZWF0aCBpbiAgIHlvdSwg YW5kIHllIHNoYWxsIGxpdmUgKEV6ZWtpZWwgMzc6NikuPC9wPgoKPHA+Tm90IHNpbmNlIHRoZSBMb3Jk
        IGhpbXNlbGYgc2hvd2VkIGhpcyBzdHVmZiB0byBFemVraWVsIGluIHRoZSBWYWxsZXkgb2YgRHJ5IEJv bmVzIGhhZCBhbnlvbmUgc2hvd24gc3VjaCBncmFjZSBhbmQgc2tpbGwgaW4gdGhlIHJlY29uc3RydWN0 aW9uIG9mIGFuaW1hbHMgZnJvbSBkaXNhcnRpY3VsYXRlZCBza2VsZXRvbnMuICBDaGFybGVzIFIuIEtu
        aWdodCwgbW9zdCBjZWxlYnJhdGVkIG9mIGFsbCBhcnRpc3RzIGluIHRoZSByZWFuaW1hdGlvbiBvZiBm b3NzaWxzLCBwYWludGVkIGFsbCB0aGUgY2Fub25pY2FsIGZpZ3VyZXMgb2YgZGlub3NhdXJzIHRoYXQg ZmlyZSBvdXIgZmVhciBhbmQgaW1hZ2luYXRpb24gdG8gdGhpcyBkYXkuICBJbiBGZWJydWFyeSwgbDk0
        MiwgS25pZ2h0IGRlc2lnbmVkIGEgY2hyb25vbG9naWNhbCBzZXJpZXMgb2YgcGFub3JhbWFzLCBkZXBp Y3RpbmcgdGhlIGhpc3Rvcnkgb2YgbGlmZSBmcm9tIHRoZSBhZHZlbnQgb2YgbXVsdGljZWxsdWxhciBh bmltYWxzIHRvIHRoZSB0cml1bXBoIG9mIDx1PkhvbW88L3U+IDx1PnNhcGllbnM8L3U+LCBmb3IgPHU+
        TmF0aW9uYWw8L3U+IDx1Pkdlb2dyYXBoaWM8L3U+LiAgKFRoaXMgaXMgdGhlIG9uZSBpc3N1ZSB0aGF0 J3MgYWx3YXlzIHNhdmVkIGFuZCB0aGVyZWZvcmUgYWx3YXlzIG1pc3Npbmcgd2hlbiB5b3Ugc2VlIGEg JnF1b3Q7Y29tcGxldGUmcXVvdDsgcnVuIG9mIHRoZSBtYWdhemluZSBvbiBzYWxlIGZvciB0d28gYml0
        cyBhbiBpc3N1ZSBvbiB0aGUgYmFjayBzaGVsdmVzIG9mIHRoZSBnZW5lcmFsIHN0b3JlIGluIEJ1Y29s aWEsIE1haW5lLikgIEhlIGJhc2VkIGhpcyBmaXJzdCBwYWludGluZyBpbiB0aGUgc2VyaWVzIC0tIHRo ZSBjb3ZlciBvZiB0aGlzIGJvb2sgLS0gb24gdGhlIGFuaW1hbHMgb2YgdGhlIEJ1cmdlc3MgU2hhbGUu
        PC9wPgoKPHA+V2l0aG91dCBoZXNpdGF0aW9uIG9yIGFtYmlndWl0eSwgYW5kIGZ1bGx5IG1pbmRmdWwg b2Ygc3VjaCBwYWxlb250b2xvZ2ljYWwgd29uZGVycyBhcyBsYXJnZSBkaW5vc2F1cnMgYW5kIEFmcmlj YW4gYXBlLW1lbiwgSSBzdGF0ZSB0aGF0IHRoZSBpbnZlcnRlYnJhdGVzIG9mIHRoZSBCdXJnZXNzIFNo
        YWxlLCBmb3VuZCBoaWdoIGluIHRoZSBDYW5hZGlhbiBSb2NraWVzIGluIFlvaG8gTmF0aW9uYWwgUGFy ayBvbiB0aGUgZWFzdGVybiBib3JkZXIgb2YgQnJpdGlzaCBDb2x1bWJpYSwgYXJlIHRoZSB3b3JsZCdz IG1vc3QgaW1wb3J0YW50IGFuaW1hbCBmb3NzaWxzLiAgTW9kZXJuIG11bHRpY2VsbHVsYXIgYW5pbWFs
        cyBtYWtlIHRoZWlyIGZpcnN0IHVuY29udGVzdGVkIGFwcGVhcmFuY2UgaW4gdGhlIGZvc3NpbCByZWNv cmQgc29tZSA1NzAgbWlsbGlvbiB5ZWFycyBhZ28gLS0gYW5kIHdpdGggYSBiYW5nLCBub3QgYSBwcm90 cmFjdGVkIGNyZXNjZW5kby4gIFRoaXMgJnF1b3Q7Q2FtYnJpYW4gZXhwbG9zaW9uJnF1b3Q7IG1hcmtz
        IHRoZSBhZHZlbnQgKGF0IGxlYXN0IGludG8gZGlyZWN0IGV2aWRlbmNlKSBvZiB2aXJ0dWFsbHkgYWxs IG1ham9yIGdyb3VwcyBvZiBtb2Rlcm4gYW5pbWFscyAtLSBhbmQgYWxsIHdpdGhpbiB0aGUgbWludXNj dWxlIHNwYW4sIGdlb2xvZ2ljYWxseSBzcGVha2luZywgb2YgYSBmZXcgbWlsbGlvbiB5ZWFycy4gIFRo
        ZSBCdXJnZXNzIFNoYWxlIHJlcHJlc2VudHMgYSBwZXJpb2QganVzdCBhZnRlciB0aGlzIGV4cGxvc2lv biwgYSB0aW1lIHdoZW4gdGhlIGZ1bGwgcmFuZ2Ugb2YgaXRzIHByb2R1Y3RzIGluaGFiaXRlZCBvdXIg c2Vhcy4gIFRoZXNlIENhbmFkaWFuIGZvc3NpbHMgYXJlIHByZWNpb3VzIGJlY2F1c2UgdGhleSBwcmVz
        ZXJ2ZSwgaW4gZXhxdWlzaXRlIGRldGFpbCBkb3duIHRvIHRoZSBsYXN0IGZpbGFtZW50IG9mIGEgdHJp bG9iaXRlJ3MgZ2lsbCwgb3IgdGhlIGRldGFpbHMgb2YgYSBsYXN0IG1lYWwgaW4gYSB3b3JtJ3MgZ3V0 LCB0aGUgc29mdCBhbmF0b215IG9mIG9yZ2FuaXNtcy4gIE91ciBmb3NzaWwgcmVjb3JkIGlzIGFsbW9z
        dCBleGNsdXNpdmVseSB0aGUgc3Rvcnkgb2YgaGFyZCBwYXJ0cy4gIEJ1dCBtb3N0IGFuaW1hbHMgaGF2 ZSBub25lOyBhbmQgdGhvc2UgdGhhdCBkbyBvZnRlbiByZXZlYWwgdmVyeSBsaXR0bGUgYWJvdXQgdGhl aXIgYW5hdG9taWVzIGluIHRoZWlyIG91dGVyIGNvdmVyaW5ncyAod2hhdCBjb3VsZCB5b3UgaW5mZXIg
        YWJvdXQgYSBjbGFtIGZyb20gaXRzIHNoZWxsIGFsb25lKS4gIFRodXMsIHRoZSByYXJlIHNvZnQgYm9k aWVkIGZhdW5hcyBvZiB0aGUgZm9zc2lsIHJlY29yZCBhcmUgcHJlY2lvdXMgd2luZG93cyBpbnRvIHRo ZSB0cnVlIHJhbmdlIGFuZCBkaXZlcnNpdHkgb2YgYW5jaWVudCBsaWZlLiAgVGhlIEJ1cmdlc3MgU2hh
        bGUgaXMgb3VyIG9ubHkgZXh0ZW5zaXZlLCB3ZWxsLWRvY3VtZW50ZWQgd2luZG93IHVwb24gdGhhdCBt b3N0IGNydWNpYWwgZXZlbnQgaW4gdGhlIGhpc3Rvcnkgb2YgYW5pbWFsIGxpZmUgLS0gdGhlIGZpcnN0 IGZsb3dlcmluZyBvZiB0aGUgQ2FtYnJpYW4gZXhwbG9zaW9uLjwvcD4KCjxwPlRoZSBCdXJnZXNzIFNo
        YWxlIGFsc28gcHJlc2VudHMgYSBmYXNjaW5hdGluZyBzdG9yeSBpbiBodW1hbiB0ZXJtcy4gIFRoZSBm YXVuYSB3YXMgZGlzY292ZXJlZCBpbiBsOTA5IGJ5IEFtZXJpY2EncyBncmVhdGVzdCBwYWxlb250b2xv Z2lzdCBhbmQgc2NpZW50aWZpYyBhZG1pbmlzdHJhdG9yLCBDaGFybGVzIERvb2xpdHRsZSBXYWxjb3R0
        LCBTZWNyZXRhcnkgKHRoZWlyIG5hbWUgZm9yIGJvc3MpIG9mIHRoZSBTbWl0aHNvbmlhbiBJbnN0aXR1 dGlvbi4gIFdhbGNvdHQgcHJvY2VlZGVkIHRvIG1pc2ludGVycHJldCB0aGVzZSBmb3NzaWxzIGluIGEg Y29tcHJlaGVuc2l2ZSBhbmQgdGhvcm91Z2hseSBjb25zaXN0ZW50IG1hbm5lciBwcm9jZWVkaW5nIGRp
        cmVjdGx5IGZyb20gaGlzIGNvbnZlbnRpb25hbCB2aWV3IG9mIGxpZmUuICBJbiBzaG9ydCwgaGUgc2hv ZWhvcm5lZCBldmVyeSBsYXN0IEJ1cmdlc3MgYW5pbWFsIGludG8gYSBtb2Rlcm4gZ3JvdXAsIHZpZXdp bmcgdGhlIGZhdW5hIGNvbGxlY3RpdmVseSBhcyBhIHNldCBvZiBwcmltaXRpdmUgb3IgYW5jZXN0cmFs
        IHZlcnNpb25zIG9mIGxhdGVyLCBpbXByb3ZlZCBmb3Jtcy4gIFdhbGNvdHQncyB3b3JrIHdhcyBub3Qg Y29uc2lzdGVudGx5IGNoYWxsZW5nZWQgZm9yIG1vcmUgdGhhbiA1MCB5ZWFycy4gIEluIGw5N2wsIFBy b2Zlc3NvciBIYXJyeSBXaGl0dGluZ3RvbiBvZiBDYW1icmlkZ2UgVW5pdmVyc2l0eSBwdWJsaXNoZWQg
        dGhlIGZpcnN0IG1vbm9ncmFwaCBpbiBhIGNvbXByZWhlbnNpdmUgcmVleGFtaW5hdGlvbiB0aGF0IGJl Z2FuIHdpdGggV2FsY290dCdzIHByZXN1bXB0aW9ucyBhbmQgZW5kZWQgd2l0aCBhIHJhZGljYWwgaW50 ZXJwcmV0YXRpb24sIG5vdCBvbmx5IGZvciB0aGUgQnVyZ2VzcyBTaGFsZSwgYnV0IChieSBpbXBsaWNh
        dGlvbikgZm9yIHRoZSBlbnRpcmUgaGlzdG9yeSBvZiBsaWZlLCBpbmNsdWRpbmcgb3VyIG93biBldm9s dXRpb24uICA8L3A+Cgo8cD5UaGlzIGJvb2sgaGFzIHRocmVlIG1ham9yIGFpbXMuICBJdCBpcywgZmly c3QgYW5kIGZvcmVtb3N0LCBhIGNocm9uaWNsZSBvZiB0aGUgaW50ZW5zZSBpbnRlbGxlY3R1YWwgZHJh
        bWEgYmVoaW5kIHRoZSBvdXR3YXJkIHNlcmVuaXR5IG9mIHRoaXMgcmVpbnRlcnByZXRhdGlvbi4gIFNl Y29uZCwgYW5kIGJ5IHVuYXZvaWRhYmxlIGltcGxpY2F0aW9uLCBpdCBpcyBhIHN0YXRlbWVudCBhYm91 dCB0aGUgbmF0dXJlIG9mIGhpc3RvcnkgYW5kIHRoZSBhd2Vzb21lIGltcHJvYmFiaWxpdHkgb2YgaHVt
        YW4gZXZvbHV0aW9uLiAgQXMgYSB0aGlyZCB0aGVtZSwgSSBncmFwcGxlIHdpdGggdGhlIHBhcmFkb3gg b2Ygd2h5IHN1Y2ggYSBmdW5kYW1lbnRhbCBwcm9ncmFtIG9mIHJlc2VhcmNoIGhhcyBiZWVuIHBlcm1p dHRlZCB0byBwYXNzIHNvIGludmlzaWJseSBiZWZvcmUgdGhlIHB1YmxpYyBnYXplLiAgV2h5IGlzIDx1
        Pk9wYWJpbmlhPC91Piwga2V5IGFuaW1hbCBpbiBhIG5ldyB2aWV3IG9mIGxpZmUsIG5vdCBhIGhvdXNl aG9sZCBuYW1lIGluIGFsbCBkb21pY2lsZXMgdGhhdCBjYXJlIGFib3V0IHRoZSByaWRkbGVzIG9mIGV4 aXN0ZW5jZT88L3A+Cgo8cD5JbiBzaG9ydCwgSGFycnkgV2hpdHRpbmd0b24gYW5kIGhpcyBzdHVkZW50
        cyBoYXZlIHNob3duIHRoYXQgbW9zdCBCdXJnZXNzIG9yZ2FuaXNtcyBkbyBub3QgYmVsb25nIHRvIGZh bWlsaWFyIGdyb3VwcywgYW5kIHRoYXQgdGhlIGNyZWF0dXJlcyBmcm9tIHRoaXMgc2luZ2xlIHF1YXJy eSBpbiBCcml0aXNoIENvbHVtYmlhIHByb2JhYmx5IGV4Y2VlZCwgaW4gYW5hdG9taWNhbCByYW5nZSwg
        dGhlIGVudGlyZSBzcGVjdHJ1bSBvZiBpbnZlcnRlYnJhdGUgbGlmZSBpbiB0b2RheSdzIG9jZWFucy4g IFNvbWUgbDUgdG8gMjAgQnVyZ2VzcyBzcGVjaWVzIGNhbm5vdCBiZSBhbGxpZWQgd2l0aCBhbnkga25v d24gZ3JvdXAsIGFuZCBzaG91bGQgcHJvYmFibHkgYmUgY2xhc3NpZmllZCBhcyBzZXBhcmF0ZSBwaHls
        YS4gIE1hZ25pZnkgc29tZSBvZiB0aGVtIGJleW9uZCB0aGUgZmV3IGNlbnRpbWV0ZXJzIG9mIHRoZWly IGFjdHVhbCBzaXplLCBhbmQgeW91IGFyZSBvbiB0aGUgc2V0IG9mIGEgc2NpZW5jZSBmaWN0aW9uIGZp bG07IG9uZSBwYXJ0aWN1bGFybHkgYXJyZXN0aW5nIGNyZWF0dXJlIGhhcyBiZWVuIGZvcm1hbGx5IG5h
        bWVkIDx1PkhhbGx1Y2lnZW5pYTwvdT4uICBXaXRoaW4ga25vd24gZ3JvdXBzLCBCdXJnZXNzIGRpdmVy c2l0eSBmYXIgZXhjZWVkcyB0aGUgbW9kZXJuIHJhbmdlLiAgVGhlIEJ1cmdlc3MgU2hhbGUsIGZvciBl eGFtcGxlLCBpbmNsdWRlcyBlYXJseSByZXByZXNlbnRhdGl2ZXMgb2YgYWxsIGZvdXIgbWFqb3Iga2lu
        ZHMgb2YgYXJ0aHJvcG9kcywgdGhlIGRvbWluYW50IGFuaW1hbHMgb24gZWFydGggdG9kYXkgLS0gdGhl IHRyaWxvYml0ZXMgKG5vdyBleHRpbmN0KSwgdGhlIGNydXN0YWNlYW5zIChpbmNsdWRpbmcgbG9ic3Rl cnMsIGNyYWJzIGFuZCBzaHJpbXApLCB0aGUgY2hlbGljZXJhdGVzIChpbmNsdWRpbmcgc3BpZGVycyBh
        bmQgc2NvcnBpb25zKSwgYW5kIHRoZSB1bmlyYW1pYW5zIChpbmNsdWRpbmcgaW5zZWN0cykuICBCdXQg dGhlIEJ1cmdlc3MgU2hhbGUgYWxzbyBjb250YWlucyBzb21lIDIwLTMwIGRpZmZlcmVudCBraW5kcyBv ZiBhcnRocm9wb2RzIHRoYXQgY2Fubm90IGJlIHBsYWNlZCBpbnRvIGFueSBtb2Rlcm4gZ3JvdXAuICBD
        b25zaWRlciB0aGUgbWFnbml0dWRlIG9mIHRoaXMgZGlmZmVyZW5jZS4gIFRheG9ub21pc3RzIGhhdmUg ZGVzY3JpYmVkIGFsbW9zdCBhIG1pbGxpb24gc3BlY2llcyBvZiBhcnRocm9wb2RzOyBhbGwgZml0IGlu dG8gZm91ciBtYWpvciBncm91cHMuICBPbmUgcXVhcnJ5IGluIEJyaXRpc2ggQ29sdW1iaWEsIHJlcHJl
        c2VudGluZyB0aGUgZmlyc3QgZXhwbG9zaW9uIG9mIG11bHRpY2VsbHVsYXIgbGlmZSwgcmV2ZWFscyBt b3JlIHRoYW4gMjAgYWRkaXRpb25hbCBhcnRocm9wb2QgZGVzaWducyEgIFRoZSBoaXN0b3J5IG9mIGxp ZmUgaXMgYSBzdG9yeSBvZiBtYXNzaXZlIHdpbm5vd2luZyBmb2xsb3dlZCBieSBkaWZmZXJlbnRpYXRp
        b24gd2l0aGluIGEgZmV3IHN1cnZpdmluZyBzdG9ja3MsIG5vdCB0aGUgY29udmVudGlvbmFsIHRhbGUg b2Ygc3RlYWRpbHkgaW5jcmVhc2luZyBleGNlbGxlbmNlLCBjb21wbGV4aXR5IGFuZCBkaXZlcnNpdHku PC9wPgoKPHA+QXMgYW4gZXBpdG9tZSBvZiB0aGlzIG5ldyBpbnRlcnByZXRhdGlvbiwgY29tcGFyZSBD
        aGFybGVzIFIuIEtuaWdodCdzIHJlc3RvcmF0aW9uIG9mIHRoZSBCdXJnZXNzIGZhdW5hLCBiYXNlZCBl bnRpcmVseSBvbiBXYWxjb3R0J3MgdmVyc2lvbiwgd2l0aCBvbmUgdGhhdCBhY2NvbXBhbmllZCBhIHJl Y2VudCBhcnRpY2xlIChsOTg1KSBkZWZlbmRpbmcgdGhlIHJldmVyc2VkIHZpZXcuICA8L3A+Cgo8cD5s
        LiAgVGhlIGNlbnRlcnBpZWNlIG9mIEtuaWdodCdzIHJlY29uc3RydWN0aW9uIGlzIGFuIGFuaW1hbCBu YW1lZCA8dT5TaWRuZXlpYTwvdT4sIGxhcmdlc3Qgb2YgQnVyZ2VzcyBhcnRocm9wb2RzIGtub3duICB0 byBXYWxjb3R0LCBhbmQgYW4gYW5jZXN0cmFsIGNoZWxpY2VyYXRlIGluIGhpcyB2aWV3LiAgSW4gdGhl
        IG1vZGVybiB2ZXJzaW9uLCA8dT5TaWRuZXlpYTwvdT4gaGFzIGJlZW4gYmFuaXNoZWQgdG8gdGhlIGxv d2VyIHJpZ2h0LCBpdHMgcGxhY2UgdXN1cnBlZCBieSA8dT5Bbm9tYWxvY2FyaXM8L3U+LCB0d28gZm9v dCB0ZXJyb3Igb2YgdGhlIENhbWJyaWFuIHNlYXMsIGFuZCBvbmUgb2YgdGhlIEJ1cmdlc3MgJnF1b3Q7
        dW5jbGFzc2lmaWFibGVzLiZxdW90OzwvcD4KCjxwPjIuICBLbmlnaHQgcmVzdG9yZXMgZWFjaCBhbmlt YWwgYXMgYSBtZW1iZXIgb2YgYSB3ZWxsLWtub3duIGdyb3VwIHRoYXQgZW5qb3llZCBzdWJzdGFudGlh bCBsYXRlciBzdWNjZXNzLiAgPHU+TWFycmVsbGE8L3U+IGlzIHJlY29uc3RydWN0ZWQgYXMgYSB0cmls
        b2JpdGUsIDx1PldhcHRpYTwvdT4gYXMgYSBwcm90by1zaHJpbXAgKHNlZSBGaWd1cmUgbCkgLS0gdGhv dWdoIGJvdGggYXJlIHJhbmtlZCBhbW9uZyB0aGUgdW5wbGFjZWFibGUgYXJ0aHJvcG9kcyB0b2RheS4g IFRoZSBtb2Rlcm4gdmVyc2lvbiBmZWF0dXJlcyB0aGUgdW5pcXVlIEJ1cmdlc3MgcGh5bGEgLS0gZ2lh
        bnQgPHU+QW5vbWFsb2NhcmlzPC91PiwgPHU+T3BhYmluaWE8L3U+IHdpdGggaXRzIGZpdmUgZXllcyBh bmQgZnJvbnRhbCAmcXVvdDtub3p6bGUsJnF1b3Q7IDx1Pldpd2F4aWE8L3U+IHdpdGggaXRzIGNvdmVy aW5nIG9mIHNjYWxlcyBhbmQgdHdvIHJvd3Mgb2YgZG9yc2FsIHNwaW5lcyAoRmlndXJlIDIpLjwvcD4K
        CjxwPjMuICBLbmlnaHQncyBjcmVhdHVyZXMgb2JleSB0aGUgY29udmVudGlvbiBvZiB0aGUgJnF1b3Q7 cGVhY2VhYmxlIGtpbmdkb20uJnF1b3Q7ICBBbGwgYXJlIGNyb3dkZWQgdG9nZXRoZXIgaW4gYW4gYXBw YXJlbnQgaGFybW9ueSBvZiBtdXR1YWwgdG9sZXJhdGlvbjsgdGhleSBkbyBub3QgaW50ZXJhY3QuICBU
        aGUgbW9kZXJuIHZlcnNpb24gcmV0YWlucyB0aGlzIHVucmVhbGlzdGljIGNyb3dkaW5nIChhIG5lY2Vz c2FyeSB0cmFkaXRpb24gZm9yICAgICAgZWNvbm9teSdzIHNha2UpLCBidXQgZmVhdHVyZXMgdGhlIGVj b2xvZ2ljYWwgcmVsYXRpb25zIHVuY292ZXJlZCBieSByZWNlbnQgcmVzZWFyY2g6IHByaWFwdWxpZCBh
        bmQgcG9seWNoYWV0ZSB3b3JtcyBidXJyb3cgaW4gdGhlIG11ZDsgdGhlIG15c3RlcmlvdXMgPHU+QXlz aGVhaWE8L3U+IGdyYXplcyBvbiBzcG9uZ2VzOyA8dT5Bbm9tYWxvY2FyaXM8L3U+IGV2ZXJ0cyBpdHMg amF3IGFuZCBjcnVuY2hlcyBhIHRyaWxvYml0ZS48L3A+Cgo8cD40LiAgQ29uc2lkZXIgPHU+QW5vbWFs
        b2NhcmlzPC91PiBhcyBhIHByb3RvdHlwZSBmb3IgcmV2aXNpb24uICBLbmlnaHQgaW5jbHVkZXMgdHdv IGFuaW1hbHMgb21pdHRlZCBmcm9tIHRoZSBtb2Rlcm4gcmVjb25zdHJ1Y3Rpb246IGplbGx5ZmlzaGVz IGluIHRoZSB1cHBlciByaWdodCwgYW5kIGEgY3VyaW91cyBhcnRocm9wb2QsIGNlbnRlciBsZWZ0LCBj
        b21wb3NlZCBvZiBhIHNocmltcCdzIHJlYXIgZW5kIGNvdmVyZWQgaW4gZnJvbnQgYnkgYSBiaXZhbHZl ZCBzaGVsbC4gIEJvdGggYXJlIGVycm9ycyBjb21taXR0ZWQgaW4gdGhlIG92ZXJ6ZWFsb3VzIGF0dGVt cHQgdG8gc2hvZWhvcm4gQnVyZ2VzcyBhbmltYWxzIGludG8gbW9kZXJuIGdyb3Vwcy4gIFdhbGNvdHQn
        cyAmcXVvdDtqZWxseWZpc2gmcXVvdDsgdHVybnMgb3V0IHRvIGJlIHRoZSBjaXJjbGV0IG9mIHBsYXRl cyBzdXJyb3VuZGluZyB0aGUgbW91dGggb2YgPHU+QW5vbWFsb2NhcmlzPC91Pi4gIFRoZSBwb3N0ZXJp b3IgYm9keSBvZiBoaXMgJnF1b3Q7c2hyaW1wJnF1b3Q7IGlzIGEgZmVlZGluZyBhcHBlbmRhZ2Ugb2Yg
        dGhlIHNhbWUgY2Fybml2b3JvdXMgYmVhc3QuICBXYWxjb3R0J3MgcHJvdG90eXBlcyBmb3IgdHdvIG1v ZGVybiBncm91cHMgYmVjb21lIGJvZHkgcGFydHMgb2YgdGhlIGxhcmdlc3QgQnVyZ2VzcyBvZGRiYWxs LCB0aGUgYXBwcm9wcmlhdGVseSBuYW1lZCA8dT5Bbm9tYWxvY2FyaXM8L3U+LiAgPC9wPgoKPHA+SSB0
        aHVzIGJlZ2luIGJ5IGVwaXRvbWl6aW5nIGEgY29tcGxleCBzaGlmdCBpbiBpZGVhcyB3aXRoIGFuIGFs dGVyYXRpb24gaW4gcGljdHVyZXMuICBJY29ub2dyYXBoeSBpcyBhIG5lZ2xlY3RlZCBrZXkgdG8gY2hh bmdpbmcgb3BpbmlvbnMsIGZvciB0aGUgaGlzdG9yeSBhbmQgbWVhbmluZyBvZiBsaWZlIGluIGdlbmVy
        YWwsIGFzIHdlbGwgYXMgZm9yIHRoZSBCdXJnZXNzIHNoYWxlIGluIHN0YXJrIHBhcnRpY3VsYXJzLjwv cD4KCjxwPkIpICA8dT5UaGUgTGFkZGVyIGFuZCB0aGUgQ29uZTogSWNvbm9ncmFwaGllcyBvZiBQcm9n cmVzczwvdT48L3A+Cgo8cD5GYW1pbGlhcml0eSBoYXMgYmVlbiBicmVlZGluZyBvdmVydGltZSBpbiBv
        dXIgbW90dG9lcyAtLSBwcm9kdWNpbmcgZXZlcnl0aGluZyBmcm9tIGNvbnRlbXB0IChhY2NvcmRpbmcg dG8gQWVzb3ApIHRvIGNoaWxkcmVuIChhcyBNYXJrIFR3YWluIG9ic2VydmVkKS4gIFBvbG9uaXVzLCBh bWlkc3QgaGlzIGxvcXVhY2lvdXMgd2FuZGVyaW5ncywgdXJnZWQgTGFlcnRlcyB0byBzZWVrIGZhbWls
        aWFyaXR5LCB3aGlsZSBzaHVubmluZyB2dWxnYXJpdHkgLS0gYW5kIHRoZW4sIGhhdmluZyBjaG9zZW4g d2VsbCwgdG8gJnF1b3Q7Z3JhcHBsZSZxdW90OyB0aGUgZmFtaWxpYXIgJnF1b3Q7dG8gdGh5IHNvdWwg d2l0aCBob29wcyBvZiBzdGVlbC4mcXVvdDs8L3A+Cgo8cD5ZZXQsIGFzIFBvbG9uaXVzJyBldmVudHVh
        bCBtdXJkZXJlciBzdGF0ZWQgaW4gdGhlIG1vc3QgZmFtb3VzIHNvbGlsb3F1eSBvZiBhbGwgdGltZTog JnF1b3Q7YXksIHRoZXJlJ3MgdGhlIHJ1Yi4mcXVvdDsgIFRob3NlIGhvb3BzIG9mIHN0ZWVsIGFyZSBu b3QgZWFzaWx5IHVuYm91bmQsIGFuZCB0aGUgY29tZm9ydGFibHkgZmFtaWxpYXIgYmVjb21lcyBhIHBy
        aXNvbiBvZiB0aG91Z2h0LjwvcD4KCjxwPldvcmRzIGFyZSBvdXIgZmF2b3JlZCBtZWRpdW0gb2YgZW5m b3JjZWQgY29uc2Vuc3VzOyBub3RoaW5nIGluc3BpcmVzIG9ydGhvZG94eSBhbmQgcHVycG9zZWZ1bCB1 bmFuaW1pdHkgb2YgYWN0aW9uIHNvIHdlbGwgYXMgYSBmaW5lbHkgY3JhZnRlZCBtb3R0byAtLSB3aW4g
        b25lIGZvciB0aGUgR2lwcGVyLCBhbmQgR29kIHNoZWQgSGlzIGdyYWNlIG9uIHRoZWUuICBCdXQgb3Vy IHJlY2VudCBpbnZlbnRpb24gb2Ygc3BlZWNoIGNhbm5vdCBlbnRpcmVseSBidXJ5IGFuIGVhcmxpZXIg aGVyaXRhZ2UuICBQcmltYXRlcyBhcmUgdmlzdWFsIGFuaW1hbHMgcGFyIGV4Y2VsbGVuY2UgLS0gYW5k
        IHRoZSBpY29ub2dyYXBoeSBvZiBwZXJzdWFzaW9uIHN0cmlrZXMgZXZlbiBjbG9zZXIgdG8gdGhlIGNv cmUgb2Ygb3VyIGJlaW5nLiAgRXZlcnkgZGVtYWdvZ3VlLCBldmVyeSBodW1vcmlzdCwgZXZlcnkgYWR2 ZXJ0aXppbmcgZXhlY3V0aXZlIGhhcyBrbm93biBhbmQgZXhwbG9pdGVkIHRoZSBldm9jYXRpdmUgcG93
        ZXIgb2YgYSB3ZWxsIGNob3NlbiBwaWN0dXJlLjwvcD4KCjxwPlNjaWVudGlzdHMgbG9zdCB0aGlzIGlu c2lnaHQgc29tZXdoZXJlIGFsb25nIHRoZSB3YXkuICBXZSB1c2UgcGljdHVyZXMgbW9yZSB0aGFuIG1v c3Qgc2Nob2xhcnMsIGFydCBoaXN0b3JpYW5zIGV4Y2VwdGVkLiAgJnF1b3Q7TmV4dCBzbGlkZSBwbGVh
        c2UmcXVvdDsgZXZlbiBzdXJwYXNzZXMgJnF1b3Q7aXQgc2VlbXMgdG8gbWUgdGhhdC4uLiZxdW90OyBh cyB0aGUgbW9zdCBjb21tb24gcGhyYXNlIG9mIHByb2Zlc3Npb25hbCB0YWxrcyBhdCBzY2llbnRpZmlj IG1lZXRpbmdzLiAgQnV0IG91ciBwaWN0dXJlcyBhcmUgaWxsdXN0cmF0aW9ucyBvZiB3aGF0IHdlIGRl
        ZmVuZCBieSB3b3Jkcy4gIEZldyBzY2llbnRpc3RzIHdvdWxkIHZpZXcgYW4gaW1hZ2UgaXRzZWxmIGFz IGludHJpbnNpY2FsbHkgaWRlb2xvZ2ljYWwgaW4gY29udGVudC4gIFBpY3R1cmVzLCBhcyBhY2N1cmF0 ZSBtaXJyb3JzIG9mIG5hdHVyZSwganVzdCBhcmUuPC9wPgoKPHA+SSBjYW4gdW5kZXJzdGFuZCBzdWNo
        IGFuIGF0dGl0dWRlIGRpcmVjdGVkIHRvd2FyZHMgcGhvdG9ncmFwaHMgb2Ygb2JqZWN0cyAtLSB0aG91 Z2ggb3Bwb3J0dW5pdGllcyBmb3Igc3VidGxlIG1hbmlwdWxhdGlvbiBhcmUgbGVnaW9uIGV2ZW4gaGVy ZS4gIEJ1dCBtYW55IG9mIG91ciBmaWd1cmVzIGFyZSBpbmNhcm5hdGlvbnMgb2YgY29uY2VwdHMgbWFz
        cXVlcmFkaW5nIGFzIG5ldXRyYWwgZGVzY3JpcHRpb25zIG9mIG5hdHVyZS4gIFRoZXNlIGFyZSB0aGUg bW9zdCBwb3RlbnQgc291cmNlcyBvZiBjb25mb3JtaXR5LCBzaW5jZSBpZGVhcyBwYXNzaW5nIGFzIGRl c2NyaXB0aW9ucyBsZWFkIHVzIHRvIGVxdWF0ZSB0aGUgdGVudGF0aXZlIHdpdGggdGhlIHVuYW1iaWd1
        b3VzbHkgZmFjdHVhbC4gIFN1Z2dlc3Rpb25zIGZvciB0aGUgb3JnYW5pemF0aW9uIG9mIHRob3VnaHQg YXJlIHRyYW5zZm9ybWVkIHRvIGVzdGFibGlzaGVkIHBhdHRlcm5zIGluIG5hdHVyZS4gIEd1ZXNzZXMg YW5kIGh1bmNoZXMgYmVjb21lIHRoaW5ncy48L3A+Cgo8cD5UaGUgZmFtaWxpYXIgaWNvbm9ncmFwaGll
        cyBvZiBldm9sdXRpb24gYXJlIGFsbCBkaXJlY3RlZCAtLSBzb21ldGltZXMgY3J1ZGVseSwgc29tZXRp bWVzIHN1YnRseSAtLSB0b3dhcmRzIHJlaW5mb3JjaW5nIGEgY29tZm9ydGFibGUgdmlldyBvZiBodW1h biBpbmV2aXRhYmlsaXR5IGFuZCBzdXBlcmlvcml0eS4gIFRoZSBzdGFya2VzdCB2ZXJzaW9uLCB0aGUg
        Y2hhaW4gb2YgYmVpbmcgb3IgbGFkZGVyIG9mIGxpbmVhciBwcm9ncmVzcywgaGFzIGFuIGFuY2llbnQs IHByZS1ldm9sdXRpb25hcnkgcGVkaWdyZWUgKHNlZSBBLk8uIExvdmVqb3kncyBjbGFzc2ljLCA8dT5U aGUgR3JlYXQgQ2hhaW4gb2YgQmVpbmc8L3U+LCBsOTM2KTo8L3A+Cgo8cD5GYXIgYXMgY3JlYXRpb24n
        cyBhbXBsZSByYW5nZSBleHRlbmRzLCA8L3A+Cgo8cD5UaGUgc2NhbGUgb2Ygc2Vuc3VhbCwgbWVudGFs IHBvd2VycyBhc2NlbmRzOjwvcD4KCjxwPk1hcmsgaG93IGl0IG1vdW50cyB0byBtYW4ncyBpbXBlcmlh bCByYWNlLDwvcD4KCjxwPkZyb20gdGhlIGdyZWVuIG15cmlhZHMgaW4gdGhlIHBlb3BsZWQgZ3Jhc3M8
        L3A+Cgo8cD5BbGV4YW5kZXIgUG9wZSwgPHU+RXNzYXkgb24gTWFuPC91PjwvcD4KCjxwPkNvbnNpZGVy IGEgZmFtb3VzIHZlcnNpb24gZnJvbSBsNzk5IChGaWd1cmUgMykuICBJbiBoaXMgPHU+UmVndWxhciBH cmFkYXRpb24gaW4gTWFuPC91PiwgQnJpdGlzaCBwaHlzaWNpYW4gQ2hhcmxlcyBXaGl0ZSBzaG9laG9y
        bmVkIGFsbCB0aGUgcmFtaWZ5aW5nIGRpdmVyc2l0eSBvZiB2ZXJ0ZWJyYXRlIGxpZmUgaW50byBhIHNp bmdsZSBtb3RsZXkgc2VxdWVuY2UgcnVubmluZyBmcm9tIGJpcmRzIHRocm91Z2ggY3JvY29kaWxlcyBh bmQgZG9ncywgcGFzdCBhcGVzIGFuZCB1cCB0aGUgY29udmVudGlvbmFsIHJhY2lzdCBsYWRkZXIgb2Yg
        aHVtYW4gZ3JvdXBzIHRvIGEgQ2F1Y2FzaWFuIHBhcmFnb24sIGRlc2NyaWJlZCB3aXRoIHRoZSByb2Nv Y28gZmxvdXJpc2ggb2YgV2hpdGUncyBkeWluZyBjZW50dXJ5LiA8L3A+Cgo8cD5XaGVyZSBzaGFsbCB3 ZSBmaW5kLCB1bmxlc3MgaW4gdGhlIEV1cm9wZWFuLCB0aGF0IG5vYmx5ICAgYXJjaGVkIGhlYWQsIGNv
        bnRhaW5pbmcgc3VjaCBhIHF1YW50aXR5IG9mIGJyYWluLi4uICAgV2hlcmUgdGhlIHBlcnBlbmRpY3Vs YXIgZmFjZSwgdGhlIHByb21pbmVudCBub3NlLCBhbmQgICByb3VuZCBwcm9qZWN0aW5nIGNoaW4/ICBX aGVyZSB0aGF0IHZhcmlldHkgb2YgZmVhdHVyZXMsICAgYW5kIGZ1bGxuZXNzIG9mIGV4cHJlc3Npb24u
        Li4gdGhvc2Ugcm9zeSBjaGVla3MgYW5kICAgY29yYWwgbGlwcz88L3A+Cgo8cD5UaGlzIHRyYWRpdGlv biBuZXZlciB2YW5pc2hlZCwgZXZlbiBpbiBvdXIgbW9yZSBlbmxpZ2h0ZW5lZCBhZ2UuICBJbiB0aGUg bDkyMCdzLCBIZW5yeSBGYWlyZmllbGQgT3Nib3JuIGNlbGVicmF0ZWQgdGhlIGxpbmVhciBhY2NyZXRp
        b24gb2YgY29nbml0aW9uIGluIGEgZmlndXJlIGZ1bGwgb2YgaWxsdW1pbmF0aW5nIGVycm9ycy4gIENo aW1wcyBhcmUgbm90IGFuY2VzdG9ycyAoRmlndXJlIDQpLCBidXQgbW9kZXJuIGNvdXNpbnMgZXF1YWxs eSBkaXN0YW50IGluIGV2b2x1dGlvbmFyeSB0ZXJtcyBmcm9tIHRoZSB1bmtub3duIGZvcmViZWFyIG9m
        IEFmcmljYW4gZ3JlYXQgYXBlcyBhbmQgaHVtYW5zLiAgPHU+UGl0aGVjYW50aHJvcHVzPC91PiAoPHU+ SG9tbzwvdT4gPHU+ZXJlY3R1czwvdT4gaW4gbW9kZXJuIHRlcm1zKSBpcyBhIHBvdGVudGlhbCBhbmNl c3RvciwgYW5kIG9ubHkgbGVnaXRpbWF0ZSBtZW1iZXIgb2YgdGhlIHNlcXVlbmNlLiAgVGhlIGluY2x1
        c2lvbiBvZiBQaWx0ZG93biBpcyBlc3BlY2lhbGx5IHJldmVhbGluZy4gIFdlIG5vdyBrbm93IHRoYXQg UGlsdGRvd24gd2FzIGEgZnJhdWQgY29tcG9zZWQgb2YgYSBtb2Rlcm4gaHVtYW4gY3Jhbml1bSBhbmQg YW4gYXBlJ3MgamF3LiAgQXMgYSBjb250ZW1wb3Jhcnkgc2t1bGwsIFBpbHRkb3duIHBvc3Nlc3NlZCBh
        IGJyYWluIG9mIG1vZGVybiBzaXplOyB5ZXQgc28gY29udmluY2VkIHdlcmUgT3Nib3JuJ3MgY29sbGVh Z3VlcyB0aGF0IGh1bWFuIGZvc3NpbHMgbXVzdCBzaG93IGludGVybWVkaWF0ZSB2YWx1ZXMgb24gYSBs YWRkZXIgb2YgcHJvZ3Jlc3MsIHRoYXQgdGhleSByZWNvbnN0cnVjdGVkIFBpbHRkb3duJ3Mgc2t1bGwg
        YWNjb3JkaW5nIHRvIHRoZWlyIGV4cGVjdGF0aW9ucy4gIEFzIGZvciBOZWFuZGVydGhhbCwgdGhlc2Ug Y3JlYXR1cmVzIHdlcmUgcHJvYmFibHkgY2xvc2UgY291c2lucyBiZWxvbmdpbmcgdG8gYSBzZXBhcmF0 ZSBzcGVjaWVzLCBub3QgYW5jZXN0b3JzLiAgSW4gYW55IGNhc2UsIHRoZXkgaGFkIGJyYWlucyBhcyBs
        YXJnZSBvciBsYXJnZXIgdGhhbiBvdXJzLCBPc2Jvcm4ncyBsYWRkZXIgbm90d2l0aHN0YW5kaW5nLjwv cD4KCjxwPk5vciBoYXZlIHdlIGFiYW5kb25lZCB0aGlzIGljb25vZ3JhcGh5IGluIG91ciBnZW5lcmF0 aW9uLjwvcD4KCjxwPkNvbnNpZGVyIEZpZ3VyZSA1LCBmcm9tIG9uZSBvZiB0aGUgYmVzdCBhbmQgbW9z
        dCBwb3B1bGFyIG9mIG1vZGVybiB0ZXh0Ym9va3MgKENhbXBiZWxsLCBsOTc2KS4gIFRoZSBtYXJjaCBv ZiBwcm9ncmVzcywgc2luZ2xlIGZpbGUsIGNvdWxkIG5vdCBiZSBtb3JlIGdyYXBoaWMuICBXZSBkZXNj ZW5kIGZyb20gdGhlIHRyZWVzIGFuZCBiZWdpbiBvdXIgdXB3YXJkIGpvdXJuZXkgdG8gbGFyZ2VyIHNp
        emUsIGJpZ2dlciBicmFpbnMsIGxlc3MgaGFpcnkgYm9kaWVzLCBhbmQgbW9yZSBlcmVjdCBnYWl0LiAg U21vb3RoIGludGVybWVkaWFjeSBpcyBmb3JjZWQgdXBvbiByZWNhbGNpdHJhbnQgZGF0YS4gIE91ciBh dXN0cmFsb3BpdGhlY2luZSBhbmNlc3RvcnMgYXJlIHJlY29uc3RydWN0ZWQgYXMgc3Rvb3Atc2hvdWxk
        ZXJlZCwgdGhvdWdoIHdlIGhhdmUga25vd24gZm9yIGZpZnR5IHllYXJzIHRoYXQgdGhleSBwcm9iYWJs eSB3YWxrZWQgYXMgZXJlY3QgYXMgeW91IG9yIEkuICBNb3Jlb3ZlciwgbGVzdCB3ZSB0aGluayB0aGF0 IG9ubHkgV2VzdGVybiBjdWx0dXJlIHByb21vdGVzIHRoaXMgY29uY2VpdCwgSSBwcmVzZW50IG9uZSBp
        bGx1c3RyYXRpb24gb2YgaXRzIHNwcmVhZCAoRmlndXJlIDYpLCBwdXJjaGFzZWQgYXQgdGhlIGJhemFh ciBvZiBBZ3JhIGluIGw5ODUuICA8L3A+Cgo8cD5UaGUgJnF1b3Q7bWFyY2ggb2YgcHJvZ3Jlc3MmcXVv dDsgYXMgPHU+dGhlPC91PiBjYW5vbmljYWwgcmVwcmVzZW50YXRpb24gb2YgZXZvbHV0aW9uIC0tIHRo
        ZSBvbmUgcGljdHVyZSBpbW1lZGlhdGVseSBncmFzcGVkIGFuZCB2aXNjZXJhbGx5IHVuZGVyc3Rvb2Qg YnkgYWxsIC0tIG1heSBiZXN0IGJlIGFwcHJlY2lhdGVkIGJ5IGl0cyBwcm9taW5lbnQgdXNlIGluIGh1 bW9yIGFuZCBhZHZlcnRpc2luZy4gIFRoZXNlIHByb2Zlc3Npb25zIHByb3ZpZGUgb3VyIGJlc3QgdGVz
        dCBvZiBwdWJsaWMgcGVyY2VwdGlvbnMuICBKb2tlcyBhbmQgYWRzIG11c3QgJnF1b3Q7Y2xpY2smcXVv dDsgaW4gdGhlIGZsZWV0aW5nIHNlY29uZCB0aGF0IG91ciBhdHRlbnRpb24gZ3JhbnRzIHRoZW0uICBD b25zaWRlciBGaWd1cmUgNywgZHJhd24gYnkgTGFycnkgSm9obnNvbiBmb3IgdGhlIEJvc3RvbiBHbG9i
        ZSwgYmVmb3JlIGEgcmVjZW50IFBhdHJpb3RzLVJhaWRlcnMgZm9vdGJhbGwgZ2FtZS4gIE9yIEZpZ3Vy ZSA4IGJ5IHRoZSBjYXJ0b29uaXN0IFN6ZXAsIG9uIHRoZSBwcm9wZXIgcGxhY2Ugb2YgdGVycm9yaXNt OyBvciBGaWd1cmUgOSwgb24gJnF1b3Q7c2NpZW50aWZpYyBjcmVhdGlvbmlzbS4mcXVvdDsgIE9yIEZp
        Z3VyZSBsMCBieSBteSBmcmllbmQgTWlrZSBQZXRlcnMsIG9uIHNvY2lhbCBwb3NzaWJpbGl0aWVzIHRy YWRpdGlvbmFsbHkgb3BlbiB0byBtZW4gYW5kIHdvbWVuLiAgRm9yIGFkdmVydGlzaW5nLCBjb25zaWRl ciB0aGUgZXZvbHV0aW9uIG9mIEd1aW5lc3MgKEZpZ3VyZSBsbCkgb3Igb2YgcmVudGFsIHRlbGV2aXNp
        b24gKEZpZ3VyZSBsMikuIDwvcD4KCjxwPlRoZSBzdHJhaWdodGphY2tldCBvZiBsaW5lYXIgYWR2YW5j ZSBnb2VzIGJleW9uZCBpY29ub2dyYXBoeSB0byB0aGUgZGVmaW5pdGlvbiBvZiBldm9sdXRpb24uICBU aGUgd29yZCBpdHNlbGYgYmVjb21lcyBhIHN5bm9ueW0gZm9yIHByb2dyZXNzISAgVGhlIG1ha2VycyBv
        ZiBEb3JhbCBjaWdhcmV0dGVzIG9uY2UgcHJlc2VudGVkIGEgbGluZWFyIHNlcXVlbmNlIG9mICZxdW90 O2ltcHJvdmVkJnF1b3Q7IHByb2R1Y3RzIHRocm91Z2ggdGhlIHllYXJzLCBhbGwgdW5kZXIgdGhlIGhl YWRpbmcgJnF1b3Q7RG9yYWwncyB0aGVvcnkgb2YgZXZvbHV0aW9uLiZxdW90OyAgKFBlcmhhcHMgdGhl
        eSBhcmUgbm93IGVtYmFycmFzc2VkIGJ5IHRoaXMgbWlzZ3VpZGVkIGNsYWltLCBzaW5jZSB0aGV5IHJl ZnVzZWQgbWUgcGVybWlzc2lvbiB0byByZXByaW50IHRoZSBhZC4pICBPciBjb25zaWRlciBGaWd1cmUg bDMgZnJvbSBBbmR5IENhcHAuICBGbG8gaGFzIG5vIHByb2JsZW0gd2l0aCBldm9sdXRpb24sIGJ1dCBz
        aGUgZGVmaW5lcyBpdCBhcyBwcm9ncmVzcywgYW5kIHZpZXdzIEFuZHkncyBxdWFkcnVwZWRhbCBob21l Y29taW5nIGFzIHNvbWV0aGluZyBkaWZmZXJlbnQsIGFuZCBpbiByZXZlcnNlLjwvcD4KCjxwPkxpZmUg aXMgYSBjb3Bpb3VzbHkgYnJhbmNoaW5nIGJ1c2gsIGNvbnRpbnVhbGx5IHBydW5lZCBieSB0aGUgZ3Jp
        bSByZWFwZXIgb2YgZXh0aW5jdGlvbiwgbm90IGEgbGFkZGVyIG9mIHByZWRpY3RhYmxlIHByb2dyZXNz LiAgTW9zdCBwZW9wbGUgbWF5IGtub3cgdGhpcyBhcyBhIHBocmFzZSB0byBiZSB1dHRlcmVkLCBidXQg bm90IGFzIGEgY29uY2VwdCBicm91Z2h0IGludG8gdGhlIGRlZXAgaW50ZXJpb3Igb2YgdW5kZXJzdGFu
        ZGluZy4gIFRodXMgd2UgY29udGludWFsbHkgbWFrZSBlcnJvcnMgaW5zcGlyZWQgYnkgdW5jb25zY2lv dXMgYWxsZWdpYW5jZSB0byB0aGUgbGFkZGVyIG9mIHByb2dyZXNzLCBldmVuIHdoZW4gd2UgZXhwbGlj aXRseSBkZW55IHN1Y2ggYSBzdXBlcmFubnVhdGVkIHZpZXcgb2YgbGlmZS4gIENvbnNpZGVyIHR3byBl
        eGFtcGxlcywgdGhlIHNlY29uZCBwcm92aWRpbmcgYSBrZXkgdG8gb3VyIGNvbnZlbnRpb25hbCBtaXN1 bmRlcnN0YW5kaW5nIG9mIHRoZSBCdXJnZXNzIFNoYWxlLjwvcD4KCjxwPkZpcnN0LCBpbiBhbiBlcnJv ciB0aGF0IEkgY2FsbCAmcXVvdDtsaWZlJ3MgbGl0dGxlIGpva2UmcXVvdDsgKEdvdWxkLCBsOTg3KSwg
        d2UgYXJlIHZpcnR1YWxseSBjb21wZWxsZWQgdG8gdGhlIHN0dW5uaW5nIG1pc3Rha2Ugb2YgY2l0aW5n IHVuc3VjY2Vzc2Z1bCBsaW5lYWdlcyBhcyBjbGFzc2ljICZxdW90O3RleHRib29rJnF1b3Q7IGNhc2Vz IG9mICZxdW90O2V2b2x1dGlvbi4mcXVvdDsgIFdlIGRvIHRoaXMgYmVjYXVzZSB3ZSB0cnkgdG8gZXh0
        cmFjdCBhIHNpbmdsZSBsaW5lIG9mIGFkdmFuY2UgZnJvbSB0aGUgdHJ1ZSB0b3BvbG9neSBvZiBjb3Bp b3VzIGJyYW5jaGluZy4gIEluIHRoaXMgbWlzZ3VpZGVkIGVmZm9ydCwgd2UgYXJlIGluZXZpdGFibHkg ZHJhd24gdG8gYnVzaGVzIHNvIG5lYXIgdGhlIGJyaW5rIG9mIHRvdGFsIGFubmloaWxhdGlvbiB0aGF0
        IHRoZXkgY29udGFpbiBvbmx5IG9uZSBzdXJ2aXZpbmcgdHdpZy4gIFdlIHRoZW4gdmlldyB0aGlzIHR3 aWcgYXMgdGhlIGFjbWUgb2YgdXB3YXJkIGFjaGlldmVtZW50LCByYXRoZXIgdGhhbiB0aGUgcHJvYmFi bGUgbGFzdCBnYXNwIG9mIGEgcmljaGVyIGFuY2VzdHJ5LiAgPC9wPgoKPHA+Q29uc2lkZXIgdGhlIGdy
        ZWF0IHdhcmhvcnNlIG9mIHRyYWRpdGlvbiAtLSB0aGUgZXZvbHV0aW9uYXJ5IGxhZGRlciBvZiBob3Jz ZXMgdGhlbXNlbHZlcyAoRmlndXJlIGw0KS4gIFRvIGJlIHN1cmUsIGFuIHVuYnJva2VuIGV2b2x1dGlv bmFyeSBjb25uZWN0aW9uIGRvZXMgbGluayA8dT5IeXJhY290aGVyaXVtPC91PiAoJnF1b3Q7PHU+RW9o
        aXBwdXM8L3U+JnF1b3Q7KSB0byBtb2Rlcm4gPHU+RXF1dXM8L3U+LiAgQW5kLCB5ZXMgYWdhaW4sIG1v ZGVybiBob3JzZXMgYXJlIGJpZ2dlciwgd2l0aCBmZXdlciB0b2VzIGFuZCBoaWdoZXIgY3Jvd25lZCB0 ZWV0aC4gIEJ1dCA8dT5IeXJhY290aGVyaXVtPC91Pi08dT5FcXV1czwvdT4gaXMgbm90IGEgbGFkZGVy
        LCBvciBldmVuIGEgY2VudHJhbCBsaW5lYWdlLiAgVGhpcyBzZXF1ZW5jZSBpcyBidXQgb25lIGxhYnly aW50aGluZSBwYXRod2F5IGFtb25nIHRob3VzYW5kcyBpbiBhIGNvbXBsZXggYnVzaC4gIFRoaXMgcGFy dGljdWxhciByb3V0ZSBoYXMgYWNoaWV2ZWQgaXRzIHByb21pbmVuY2UgZm9yIG9uZSBpcm9uaWMgcmVh
        c29uIGFsb25lIC0tIGJlY2F1c2UgYWxsIG90aGVyIHR3aWdzIGFyZSBleHRpbmN0LiAgPHU+RXF1dXM8 L3U+IGlzIHRoZSBvbmx5IGJyYW5jaCBsZWZ0LCBoZW5jZSB0aGUgdGlwIG9mIGEgbGFkZGVyIGluIG91 ciBmYWxzZSBpY29ub2dyYXBoeS4gIEhvcnNlcyBiZWNhbWUgdGhlIGNsYXNzaWMgY2FzZSBvZiBwcm9n
        cmVzc2l2ZSBldm9sdXRpb24gYmVjYXVzZSB0aGVpciBidXNoIGhhcyBiZWVuIHNvIHVuc3VjY2Vzc2Z1 bC4gIFdlIG5ldmVyIGdyYW50IHByb3BlciBhY2NsYWltIHRvIHRoZSByZWFsIHRyaXVtcGhzIG9mIG1h bW1hbGlhbiBldm9sdXRpb24uIFdobyBoYXMgZXZlciBoZWFyZCBhIHN0b3J5IGFib3V0IHRoZSBldm9s
        dXRpb24gb2YgYmF0cywgYW50ZWxvcGVzLCBvciByb2RlbnRzIC0tIHRob3VnaCB0aGV5IGFyZSB0aGUg Y3VycmVudCBjaGFtcGlvbnMgb2YgbWFtbWFsaWFuIGxpZmUuICBXZSB0ZWxsIG5vIHN1Y2ggdGFsZXMg YmVjYXVzZSB3ZSBjYW5ub3QgbGluZWFyaXplIHRoZSBib3VudGVvdXMgc3VjY2VzcyBvZiB0aGVzZSBj
        cmVhdHVyZXMgaW50byBvdXIgZmF2b3JlZCBsYWRkZXIuICBUaGV5IHByZXNlbnQgdXMgd2l0aCB0aG91 c2FuZHMgb2YgdHdpZ3Mgb24gYSB2aWdvcm91cyBidXNoLjwvcD4KCjxwPk5lZWQgSSByZW1pbmQgZXZl cnlvbmUgdGhhdCBhdCBsZWFzdCBvbmUgb3RoZXIgbGluZWFnZSBvZiBtYW1tYWxzLCBlc3BlY2lhbGx5
        IGRlYXIgdG8gb3VyIGhlYXJ0cyBmb3IgcGFyb2NoaWFsIHJlYXNvbnMsIHNoYXJlcyB3aXRoIGhvcnNl cyBib3RoIHRoZSBwcm9wZXIgdG9wb2xvZ3kgb2YgYSBidXNoIHdpdGggb25lIHN1cnZpdmluZyB0d2ln LCBhbmQgdGhlIGZhbHNlIGljb25vZ3JhcGh5IG9mIGEgbWFyY2ggdG8gcHJvZ3Jlc3MuPC9wPgoKPHA+
        QXMgYSBzZWNvbmQgZ3JlYXQgZXJyb3IsIHdlIG1heSBhYmFuZG9uIHRoZSBsYWRkZXIgYW5kIGFja25v d2xlZGdlIHRoZSBicmFuY2hpbmcgY2hhcmFjdGVyIG9mIGV2b2x1dGlvbmFyeSBsaW5lYWdlcywgeWV0 IHN0aWxsIHBvcnRyYXkgdGhlIHRyZWUgb2YgbGlmZSBpbiBhIGNvbnZlbnRpb25hbCBtYW5uZXIgY2hv
        c2VuIHRvIHZhbGlkYXRlIG91ciBob3BlcyBmb3IgcHJlZGljdGFibGUgcHJvZ3Jlc3MuPC9wPgoKPHA+ VGhlIHRyZWUgb2YgbGlmZSBncm93cyB3aXRoIGEgZmV3IGNydWNpYWwgY29uc3RyYWludHMgdXBvbiBp dHMgZm9ybS4gIEZpcnN0LCBzaW5jZSBhbnkgd2VsbC1kZWZpbmVkIHRheG9ub21pYyBncm91cCBjYW4g
        dHJhY2UgaXRzIG9yaWdpbiB0byBhIHNpbmdsZSBjb21tb24gYW5jZXN0b3IsIGV2b2x1dGlvbmFyeSB0 cmVlcyBtdXN0IGhhdmUgYSB1bmlxdWUgYmFzYWwgdHJ1bmsuICBTZWNvbmQsIGFsbCBicmFuY2hlcyBv ZiB0aGUgdHJlZSBlaXRoZXIgZGllIG9yIHJhbWlmeSBmdXJ0aGVyLiAgU2VwYXJhdGlvbiBpcyBpcnJl
        dm9jYWJsZTsgZGlzdGluY3QgYnJhbmNoZXMgZG8gbm90IGpvaW4uPC9wPgoKPHA+WWV0LCB3aXRoaW4g dGhlc2UgY29uc3RyYWludHMgb2YgPHU+bW9ub3BoeWx5PC91PiBhbmQgPHU+ZGl2ZXJnZW5jZTwvdT4s IHRoZSBnZW9tZXRyaWMgcG9zc2liaWxpdGllcyBmb3IgZXZvbHV0aW9uYXJ5IHRyZWVzIGFyZSBuZWFy
        bHkgZW5kbGVzcy4gIEEgYnVzaCBtaWdodCBxdWlja2x5IGV4cGFuZCB0byBtYXhpbWFsIHdpZHRoIGFu ZCB0aGVuIHRhcGVyIGNvbnRpbnVvdXNseSwgbGlrZSBhIENocmlzdG1hcyB0cmVlLiAgT3IgaXQgbWln aHQgZGl2ZXJzaWZ5IHJhcGlkbHksIGJ1dCB0aGVuIG1haW50YWluIGl0cyBmdWxsIHdpZHRoIGJ5IGEg
        Y29udGludWluZyBiYWxhbmNlIG9mIG9yaWdpbiBhbmQgZGVhdGguICBPciBpdCBtaWdodCwgbGlrZSBh IHR1bWJsZXdlZWQsIGJyYW5jaCBoZWx0ZXItc2tlbHRlciBpbiBhIGNvbmZ1c2luZyBqdW1ibGUgb2Yg c2hhcGVzIGFuZCBzaXplcy48L3A+Cgo8cD5JZ25vcmluZyB0aGVzZSBtdWx0aWZhcmlvdXMgcG9zc2li
        aWxpdGllcywgY29udmVudGlvbmFsIGljb25vZ3JhcGh5IGhhcyBmYXN0ZW5lZCB1cG9uIGEgcHJpbWFy eSBtb2RlbCwgdGhlICZxdW90O2NvbmUgb2YgaW5jcmVhc2luZyBkaXZlcnNpdHksJnF1b3Q7IG9yIENo cmlzdG1hcyB0cmVlIGluIHJldmVyc2UuICBMaWZlIGJlZ2lucyB3aXRoIHRoZSByZXN0cmljdGVkIGFu
        ZCBzaW1wbGUsIHByb2dyZXNzaW5nIGV2ZXIgdXB3YXJkIHRvIG1vcmUgYW5kIG1vcmUgYW5kLCBieSBp bXBsaWNhdGlvbiwgYmV0dGVyIGFuZCBiZXR0ZXIuICBGaWd1cmUgbDUgb24gdGhlIGV2b2x1dGlvbiBv ZiBjb2Vsb21hdGUgYW5pbWFscyAodGhlIHN1YmplY3Qgb2YgdGhpcyBib29rKSwgc2hvd3MgdGhlIG9y
        ZGVybHkgb3JpZ2luIG9mIGV2ZXJ5dGhpbmcgZnJvbSBhIHNpbXBsZSBmbGF0d29ybS4gIFRoZSBzdGVt IHNwbGl0cyB0byBhIGZldyBiYXNpYyBzdG9ja3M7IG5vbmUgYmVjb21lIGV4dGluY3QsIGFuZCBlYWNo IGRpdmVyc2lmaWVzIGZ1cnRoZXIgdG8gYSBjb250aW51YWxseSBpbmNyZWFzaW5nIG51bWJlciBvZiBz
        dWJncm91cHMuICA8L3A+Cgo8cD5JIHByZXNlbnQsIGFzIEZpZ3VyZSBsNiwgYSBwYW5vcGx5IG9mIGNv bmVzIGRyYXduIGZyb20gcG9wdWxhciBtb2Rlcm4gdGV4dGJvb2tzIC0tIHRocmVlIGFic3RyYWN0IGFu ZCB0aHJlZSBhY3R1YWwgZXhhbXBsZXMgZm9yIGdyb3VwcyBjcnVjaWFsIHRvIHRoZSBhcmd1bWVudCBv
        ZiB0aGlzIGJvb2suICAoSW4gQ2hhcHRlciAzLCBJIHNoYWxsIGRpc2N1c3MgdGhlIG9yaWdpbiBvZiB0 aGlzIG1vZGVsIGluIEhhZWNrZWwncyBvcmlnaW5hbCB0cmVlcyBhbmQgdGhlaXIgaW5mbHVlbmNlIHVw b24gV2FsY290dCdzIGdyZWF0IGVycm9yIGluIHJlY29uc3RydWN0aW5nIHRoZSBCdXJnZXNzIGZhdW5h
        LikgIEFsbCB0aGVzZSB0cmVlcyBzaG93IHRoZSBzYW1lIHBhdHRlcm46IGJyYW5jaGVzIHNwbGl0LCB3 aGlsZSBncm93aW5nIGV2ZXIgdXB3YXJkIGFuZCBvdXR3YXJkLiAgSWYgc29tZSBlYXJseSBsaW5lYWdl cyBkaWUsIGxhdGVyIGdhaW5zIHNvb24gb3ZlcmJhbGFuY2UgYW55IGxvc3MuICBFYXJseSBkZWF0aHMg
        Y2FuIG9ubHkgZWxpbWluYXRlIHNtYWxsIGJyYW5jaGVzIG5lYXIgdGhlIGNlbnRyYWwgdHJ1bmsuICBF dm9sdXRpb24gdW5mb2xkcyBhcyB0aG91Z2ggdGhlIHRyZWUgd2VyZSBncm93aW5nIHVwIGEgZnVubmVs LCBhbHdheXMgZmlsbGluZyB0aGUgY29udGludWFsbHkgZXhwYW5kaW5nIGNvbmUgb2YgcG9zc2liaWxp
        dGllcy4gPC9wPgoKPHA+VGhlIGNvbmUgb2YgZGl2ZXJzaXR5IHByb3BhZ2F0ZXMgYW4gaW50ZXJlc3Rp bmcgY29uZmxhdGlvbiBvZiBtZWFuaW5nIGluIGl0cyBjb252ZW50aW9uYWwgaW50ZXJwcmV0YXRpb24u ICBUaGUgaG9yaXpvbnRhbCBkaW1lbnNpb24gaXMgZGl2ZXJzaXR5IC0tIGZpc2hlcyBwbHVzIGluc2Vj
        dHMgcGx1cyBzbmFpbHMgcGx1cyBzdGFyZmlzaGVzIGF0IHRoZSB0b3AgdGFrZSB1cCBtdWNoIG1vcmUg bGF0ZXJhbCByb29tIHRoYW4ganVzdCBmbGF0d29ybXMgYXQgdGhlIGJvdHRvbS4gIEJ1dCB3aGF0IGRv ZXMgdGhlIHZlcnRpY2FsIGRpbWVuc2lvbiByZXByZXNlbnQ/ICBJbiBhIGxpdGVyYWwgcmVhZGluZywg
        dXAgYW5kIGRvd24gc2hvdWxkIG9ubHkgcmVjb3JkIHlvdW5nZXIgYW5kIG9sZGVyIGluIGdlb2xvZ2lj YWwgdGltZSAtLSB0aGUgbmVjayBvZiB0aGUgZnVubmVsIGlzIGFuY2llbnQsIHRoZSBsaXAgcmVjZW50 LiAgQnV0IHdlIGFsc28gcmVhZCB2ZXJ0aWNhbCBtb3ZlbWVudCBhcyBzaW1wbGUgdG8gY29tcGxleCwg
        b3IgcHJpbWl0aXZlIHRvIGFkdmFuY2VkLiAgPHU+UGxhY2VtZW50IGluIHRpbWUgaXMgY29uZmxhdGVk IHdpdGgganVkZ21lbnQgb2Ygd29ydGg8L3U+LjwvcD4KCjxwPk91ciBvcmRpbmFyeSBkaXNjb3Vyc2Ug YWJvdXQgYW5pbWFscyBmb2xsb3dzIHRoaXMgaWNvbm9ncmFwaHkuICBOYXR1cmUncyB0aGVtZSBpcyBk
        aXZlcnNpdHkuICBXZSBsaXZlIHN1cnJvdW5kZWQgYnkgY29ldmFsIHR3aWdzIG9mIGxpZmUncyB0cmVl LiAgSW4gRGFyd2luJ3Mgd29ybGQsIGFsbCAoYXMgc3Vydml2b3JzIGluIGEgdG91Z2ggZ2FtZSkgaGF2 ZSBzb21lIGNsYWltIHRvIGVxdWFsIHN0YXR1cy4gIFdoeSwgdGhlbiwgZG8gd2UgdXN1YWxseSBjaG9v
        c2UgdG8gY29uc3RydWN0IGEgcmFua2luZyBvZiBpbXBsaWVkIHdvcnRoIChieSBhc3N1bWVkIGNvbXBs ZXhpdHksIG9yIHJlbGF0aXZlIG5lYXJuZXNzIHRvIGh1bWFucywgZm9yIGV4YW1wbGUpPyAgSW4gYSBy ZWNlbnQgcmV2aWV3IG9mIGEgYm9vayBvbiBjb3VydHNoaXAgaW4gdGhlIGFuaW1hbCBraW5nZG9tLCBK
        b25hdGhhbiBXZWluZXIgKDx1Pk5ldyBZb3JrIFRpbWVzIEJvb2sgUmV2aWV3PC91PiwgTWFyY2ggMjcs IGw5ODgpIGRlc2NyaWJlcyB0aGUgYXV0aG9yJ3Mgc2NoZW1lIG9mIG9yZ2FuaXphdGlvbjogJnF1b3Q7 V29ya2luZyBpbiBsb29zZWx5IGV2b2x1dGlvbmFyeSBvcmRlciwgTXIuIFdhbHRlcnMgYmVnaW5zIHdp
        dGggaG9yc2VzaG9lIGNyYWJzLCB3aGljaCBoYXZlIGJlZW4gbWVldGluZyBhbmQgbWF0aW5nIG9uIGRh cmsgYmVhY2hlcyBpbiBzeW5jaHJvbnkgd2l0aCB0aWRlIGFuZCBtb29uIGZvciAyMDAgbWlsbGlvbiB5 ZWFycy4mcXVvdDsgIExhdGVyIGNoYXB0ZXJzIG1ha2UgdGhlICZxdW90O2xvbmcgZXZvbHV0aW9uYXJ5
        IGxlYXAgdG8gdGhlIGFudGljcyBvZiB0aGUgcHlnbXkgY2hpbXBhbnplZS4mcXVvdDsgIFdoeSBpcyB0 aGlzIHNlcXVlbmNlIGNhbGxlZCAmcXVvdDtldm9sdXRpb25hcnkgb3JkZXImcXVvdDs/ICBBbmF0b21p Y2FsbHkgY29tcGxleCBob3JzZXNob2UgY3JhYnMgYXJlIG5vdCBhbmNlc3RyYWwgdG8gdmVydGVicmF0
        ZXM7IHRoZSB0d28gcGh5bGEsIEFydGhyb3BvZGEgYW5kIENob3JkYXRhLCBoYXZlIGJlZW4gc2VwYXJh dGUgZnJvbSB0aGUgdmVyeSBmaXJzdCByZWNvcmRzIG9mIG11bHRpY2VsbHVsYXIgbGlmZS4gIDwvcD4K CjxwPkluIGFub3RoZXIgcmVjZW50IGV4YW1wbGUsIGFuZCB0byBzaG93IHRoYXQgdGhpcyBlcnJvciBp
        bmZlc3RzIHRlY2huaWNhbCBhcyB3ZWxsIGFzIGxheSBkaXNjb3Vyc2UsIGFuIGVkaXRvcmlhbCBpbiA8 dT5TY2llbmNlPC91PiwgdGhlIGxlYWRpbmcgcHJvZmVzc2lvbmFsIGpvdXJuYWwgaW4gQW1lcmljYSwg Y29uc3RydWN0cyBhbiBvcmRlciBldmVyeSBiaXQgYXMgbW90bGV5IGFuZCBzZW5zZWxlc3MgYXMgV2hp
        dGUncyAmcXVvdDtyZWd1bGFyIGdyYWRhdGlvbiZxdW90OyAoRmlndXJlIDMpLiAgQ29tbWVudGluZyBv biBzcGVjaWVzIGNvbW1vbmx5IHVzZWQgZm9yIGxhYm9yYXRvcnkgd29yaywgdGhlIGVkaXRvcnMgZGlz Y3VzcyB0aGUgJnF1b3Q7bWlkZGxlIHJhbmdlJnF1b3Q7IGJldHdlZW4gdW5pY2VsbHVsYXIgY3JlYXR1
        cmVzIGFuZCBndWVzcyB3aG8gYXQgdGhlIGFwZXg6ICZxdW90O0hpZ2hlciBvbiB0aGUgZXZvbHV0aW9u YXJ5IGxhZGRlciwmcXVvdDsgd2UgbGVhcm4sICZxdW90O3RoZSBuZW1hdG9kZSwgdGhlIGZseSBhbmQg dGhlIGZyb2cgaGF2ZSB0aGUgYWR2YW50YWdlIG9mIGNvbXBsZXhpdHkgYmV5b25kIHRoZSBzaW5nbGUg
        Y2VsbCwgYnV0IHJlcHJlc2VudCBmYXIgc2ltcGxlciBzcGVjaWVzIHRoYW4gbWFtbWFscyZxdW90OyAo SnVuZSBsMCwgbDk4OCkuPC9wPgoKPHA+VGhlIGZhdHVvdXMgaWRlYSBvZiBhIHNpbmdsZSBvcmRlciBh bWlkc3QgdGhlIG11bHRpZmFyaW91cyBkaXZlcnNpdHkgb2YgbW9kZXJuIGxpZmUgZmxvd3MgZnJvbSBv
        dXIgY29udmVudGlvbmFsIGljb25vZ3JhcGhpZXMgYW5kIHRoZSBwcmVqdWRpY2VzIHRoYXQgbnVydHVy ZSB0aGVtIC0tIHRoZSBsYWRkZXIgb2YgbGlmZSBhbmQgdGhlIGNvbmUgb2YgaW5jcmVhc2luZyBkaXZl cnNpdHkuICBCeSB0aGUgbGFkZGVyLCBob3JzZXNob2UgY3JhYnMgYXJlIGp1ZGdlZCBhcyBzaW1wbGU7
        IGJ5IHRoZSBjb25lLCB0aGV5IGFyZSBkZWVtZWQgb2xkLiAgQW5kIG9uZSBpbXBsaWVzIHRoZSBvdGhl ciB1bmRlciB0aGUgZ3JhbmQgY29uZmxhdGlvbiBkaXNjdXNzZWQgYWJvdmUgLS0gZG93biBvbiB0aGUg bGFkZGVyIGFsc28gbWVhbnMgb2xkLCB3aGlsZSBsb3cgb24gdGhlIGNvbmUgZGVub3RlcyBzaW1wbGUu
        PC9wPgoKPHA+SSBkb24ndCB0aGluayB0aGF0IGFueSBwYXJ0aWN1bGFyIHNlY3JldCwgbXlzdGVyeSBv ciBpbm9yZGluYXRlIHN1YnRsZXR5IHVuZGVybGllcyB0aGUgcmVhc29ucyBmb3Igb3VyIGFsbGVnaWFu Y2UgdG8gdGhlc2UgZmFsc2UgaWNvbm9ncmFwaGllcyBvZiBsYWRkZXJzIGFuZCBjb25lcy4gIFRoZXkg
        YXJlIGNob3NlbiBiZWNhdXNlIHRoZXkgbnVydHVyZSBvdXIgaG9wZXMgZm9yIGEgdW5pdmVyc2Ugb2Yg aW50cmluc2ljIG1lYW5pbmcgZGVmaW5lZCBpbiBvdXIgdGVybXMuICBXZSBzaW1wbHkgY2Fubm90IGJl YXIgdGhlIGltcGxpY2F0aW9ucyBvZiBPbWFyIEtoYXl5YW0ncyBob25lc3R5OjwvcD4KCjxwPkludG8g
        dGhpcyBVbml2ZXJzZSwgYW5kIFdoeSBub3Qga25vd2luZyw8L3A+Cgo8cD5Ob3Igd2hlbmNlLCBsaWtl IFdhdGVyIHdpbGx5LW5pbGx5IGZsb3dpbmc6PC9wPgoKPHA+ICAgIEFuZCBvdXQgb2YgaXQsIGFzIFdp bmQgYWxvbmcgdGhlIFdhc3RlPC9wPgoKPHA+SSBrbm93IG5vdCBXaGl0aGVyLCB3aWxseS1uaWxseSBi
        bG93aW5nLjwvcD4KCjxwPkEgbGF0ZXIgcXVhdHJhaW4gb2YgdGhlIFJ1YmFpeWF0IHByb3Bvc2VzIGEg Y291bnRlcmFjdGluZyBzdHJhdGVneSwgYnV0IGFja25vd2xlZGdlcyBpdHMgc3RhdHVzIGFzIGEgdmFp biBob3BlOjwvcD4KCjxwPkFoIExvdmUhIGNvdWxkIHlvdSBhbmQgSSB3aXRoIEZhdGUgY29uc3BpcmU8
        L3A+Cgo8cD5UbyBncmFzcCB0aGlzIHNvcnJ5IFNjaGVtZSBvZiBUaGluZ3MgZW50aXJlLDwvcD4KCjxw PldvdWxkIHdlIG5vdCBzaGF0dGVyIGl0IHRvIGJpdHMgLS0gYW5kIHRoZW48L3A+Cgo8cD5SZS1tb2xk IGl0IG5lYXJlciB0byB0aGUgSGVhcnQncyBEZXNpcmUhPC9wPgoKPHA+TW9zdCBteXRocyBhbmQgZWFy
        bHkgc2NpZW50aWZpYyBleHBsYW5hdGlvbnMgb2YgV2VzdGVybiBjdWx0dXJlIHBheSBob21hZ2UgdG8g dGhpcyAmcXVvdDtoZWFydCdzIGRlc2lyZS4mcXVvdDsgIENvbnNpZGVyIHRoZSBwcmltYWwgdGFsZSBv ZiBHZW5lc2lzIC0tIGEgd29ybGQgYnV0IGEgZmV3IHRob3VzYW5kIHllYXJzIG9sZCwgaW5oYWJpdGVk
        IGJ5IGh1bWFucyBmb3IgYWxsIGJ1dCB0aGUgZmlyc3QgZml2ZSBkYXlzLCBhbmQgcG9wdWxhdGVkIGJ5 IGNyZWF0dXJlcyBtYWRlIGZvciBvdXIgYmVuZWZpdCBhbmQgc3Vib3JkaW5hdGUgdG8gb3VyIG5lZWRz LiAgU3VjaCBhIGdlb2xvZ2ljYWwgYmFja2dyb3VuZCBjb3VsZCBpbnNwaXJlIEFsZXhhbmRlciBQb3Bl
        J3MgY29uZmlkZW5jZSBhYm91dCB0aGUgZGVlcGVyIG1lYW5pbmcgb2YgaW1tZWRpYXRlIGFwcGVhcmFu Y2VzOjwvcD4KCjxwPkFsbCBuYXR1cmUgaXMgYnV0IGFydCwgdW5rbm93biB0byB0aGVlOzwvcD4KCjxw PkFsbCBjaGFuY2UsIGRpcmVjdGlvbiB3aGljaCB0aG91IGNhbnN0IG5vdCBzZWU7PC9wPgoKPHA+QWxs
        IGRpc2NvcmQsIGhhcm1vbnkgbm90IHVuZGVyc3Rvb2Q7PC9wPgoKPHA+QWxsIHBhcnRpYWwgZXZpbCwg dW5pdmVyc2FsIGdvb2QuPC9wPgoKPHA+QnV0LCBhcyBGcmV1ZCBvYnNlcnZlZCwgb3VyIHJlbGF0aW9u c2hpcCB3aXRoIHNjaWVuY2UgbXVzdCBiZSBwYXJhZG94aWNhbCBiZWNhdXNlIHdlIGFyZSBmb3JjZWQg
        dG8gcGF5IGFuIGFsbW9zdCBpbnRvbGVyYWJsZSBwcmljZSBmb3IgZWFjaCBtYWpvciBnYWluIGluIGtu b3dsZWRnZSBhbmQgcG93ZXIgLS0gdGhlIHBzeWNob2xvZ2ljYWwgY29zdCBvZiBwcm9ncmVzc2l2ZSBk ZXRocm9uZW1lbnQgZnJvbSB0aGUgY2VudGVyIG9mIHRoaW5ncywgYW5kIGluY3JlYXNpbmcgbWFyZ2lu
        YWxpdHkgaW4gYW4gdW5jYXJpbmcgdW5pdmVyc2UuICBUaHVzLCBwaHlzaWNzIGFuZCBhc3Ryb25vbXkg cmVsZWdhdGVkIG91ciBob21lIHRvIGEgY29ybmVyIG9mIHRoZSBjb3Ntb3MsIGFuZCBiaW9sb2d5IHNo aWZ0ZWQgb3VyIHN0YXR1cyBmcm9tIGEgc2ltdWxhY3J1bSBvZiBHb2QgdG8gYSBuYWtlZCwgdXByaWdo
        dCBhcGUuPC9wPgoKPHA+TXkgcHJvZmVzc2lvbiBjb250cmlidXRlZCBpdHMgb3duIHNwZWNpYWwgc2hv Y2sgdG8gdGhpcyBjb3NtaWMgcmVkZWZpbml0aW9uIC0tIGdlb2xvZ3kncyBtb3N0IGZyaWdodGVuaW5n IGZhY3QsIHdlIG1pZ2h0IHNheS4gIEJ5IHRoZSB0dXJuIG9mIHRoZSBsYXN0IGNlbnR1cnksIHdlIGtu
        ZXcgdGhhdCB0aGUgZWFydGggaGFkIGVuZHVyZWQgZm9yIG1pbGxpb25zIG9mIHllYXJzLCBhbmQgdGhh dCBodW1hbiBleGlzdGVuY2Ugb2NjdXBpZWQgYnV0IHRoZSBsYXN0IGdlb2xvZ2ljYWwgbWlsbGltaWNy b3NlY29uZCBvZiB0aGlzIGhpc3RvcnkgLS0gdGhlIGxhc3QgaW5jaCBvZiB0aGUgY29zbWljIG1pbGUs
        IG9yIHRoZSBsYXN0IHNlY29uZCBvZiB0aGUgZ2VvbG9naWNhbCB5ZWFyLCBpbiBvdXIgc3RhbmRhcmQg cGVkYWdvZ2ljYWwgbWV0YXBob3JzLjwvcD4KCjxwPldlIGNhbm5vdCBiZWFyIHRoZSBjZW50cmFsIGlt cGxpY2F0aW9uIG9mIHRoaXMgYnJhdmUgbmV3IHdvcmxkLiAgSWYgd2UgYXJvc2UganVzdCB5ZXN0ZXJk
        YXkgYXMgYSBzbWFsbCB0d2lnIG9uIG9uZSBicmFuY2ggb2YgYSBmbG91cmlzaGluZyB0cmVlLCB0aGVu IGxpZmUgbWF5IG5vdCwgaW4gYW55IGdlbnVpbmUgc2Vuc2UsIGV4aXN0IGZvciBvciBiZWNhdXNlIG9m IHVzLiAgUGVyaGFwcyB3ZSBhcmUgb25seSBhbiBhZnRlcnRob3VnaHQsIGEga2luZCBvZiBjb3NtaWMg
        YWNjaWRlbnQsIGp1c3Qgb25lIGJhdWJsZSBvbiB0aGUgQ2hyaXN0bWFzIHRyZWUgb2YgZXZvbHV0aW9u LjwvcD4KCjxwPldoYXQgb3B0aW9ucyBhcmUgbGVmdCBpbiB0aGUgZmFjZSBvZiBnZW9sb2d5J3MgbW9z dCBmcmlnaHRlbmluZyBmYWN0PyAgT25seSB0d28sIHJlYWxseS4gIFdlIG1heSwgYXMgdGhpcyBib29r
        IGFkdm9jYXRlcywgYWNjZXB0IHRoZSBpbXBsaWNhdGlvbnMgYW5kIGxlYXJuIHRvIHNlZWsgdGhlIG1l YW5pbmcgb2YgaHVtYW4gbGlmZSwgaW5jbHVkaW5nIHRoZSBzb3VyY2Ugb2YgbW9yYWxpdHksIGluIG90 aGVyLCBtb3JlIGFwcHJvcHJpYXRlIGRvbWFpbnMgLS0gZWl0aGVyIHN0b2ljYWxseSB3aXRoIGEgc2Vu
        c2Ugb2YgbG9zcywgb3Igd2l0aCBqb3kgaW4gdGhlIGNoYWxsZW5nZSBpZiBvdXIgdGVtcGVyYW1lbnQg YmUgb3B0aW1pc3RpYy4gIE9yIHdlIG1heSBjb250aW51ZSB0byBzZWVrIGNvc21pYyBjb21mb3J0IGlu IG5hdHVyZSBieSByZWFkaW5nIGhpc3RvcnkgaW4gYSBkaXN0b3J0ZWQgbGlnaHQuPC9wPgoKPHA+SWYg
        d2UgZWxlY3QgdGhlIHNlY29uZCBzdHJhdGVneSwgb3VyIG1hbmV1dmVycyBhcmUgc2V2ZXJlbHkgcmVz dHJpY3RlZCBieSBvdXIgZ2VvbG9naWNhbCBoaXN0b3J5LiAgV2hlbiB3ZSBpbmZlc3RlZCBhbGwgYnV0 IHRoZSBmaXJzdCBmaXZlIGRheXMgb2YgdGltZSwgdGhlIGhpc3Rvcnkgb2YgbGlmZSBjb3VsZCBlYXNp
        bHkgYmUgcmVuZGVyZWQgaW4gb3VyIHRlcm1zLiAgQnV0IGlmIHdlIHdpc2ggdG8gYXNzZXJ0IGh1bWFu IGNlbnRyYWxpdHkgaW4gYSB3b3JsZCB0aGF0IGZ1bmN0aW9uZWQgd2l0aG91dCB1cyB1bnRpbCB0aGUg bGFzdCBtb21lbnQsIHdlIG11c3Qgc29tZWhvdyBncmFzcCBhbGwgdGhhdCBjYW1lIGJlZm9yZSBhcyBh
        IGdyYW5kIHByZXBhcmF0aW9uIC0tYSBmb3Jlc2hhZG93aW5nIG9mIG91ciBldmVudHVhbCBvcmlnaW4u ICA8L3A+Cgo8cD5UaGUgb2xkIGNoYWluIG9mIGJlaW5nIHdvdWxkIHByb3ZpZGUgZ3JlYXRlc3QgY29t Zm9ydCwgYnV0IHdlIG5vdyBrbm93IHRoYXQgdGhlIHZhc3QgbWFqb3JpdHkgb2YgJnF1b3Q7c2ltcGxl
        ciZxdW90OyBjcmVhdHVyZXMgYXJlIG5vdCBodW1hbiBhbmNlc3RvcnMgb3IgZXZlbiBwcm90b3R5cGVz LCBidXQgb25seSBjb2xsYXRlcmFsIGJyYW5jaGVzIG9uIGxpZmUncyB0cmVlLiAgVGhlIGNvbmUgb2Yg aW5jcmVhc2luZyBwcm9ncmVzcyBhbmQgZGl2ZXJzaXR5IHRoZXJlZm9yZSBiZWNvbWVzIG91ciBpY29u
        b2dyYXBoeSBvZiBjaG9pY2UuICBUaGUgY29uZSBpbXBsaWVzIHByZWRpY3RhYmxlIGRldmVsb3BtZW50 IGZyb20gc2ltcGxlIHRvIGNvbXBsZXgsIGZyb20gbGVzcyB0byBtb3JlLiAgPHU+SG9tbzwvdT4gPHU+ c2FwaWVuczwvdT4gbWF5IG9ubHkgZm9ybSBhIHR3aWcsIGJ1dCBpZiBsaWZlIG1vdmVzLCBldmVuIGZp
        dGZ1bGx5LCB0b3dhcmRzIGdyZWF0ZXIgY29tcGxleGl0eSBhbmQgaGlnaGVyIG1lbnRhbGl0eSwgdGhl biB0aGUgZXZlbnR1YWwgb3JpZ2luIG9mIHNlbGYtY29uc2Npb3VzIGludGVsbGlnZW5jZSBtYXkgYmUg aW1wbGljaXQgaW4gYWxsIHRoYXQgY2FtZSBiZWZvcmUuICBJbiBzaG9ydCwgSSBjYW5ub3QgdW5kZXJz
        dGFuZCBvdXIgY29udGludWVkIGFsbGVnaWFuY2UgdG8gbWFuaWZlc3RseSBmYWxzZSBpY29ub2dyYXBo aWVzIG9mIGxhZGRlciBhbmQgY29uZSBleGNlcHQgYXMgYSBsYXN0IGZpbmdlciBpbiB0aGUgZGlrZSBv ZiBjb3NtaWNhbGx5IGp1c3RpZmllZCBob3BlIGFuZCBhcnJvZ2FuY2UuPC9wPgoKPHA+SSBsZWF2ZSB0
        aGUgbGFzdCB3b3JkIG9uIHRoaXMgc3ViamVjdCB0byBNYXJrIFR3YWluLCB3aG8gZ3Jhc3BlZCBzbyBn cmFwaGljYWxseSwgd2hlbiB0aGUgRWlmZmVsIFRvd2VyIHdhcyB0aGUgd29ybGQncyB0YWxsZXN0IGJ1 aWxkaW5nLCB0aGUgaW1wbGljYXRpb25zIG9mIGdlb2xvZ3kncyBtb3N0IGZyaWdodGVuaW5nIGZhY3Qu
        PC9wPgoKPHA+TWFuIGhhcyBiZWVuIGhlcmUgMzIsMDAwIHllYXJzLiAgVGhhdCBpdCB0b29rIGEgaHVu ZHJlZCAgIG1pbGxpb24geWVhcnMgdG8gcHJlcGFyZSB0aGUgd29ybGQgZm9yIGhpbSBpcyBwcm9vZiAg IHRoYXQgdGhhdCBpcyB3aGF0IGl0IHdhcyBkb25lIGZvci4gIEkgc3VwcG9zZSBpdCBpcy4gIEkgICBk
        dW5uby4gIElmIHRoZSBFaWZmZWwgVG93ZXIgd2VyZSBub3cgcmVwcmVzZW50aW5nIHRoZSAgIHdvcmxk J3MgYWdlLCB0aGUgc2tpbiBvZiBwYWludCBvbiB0aGUgcGlubmFjbGUga25vYiBhdCAgIGl0cyBzdW1t aXQgd291bGQgcmVwcmVzZW50IG1hbidzIHNoYXJlIG9mIHRoYXQgYWdlOyBhbmQgICBhbnlib2R5IHdv
        dWxkIHBlcmNlaXZlIHRoYXQgdGhlIHNraW4gd2FzIHdoYXQgdGhlIHRvd2VyICAgd2FzIGJ1aWx0IGZv ci4gSSByZWNrb24gdGhleSB3b3VsZCwgSSBkdW5uby4gICA8L3A+Cgo8cD5DKSAgPHU+UmVwbGF5aW5n IExpZmUncyBUYXBlOiBUaGUgQ3J1Y2lhbCBFeHBlcmltZW50PC91PjwvcD4KCjxwPlRoZSBpY29ub2dy
        YXBoeSBvZiB0aGUgY29uZSBmb3JjZXMgV2FsY290dCdzIG9yaWdpbmFsIGludGVycHJldGF0aW9uIG9m IHRoZSBCdXJnZXNzIFNoYWxlLiAgQW55IGZhdW5hIHNvIGNsb3NlIHRvIHRoZSBvcmlnaW4gb2YgbXVs dGljZWxsdWxhciBsaWZlIG11c3QgbGllIGluIHRoZSBuZWNrIG9mIHRoZSBmdW5uZWwuICBCdXJnZXNz
        IGFuaW1hbHMgdGhlcmVmb3JlIGNhbm5vdCBzdHJheSBiZXlvbmQgYSBzdHJpY3RseSBsaW1pdGVkIHJh bmdlIG9mIGRpc3Bhcml0eSwgYW5kIGEgYmFzaWMgc2ltcGxpY2l0eSBvZiBhbmF0b215LiAgVGhleSBt dXN0LCBpbiBzaG9ydCwgYmUgY2xhc3NpZmllZCBlaXRoZXIgYXMgcHJpbWl0aXZlIGRlc2lnbnMgd2l0
        aGluIG1vZGVybiBncm91cHMsIG9yIGFzIGFuY2VzdHJhbCBhbmltYWxzIHRoYXQgbWlnaHQsIHdpdGgg aW5jcmVhc2VkIGNvbXBsZXhpdHksIHByb2dyZXNzIHRvIHNvbWUgZmFtaWxpYXIgZm9ybSBvZiBtb2Rl cm4gc2Vhcy4gIFNtYWxsIHdvbmRlciwgdGhlbiwgdGhhdCBXYWxjb3R0IGludGVycHJldGVkIGV2ZXJ5
        IG9yZ2FuaXNtIGluIHRoZSBCdXJnZXNzIFNoYWxlIGFzIGEgcHJpbWl0aXZlIG1lbWJlciBvZiBhIHBy b21pbmVudCBicmFuY2ggb24gbGlmZSdzIGxhdGVyIHRyZWUuPC9wPgoKPHA+SSBrbm93IG5vIGdyZWF0 ZXIgY2hhbGxlbmdlIHRvIHRoZSBpY29ub2dyYXBoeSBvZiB0aGUgY29uZSA8L3A+Cgo8cD4tLSBoZW5j
        ZSBubyBtb3JlIGltcG9ydGFudCBjYXNlIGZvciBhIGZ1bmRhbWVudGFsbHkgcmV2aXNlZCB2aWV3IG9m IGxpZmUgLS0gdGhhbiB0aGUgcmFkaWNhbCByZWNvbnN0cnVjdGlvbnMgb2YgQnVyZ2VzcyBhbmF0b215 IHByZXNlbnRlZCBieSBXaGl0dGluZ3RvbiBhbmQgaGlzIGNvbGxlYWd1ZXMuICBUaGV5IGhhdmUgbGl0
        ZXJhbGx5IGZvbGxvd2VkIG91ciBtb3N0IHZlbmVyYWJsZSBtZXRhcGhvciBmb3IgcmV2b2x1dGlvbiAt LSB0aGV5IGhhdmUgdHVybmVkIHRoZSB0cmFkaXRpb25hbCBpbnRlcnByZXRhdGlvbiBvbiBpdHMgaGVh ZC4gIEJ5IGlsbHVzdHJhdGluZyBzbyBtYW55IHVuaXF1ZSBhbmF0b21pZXMgaW4gdGhlIEJ1cmdlc3Ms
        IGFuZCBieSBzaG93aW5nIHRoYXQgZmFtaWxpYXIgZ3JvdXBzIHdlcmUgdGhlbiBleHBlcmltZW50aW5n IHdpdGggZGVzaWducyBzbyBmYXIgYmV5b25kIHRoZSBtb2Rlcm4gcmFuZ2UsIHRoZXkgaGF2ZSBpbnZl cnRlZCB0aGUgY29uZS4gIFRoZSBzd2VlcCBvZiBhbmF0b21pY2FsIGRlc2lnbiByZWFjaGVkIGEgbWF4
        aW11bSByaWdodCBhZnRlciB0aGUgaW5pdGlhbCBkaXZlcnNpZmljYXRpb24gb2YgbXVsdGljZWxsdWxh ciBhbmltYWxzLiAgVGhlIGxhdGVyIGhpc3Rvcnkgb2YgbGlmZSBwcm9jZWVkcyBieSB3aW5ub3dpbmcs IG5vdCBleHBhbnNpb24uICBUaGUgY3VycmVudCBlYXJ0aCBtYXkgaG9sZCBtb3JlIHNwZWNpZXMgdGhh
        biBldmVyIGJlZm9yZSwgYnV0IG1vc3QgYXJlIGl0ZXJhdGlvbnMgdXBvbiBhIGZldyBiYXNpYyBhbmF0 b21pY2FsIGRlc2lnbnMuICAoVGF4b25vbWlzdHMgaGF2ZSBkZXNjcmliZWQgbW9yZSB0aGFuIGEgaGFs ZiBtaWxsaW9uIHNwZWNpZXMgb2YgYmVldGxlcywgYnV0IG5lYXJseSBhbGwgYXJlIG1pbmltYWxseSBh
        bHRlcmVkIHhlcm94ZXMgb2YgYSBzaW5nbGUgZ3JvdW5kIHBsYW4uKSAgSW4gZmFjdCwgdGhlIHByb2Jh YmxlIGluY3JlYXNlIGluIG51bWJlciBvZiBzcGVjaWVzIHRocm91Z2ggdGltZSBtZXJlbHkgdW5kZXJz Y29yZXMgdGhlIHB1enpsZSBhbmQgcGFyYWRveC4gIENvbXBhcmVkIHdpdGggdGhlIEJ1cmdlc3Mgc2Vh
        cywgdG9kYXkncyBvY2VhbnMgY29udGFpbiBtYW55IG1vcmUgc3BlY2llcyBiYXNlZCB1cG9uIG1hbnkg ZmV3ZXIgYW5hdG9taWNhbCBwbGFucy4gIDwvcD4KCjxwPkZpZ3VyZSBsNyBwcmVzZW50cyBhIHJldmlz ZWQgaWNvbm9ncmFwaHkgcmVmbGVjdGluZyB0aGUgbGVzc29ucyBvZiB0aGUgQnVyZ2VzcyBTaGFsZS4g
        IFRoZSBtYXhpbXVtIHJhbmdlIG9mIGFuYXRvbWljYWwgcG9zc2liaWxpdGllcyBhcmlzZXMgd2l0aCB0 aGUgZmlyc3QgcnVzaCBvZiBkaXZlcnNpZmljYXRpb24uICBMYXRlciBoaXN0b3J5IGlzIGEgdGFsZSBv ZiByZXN0cmljdGlvbiwgYXMgbW9zdCBvZiB0aGVzZSBlYXJseSBleHBlcmltZW50cyBzdWNjdW1iLCB3
        aGlsZSBsYXRlciBsaWZlIHNldHRsZXMgZG93biB0byBnZW5lcmF0aW5nIGVuZGxlc3MgdmFyaWFudHMg dXBvbiBhIGZldyBzdXJ2aXZpbmcgbW9kZWxzLjwvcD4KCjxwPlRoaXMgaW52ZXJ0ZWQgaWNvbm9ncmFw aHksIGhvd2V2ZXIgaW50ZXJlc3RpbmcgYW5kIHJhZGljYWwgaW4gaXRzZWxmLCBuZWVkIG5vdCBpbXBs
        eSBhIHJldmlzZWQgdmlldyBvZiBldm9sdXRpb25hcnkgcHJlZGljdGFiaWxpdHkgYW5kIGRpcmVjdGlv bi4gIEZvciB3ZSBjYW4gYWJhbmRvbiB0aGUgY29uZSBhbmQgYWNjZXB0IHRoZSBpY29ub2dyYXBoeSBv ZiB3aW5ub3dpbmcsIHdoaWxlIG1haW50YWluaW5nIGZ1bGwgYWxsZWdpYW5jZSB0byB0cmFkaXRpb24g
        d2l0aCB0aGUgZm9sbG93aW5nIGludGVycHJldGF0aW9uOiBsaWZlIG1heSBiZSB3aW5ub3dlZCB0byBq dXN0IGEgZmV3IHBlcmNlbnQgb2YgQnVyZ2VzcyBwb3NzaWJpbGl0aWVzLCBidXQgdGhlIGxvc2VycyB3 ZXJlIGNoYWZmLCBhbmQgcHJlZGljdGFibHkgZG9vbWVkLiAgU3Vydml2b3JzIHdvbiBmb3IgY2F1c2Ug
        LS0gYW5kIGNhdXNlIGluY2x1ZGVzIGEgY3J1Y2lhbCBlZGdlIGluIGFuYXRvbWljYWwsIGNvbXBsZXhp dHkgYW5kIGNvbXBldGl0aXZlIGFiaWxpdHkuPC9wPgoKPHA+QnV0IHRoZSBCdXJnZXNzIHBhdHRlcm4g b2Ygd2lubm93aW5nIGFsc28gc3VnZ2VzdHMgYSB0cnVseSByYWRpY2FsIGFsdGVybmF0aXZlLCBwcmVj
        bHVkZWQgYnkgdGhlIGljb25vZ3JhcGh5IG9mIHRoZSBjb25lLiAgU3VwcG9zZSB0aGF0IHdpbm5lcnMg ZG8gbm90IHByZXZhaWwgZm9yIGNhdXNlIGluIHRoZSB1c3VhbCBzZW5zZS4gIFBlcmhhcHMgdGhlIGdy aW0gcmVhcGVyIGlzIG9ubHkgTGFkeSBMdWNrIGluIGRyYWcuICBPciBwZXJoYXBzIHRoZSB1c3VhbCBy
        ZWFzb25zIGZvciBzdXJ2aXZhbCBkbyBub3Qgc3VwcG9ydCBjb252ZW50aW9uYWwgaWRlYXMgb2YgY2F1 c2UgYXMgY29tcGxleGl0eSwgaW1wcm92ZW1lbnQsIG9yIGFueXRoaW5nIG1vdmluZyBhdCBhbGwgaHVt YW4td2FyZC4gIFBlcmhhcHMgdGhlIGdyaW0gcmVhcGVyIG9mIGFuYXRvbWljYWwgZGVzaWducyB3b3Jr
        cyBkdXJpbmcgYnJpZWYgZXBpc29kZXMgb2YgbWFzcyBleHRpbmN0aW9uLCBwcm92b2tlZCBieSB1bnBy ZWRpY3RhYmxlIGVudmlyb25tZW50YWwgY2F0YXN0cm9waGVzIChvZnRlbiB0cmlnZ2VyZWQgYnkgaW1w YWN0cyBvZiBleHRyYXRlcnJlc3RyaWFsIGJvZGllcykuICBHcm91cHMgbWF5IHByZXZhaWwgb3IgZGll
        PC9wPgoKPHA+Qk9YOiAgSS4gRGVmaW5pdGlvbnMgb2YgRGl2ZXJzaXR5PC9wPgoKPHA+SSBtdXN0IGlu dHJvZHVjZSwgYXQgdGhpcyBwb2ludCwgYW4gaW1wb3J0YW50IGRpc3RpbmN0aW9uIHRoYXQgc2hvdWxk IGFsbGF5IGEgY2xhc3NpYyBzb3VyY2Ugb2YgY29uZnVzaW9uIGluIHN1Y2ggZGlzY3Vzc2lvbnMuICBC
        aW9sb2dpc3RzIHVzZSB0aGUgdmVybmFjdWxhciB0ZXJtICZxdW90O2RpdmVyc2l0eSZxdW90OyBpbiBz ZXZlcmFsIGRpZmZlcmVudCB0ZWNobmljYWwgc2Vuc2VzLiAgVGhleSBtYXkgdGFsayBhYm91dCAmcXVv dDtkaXZlcnNpdHkmcXVvdDsgYXMgbnVtYmVyIG9mIGRpc3RpbmN0IHNwZWNpZXMuICBBbW9uZyBtYW1t
        YWxzLCByb2RlbnQgZGl2ZXJzaXR5IGlzIGhpZ2ggYnkgdmlydHVlIG9mIG1vcmUgdGhhbiBsNTAwIHNl cGFyYXRlIHNwZWNpZXM7IGhvcnNlIGRpdmVyc2l0eSBpcyBsb3csIHNpbmNlIHplYnJhcywgZG9ua2V5 cyBhbmQgdHJ1ZSBob3JzZXMgY29tZSBpbiBmZXdlciB0aGFuIGwwIHNwZWNpZXMuICBCdXQgYmlvbG9n
        aXN0cyBhbHNvIHNwZWFrIG9mICZxdW90O2RpdmVyc2l0eSZxdW90OyBhcyBkaWZmZXJlbmNlIGluIGJv ZHkgcGxhbnMuICBUaHJlZSBibGluZCBtaWNlIChvZiBkaWZmZXJpbmcgc3BlY2llcykgZG8gbm90IG1h a2UgYSBkaXZlcnNlIGZhdW5hLCBidXQgYW4gZWxlcGhhbnQsIGEgdHJlZSBhbmQgYW4gYW50IGRvIC0t
        IGV2ZW4gdGhvdWdoIGVhY2ggYXNzZW1ibGFnZSBjb250YWlucyBqdXN0IHRocmVlIHNwZWNpZXMuPC9w PgoKPHA+VGhlIHJldmlzaW9uIG9mIHRoZSBCdXJnZXNzIFNoYWxlIHJlc3RzIHVwb24gZGl2ZXJzaXR5 IGluIHRoaXMgc2Vjb25kIHNlbnNlIG9mIDx1PmRpc3Bhcml0eTwvdT4gaW4gYW5hdG9taWNhbCBwbGFu
        cy4gIEJ1cmdlc3MgZGl2ZXJzaXR5LCBtZWFzdXJlZCBhcyBudW1iZXIgb2Ygc3BlY2llcywgaXMgbm90 IGhpZ2guICBUaGlzIGZhY3QsIGFzIHN1Z2dlc3RlZCBhYm92ZSwgZXhwcmVzc2VzIGEgY2VudHJhbCBw YXJhZG94IG9mIGVhcmx5IGxpZmUuICBIb3cgY291bGQgc28gbXVjaCBkaXNwYXJpdHkgaW4gYm9keSBw
        bGFucyBiZSBldm9sdmVkIGluIHRoZSBhcHBhcmVudCBhYnNlbmNlIG9mIHN1YnN0YW50aWFsIGRpdmVy c2l0eSBpbiBudW1iZXIgb2Ygc3BlY2llcyAtLSBmb3IgdGhlIHR3byBhcmUgY29ycmVsYXRlZCwgbW9y ZSBvciBsZXNzIGluIGxvY2tzdGVwLCBieSB0aGUgaWNvbm9ncmFwaHkgb2YgdGhlIGNvbmUgKEZpZ3Vy
        ZSBsNikuPC9wPgoKPHA+VGh1cywgd2hlbiBJIHNwZWFrIG9mICZxdW90O3dpbm5vd2luZywmcXVvdDsg SSByZWZlciB0byByZWR1Y3Rpb24gaW4gYW5hdG9taWNhbCBkZXNpZ25zIGZvciBsaWZlLCBub3QgbnVt YmVycyBvZiBzcGVjaWVzLiAgTW9zdCBwYWxlb250b2xvZ2lzdHMgYWdyZWUgdGhhdCB0aGUgc2ltcGxl
        IGNvdW50IG9mIHNwZWNpZXMgaGFzIGF1Z21lbnRlZCB0aHJvdWdoIHRpbWUgKFNlcGtvc2tpIDx1PmV0 PC91PiA8dT5hbDwvdT4uLCBsOThsKSAtLSBhbmQgdGhpcyBpbmNyZWFzZSBvZiBzcGVjaWVzIG11c3Qg dGhlcmVmb3JlIG9jY3VyIDx1PndpdGhpbjwvdT4gYSByZWR1Y2VkIG51bWJlciBvZiBib2R5IHBsYW5z
        LiAgPC9wPgoKPHA+TW9zdCBwZW9wbGUgZG8gbm90IGZ1bGx5IGFwcHJlY2lhdGUgdGhlIHN0ZXJlb3R5 cGVkIGNoYXJhY3RlciBvZiBjdXJyZW50IGxpZmUuICBXZSBsZWFybiBsaXN0cyBvZiBvZGQgcGh5bGEg aW4gaGlnaCBzY2hvb2wgLS0gdW50aWwga2lub3JoeW5jaCwgcHJpYXB1bGlkLCBnbmF0aG9zdG9tdWxp
        ZCBhbmQgcG9nb25vcGhvcmFuIHJvbGwgb2ZmIHRoZSB0b25ndWUgKGF0IGxlYXN0IHVudGlsIHRoZSBl eGFtaW5hdGlvbiBlbmRzKS4gIEJ5IGZvY3Vzc2luZyBvbiBhIGZldyBvZGRiYWxscywgd2UgZm9yZ2V0 IGhvdyB1bmJhbGFuY2VkIGxpZmUgY2FuIGJlLiAgTmVhcmx5IDgwIHBlcmNlbnQgb2YgYWxsIGRlc2Ny
        aWJlZCBhbmltYWwgc3BlY2llcyBhcmUgYXJ0aHJvcG9kcyAobW9zdGx5IGluc2VjdHMpLiAgT24gdGhl IHNlYSBmbG9vciwgb25jZSB5b3UgZW51bWVyYXRlIHBvbHljaGFldGUgd29ybXMsIHNlYSB1cmNoaW5z LCBjcmFicyBhbmQgc25haWxzLCB0aGVyZSBhcmVuJ3QgdGhhdCBtYW55IGNvZWxvbWF0ZSBpbnZlcnRl
        YnJhdGVzIGxlZnQuICBTdGVyZW90eXB5LCBvciB0aGUgY3JhbW1pbmcgb2YgbW9zdCBzcGVjaWVzIGlu dG8gYSBmZXcgYW5hdG9taWNhbCBwbGFucywgaXMgYSBjYXJkaW5hbCBmZWF0dXJlIG9mIG1vZGVybiBs aWZlIC0tIGFuZCBpdHMgZ3JlYXRlc3QgZGlmZmVyZW5jZSBmcm9tIHRoZSB3b3JsZCBvZiBCdXJnZXNz
        IHRpbWVzLiA8L3A+Cgo8cD5TZXZlcmFsIG9mIG15IGNvbGxlYWd1ZXMgKEphYW51c3NvbiwgbDk4bDsg UnVubmVnYXIsIGw5ODcpICAgaGF2ZSBzdWdnZXN0ZWQgdGhhdCB3ZSBlbGltaW5hdGUgdGhlIGNvbmZ1 c2lvbiBhYm91dCBkaXZlcnNpdHkgYnkgcmVzdHJpY3RpbmcgdGhpcyB2ZXJuYWN1bGFyIHRlcm0gdG8g
        dGhlIGZpcnN0IHNlbnNlLCBvciBudW1iZXIgb2Ygc3BlY2llcy4gIFRoZSBzZWNvbmQgbWVhbmluZyBv ZiBkaWZmZXJlbmNlcyBpbiBhbmF0b21pY2FsIGRlc2lnbnMgc2hvdWxkIHRoZW4gYmUgY2FsbGVkICZx dW90O2Rpc3Bhcml0eS4mcXVvdDsgIFVzaW5nIHRoaXMgdGVybWlub2xvZ3ksIHdlIG1heSBhY2tub3ds
        ZWRnZSBhIGNlbnRyYWwgYW5kIHN1cnByaXNpbmcgZmFjdCBvZiBsaWZlJ3MgaGlzdG9yeSAtLSBtYXJr ZWQgZGVjcmVhc2UgaW4gZGlzcGFyaXR5IGZvbGxvd2VkIGJ5IGFuIG91dHN0YW5kaW5nIGluY3JlYXNl IGluIGRpdmVyc2l0eSB3aXRoaW4gdGhlIGZldyBzdXJ2aXZpbmcgZGVzaWducy48L3A+Cgo8cD5mb3Ig
        cmVhc29ucyB0aGF0IGJlYXIgbm8gcmVsYXRpb25zaGlwIHRvIHRoZSBEYXJ3aW5pYW4gYmFzaXMgb2Yg c3VjY2VzcyBpbiBub3JtYWwgdGltZXMuICBFdmVuIGlmIGZpc2hlcyBob25lIHRoZWlyIGFkYXB0YXRp b25zIHRvIHBlYWtzIG9mIGFxdWF0aWMgcGVyZmVjdGlvbiwgdGhleSB3aWxsIGFsbCBkaWUgaWYgdGhl
        IHBvbmRzIGRyeSB1cC4gIEJ1dCBncnViYnkgb2xkIEJ1c3RlciB0aGUgTHVuZ2Zpc2gsIGZvcm1lciBs YXVnaGluZyBzdG9jayBvZiB0aGUgcGlzY2luZSBwcmllc3Rob29kLCBtaWdodCBwdWxsIHRocm91Z2gg LS0gYW5kIG5vdCBiZWNhdXNlIGEgYnVuaW9uIG9uIGhpcyBncmVhdCBncmFuZGZhdGhlcidzIGZpbiB3
        YXJuZWQgaGlzIGFuY2VzdG9ycyBhYm91dCBhbiBpbXBlbmRpbmcgY29tZXQuICBCdXN0ZXIgYW5kIGhp cyBraW4gbWF5IHByZXZhaWwgYmVjYXVzZSBhIGZlYXR1cmUsIGV2b2x2ZWQgbG9uZyBhZ28gZm9yIGEg ZGlmZmVyZW50IHVzZSwgZm9ydHVpdG91c2x5IHBlcm1pdHRlZCBzdXJ2aXZhbCB0aHJvdWdoIGEgc3Vk
        ZGVuIGFuZCB1bnByZWRpY3RhYmxlIGNoYW5nZSBpbiBydWxlcy4gIEFuZCBpZiB3ZSBhcmUgQnVzdGVy J3MgbGVnYWN5LCBhbmQgdGhlIHJlc3VsdCBvZiBhIHRob3VzYW5kIG90aGVyIHNpbWlsYXJseSBoYXBw eSBhY2NpZGVudHMsIGhvdyBjYW4gd2UgcG9zc2libHkgdmlldyBtZW50YWxpdHkgYXMgaW5ldml0YWJs
        ZSwgb3IgZXZlbiBwcm9iYWJsZT88L3A+Cgo8cD5XZSBsaXZlLCBhcyBvdXIgaHVtb3Jpc3RzIHByb2Ns YWltLCBpbiBhIHdvcmxkIG9mIGdvb2QgbmV3cyBhbmQgYmFkIG5ld3MuICBUaGUgZ29vZCBuZXdzIGlz IHRoYXQgd2UgY2FuIHNwZWNpZnkgYW4gZXhwZXJpbWVudCB0byBkZWNpZGUgYmV0d2VlbiB0aGUgY29u
        dmVudGlvbmFsIGFuZCByYWRpY2FsIGludGVycHJldGF0aW9ucyBvZiB3aW5ub3dpbmcsIHRoZXJlYnkg c2V0dGxpbmcgdGhlIG1vc3QgaW1wb3J0YW50IHF1ZXN0aW9uIHdlIGNhbiBhc2sgYWJvdXQgdGhlIGhp c3Rvcnkgb2YgbGlmZS4gIFRoZSBiYWQgbmV3cyBpcyB0aGF0IHdlIGNhbid0IHBvc3NpYmx5IHBlcmZv
        cm0gdGhlIGV4cGVyaW1lbnQuICA8L3A+Cgo8cD5JIGNhbGwgdGhpcyBleHBlcmltZW50ICZxdW90O3Jl cGxheWluZyBsaWZlJ3MgdGFwZS4mcXVvdDsgIFlvdSBwcmVzcyB0aGUgcmV3aW5kIGJ1dHRvbiBhbmQs IG1ha2luZyBzdXJlIHlvdSB0aG9yb3VnaGx5IGVyYXNlIGV2ZXJ5dGhpbmcgdGhhdCBhY3R1YWxseSBo
        YXBwZW5lZCwgZ28gYmFjayB0byBhbnkgdGltZSBpbiB0aGUgcGFzdCAtLSBzYXkgdGhlIHNlYXMgb2Yg dGhlIEJ1cmdlc3MgU2hhbGUuICBUaGVuIGxldCB0aGUgdGFwZSBydW4gYWdhaW4gYW5kIHNlZSBpZiB0 aGUgcmVwZXRpdGlvbiBsb29rcyBhdCBhbGwgbGlrZSB0aGUgb3JpZ2luYWwuICBJZiBlYWNoIHJlcGxh
        eSBzdHJvbmdseSByZXNlbWJsZXMgbGlmZSdzIGFjdHVhbCBwYXRod2F5LCB0aGVuIHdlIG11c3QgY29u Y2x1ZGUgdGhhdCB3aGF0IHJlYWxseSBoYXBwZW5lZCBwcmV0dHkgbXVjaCBoYWQgdG8gb2NjdXIuICBC dXQgc3VwcG9zZSB0aGF0IHRoZSBleHBlcmltZW50YWwgdmVyc2lvbnMgYWxsIHlpZWxkIHNlbnNpYmxl
        IHJlc3VsdHMgc3RyaWtpbmdseSBkaWZmZXJlbnQgZnJvbSB0aGUgYWN0dWFsIGhpc3Rvcnkgb2YgbGlm ZT8gIFdoYXQgY291bGQgd2UgdGhlbiBzYXkgYWJvdXQgdGhlIHByZWRpY3RhYmlsaXR5IG9mIHNlbGYt Y29uc2Npb3VzIGludGVsbGlnZW5jZT8gb3Igb2YgbWFtbWFscz8gb3Igb2YgdmVydGVicmF0ZXM/ICBv
        ciBvZiBsaWZlIG9uIGxhbmQ/IG9yIHNpbXBseSBvZiBtdWx0aWNlbGx1bGFyIHBlcnNpc3RlbmNlIGZv ciA2MDAgbWlsbGlvbiBkaWZmaWN1bHQgeWVhcnM/PC9wPgoKPHA+V2UgY2FuIG5vdyBhcHByZWNpYXRl IHRoZSBjZW50cmFsIGltcG9ydGFuY2Ugb2YgdGhlIEJ1cmdlc3MgcmV2aXNpb24sIGFuZCBpdHMgaWNv
        bm9ncmFwaHkgb2Ygd2lubm93aW5nLiAgVW5kZXIgdGhlIGxhZGRlciBvciBjb25lLCB0aGUgaXNzdWUg b2YgbGlmZSdzIHRhcGUgZG9lcyBub3QgYXJpc2UuICBUaGUgbGFkZGVyIGhhcyBidXQgb25lIGJvdHRv bSBydW5nLCBhbmQgb25lIGRpcmVjdGlvbi4gIFJlcGx5IHRoZSB0YXBlIGZvcmV2ZXIsIGFuZCBlb2hp
        cHB1cyBhbHdheXMgZ2FsbG9wcyBpbnRvIHRoZSBzdW5yaXNlLCBiZWFyaW5nIGl0cyBsYXJnZXIgYm9k eSBvbiBmZXdlciB0b2VzLiAgVGhlIGNvbmUgaGFzIGEgbmFycm93IG5lY2sgYW5kIGEgcmVzdHJpY3Rl ZCByYW5nZSBvZiB1cHdhcmQgbW92ZW1lbnQuICBSZXdpbmQgdGhlIHRhcGUgYmFjayBpbnRvIHRoZSBu
        ZWNrIG9mIHRpbWUsIGFuZCB5b3UgYWx3YXlzIG9idGFpbiB0aGUgc2FtZSBwcm90b3R5cGVzLCBjb25z dHJhaW5lZCB0byByaXNlIGluIHRoZSBzYW1lIGdlbmVyYWwgZGlyZWN0aW9uLjwvcD4KCjxwPkJ1dCBp ZiBhIHJhZGljYWwgd2lubm93aW5nIG9mIGEgbXVjaCBncmVhdGVyIHJhbmdlIG9mIGluaXRpYWwgcG9z
        c2liaWxpdGllcyBzZXQgdGhlIHBhdHRlcm4gb2YgbGF0ZXIgbGlmZSwgaW5jbHVkaW5nIHRoZSBjaGFu Y2Ugb2Ygb3VyIG93biBvcmlnaW4sIHRoZW4gY29uc2lkZXIgdGhlIGFsdGVybmF0aXZlcy4gIFN1cHBv c2UgdGhhdCB0ZW4gb2YgYSBodW5kcmVkIGRlc2lnbnMgd2lsbCBzdXJ2aXZlIGFuZCBkaXZlcnNpZnk/
        ICBJZiB0aGUgdGVuIHN1cnZpdm9ycyBhcmUgcHJlZGljdGFibGUgYnkgc3VwZXJpb3JpdHkgb2YgYW5h dG9teSAoaW50ZXJwcmV0YXRpb24gb25lKSwgdGhlbiB0aGV5IHdpbiBlYWNoIHRpbWUgLS0gYW5kIEJ1 cmdlc3Mgd2lubm93aW5nIGRvZXMgbm90IGNoYWxsZW5nZSBvdXIgY29tZm9ydGluZyB2aWV3IG9mIGxp
        ZmUuICBCdXQgaWYgdGhlIHRlbiBzdXJ2aXZvcnMgYXJlIHByb3RlZ+lzIG9mIExhZHkgTHVjayBvciBm b3J0dW5hdGUgYmVuZWZpY2lhcmllcyBvZiBvZGQgaGlzdG9yaWNhbCBjb250aW5nZW5jaWVzIChpbnRl cnByZXRhdGlvbiB0d28pLCB0aGVuIGVhY2ggcmVwbGF5IG9mIHRoZSB0YXBlIHlpZWxkcyBhIGRpZmZl
        cmVudCBzZXQgb2Ygc3Vydml2b3JzLCBhbmQgYSByYWRpY2FsbHkgZGlmZmVyZW50IGhpc3RvcnkuICBB bmQgaWYgeW91IHJlY2FsbCBob3cgdG8gY2FsY3VsYXRlIHBlcm11dGF0aW9ucyBhbmQgY29tYmluYXRp b25zIGZyb20gaGlnaC1zY2hvb2wgYWxnZWJyYSwgeW91IHdpbGwgcmVtZW1iZXIgdGhhdCB0aGUgdG90
        YWwgbnVtYmVyIG9mIGNvbWJpbmF0aW9ucyBmb3IgbDAgaXRlbXMgZnJvbSBhIHBvb2wgb2YgbDAwIHlp ZWxkcyBtb3JlIHRoYW4gbDcgdHJpbGxpb24gcG90ZW50aWFsIG91dGNvbWVzLiBJIGFtIHdpbGxpbmcg dG8gZ3JhbnQgdGhhdCBzb21lIGdyb3VwcyBtaWdodCBoYXZlIGVuam95ZWQgYSBwcmVkaWN0YWJsZSBl
        ZGdlICh0aG91Z2ggd2UgaGF2ZSBubyBpZGVhIGhvdyB0byBpZGVudGlmeSBvciBkZWZpbmUgdGhlbSks IGJ1dCBJIHN1c3BlY3QgdGhhdCB0aGUgc2Vjb25kIGludGVycHJldGF0aW9uIGdyYXNwcyBhIGNlbnRy YWwgdHJ1dGggYWJvdXQgZXZvbHV0aW9uLiAgVGhlIEJ1cmdlc3MgU2hhbGUsIGluIG1ha2luZyB0aGlz
        IHNlY29uZCBpbnRlcnByZXRhdGlvbiBpbnRlbGxpZ2libGUgYnkgdGhlIGh5cG90aGV0aWNhbCBleHBl cmltZW50IG9mIHRoZSB0YXBlLCBwcm9tb3RlcyBhIHJhZGljYWwgdmlldyBvZiBldm9sdXRpb25hcnkg cGF0aHdheXMgYW5kIHByZWRpY3RhYmlsaXR5LjwvcD4KCjxwPlRoZSByZWplY3Rpb24gb2YgY29uZSBh
        bmQgbGFkZGVyIGRvZXMgbm90IHRocm93IHVzIGludG8gdGhlIGFybXMgb2YgYSBzdXBwb3NlZCBvcHBv c2l0ZSAtLSBwdXJlIGNoYW5jZSBpbiB0aGUgc2Vuc2Ugb2YgY29pbiB0b3NzaW5nLCBvciBHb2QgcGxh eWluZyBkaWNlIHdpdGggdGhlIHVuaXZlcnNlLiAgSnVzdCBhcyB0aGUgY29uZSBhbmQgbGFkZGVyIGFy
        ZSBsaW1pdGluZyBpY29ub2dyYXBoaWVzIGZvciBsaWZlJ3MgaGlzdG9yeSwgc28gdG9vIGRvZXMgdGhl IHZlcnkgaWRlYSBvZiBkaWNob3RvbXkgZ3JpZXZvdXNseSByZXN0cmljdCBvdXIgdGhpbmtpbmcuICBE aWNob3RvbXkgaGFzIGl0cyBvd24gdW5mb3J0dW5hdGUgaWNvbm9ncmFwaHkgLS0gYSBzaW5nbGUgbGlu
        ZSBlbWJyYWNpbmcgYWxsIHBvc3NpYmxlIG9waW5pb25zLCB3aXRoIHRoZSB0d28gZW5kcyByZXByZXNl bnRpbmcgcG9sYXIgb3Bwb3NpdGVzLCBkZXRlcm1pbmlzbSBhbmQgcmFuZG9tbmVzcyBpbiB0aGlzIGNh c2UuPC9wPgoKPHA+QW4gb2xkIHRyYWRpdGlvbiwgZGF0aW5nIGF0IGxlYXN0IHRvIEFyaXN0b3RsZSwg
        YWR2aXNlcyB0aGUgcHJ1ZGVudCBwZXJzb24gdG8gc3Rha2Ugb3V0IGEgcG9zaXRpb24gY29tZm9ydGFi bHkgdG93YXJkcyB0aGUgbWlkZGxlIG9mIHRoZSBsaW5lIC0tIHRoZSA8dT5hdXJlYTwvdT4gPHU+bWVk aW9jcml0YXM8L3U+IChvciBnb2xkZW4gbWVhbikuICBCdXQsIGluIHRoaXMgY2FzZSwgdGhlIG1pZGRs
        ZSBvZiB0aGUgbGluZSBoYXMgbm90IGJlZW4gc28gaGFwcHkgYSBwbGFjZSwgYW5kIHRoZSBnYW1lIG9m IGRpY2hvdG9teSBoYXMgc2VyaW91c2x5IGhhbXBlcmVkIG91ciB0aGlua2luZyBhYm91dCB0aGUgaGlz dG9yeSBvZiBsaWZlLiAgV2UgbWF5IHVuZGVyc3RhbmQgdGhhdCB0aGUgb2xkZXIgZGV0ZXJtaW5pc20g
        b2YgcHJlZGljdGFibGUgcHJvZ3Jlc3MgY2Fubm90IHN0cmljdGx5IGFwcGx5LCBidXQgd2UgdGhpbmsg dGhhdCBvdXIgb25seSBhbHRlcm5hdGl2ZSBsaWVzIHdpdGggdGhlIGRlc3BhaXIgb2YgcHVyZSByYW5k b21uZXNzLiAgU28gd2UgYXJlIGRyaXZlbiBiYWNrIHRvd2FyZHMgdGhlIG9sZCB2aWV3LCBhbmQgZmlu
        aXNoIHdpdGggZGlzY29tZm9ydCBhdCBzb21lIGlsbC1kZWZpbmVkIGNvbmZ1c2lvbiBpbiBiZXR3ZWVu LjwvcD4KCjxwPkkgc3Ryb25nbHkgcmVqZWN0IGFueSB2aXNpb24gdGhhdCBwbGFjZXMgb3VyIG9wdGlv bnMgb24gYSBsaW5lLCBhbmQgaG9sZHMgdGhhdCB0aGUgb25seSBhbHRlcm5hdGl2ZSB0byBhIHBhaXIg
        b2YgZXh0cmVtZSBwb3NpdGlvbnMgbGllcyBzb21ld2hlcmUgYmV0d2VlbiB0aGVtLiAgTW9yZSBmcnVp dGZ1bCBwZXJzcGVjdGl2ZXMgb2Z0ZW4gcmVxdWlyZSB0aGF0IHdlIHN0ZXAgb2ZmIHRoZSBsaW5lIHRv IGEgc2l0ZSBvdXRzaWRlIHRoZSBkaWNob3RvbXkuPC9wPgoKPHA+SSB3cml0ZSB0aGlzIGJvb2sgdG8g
        c3VnZ2VzdCBhIHRoaXJkIGF0dGl0dWRlIG9mZiB0aGUgbGluZS4gIEkgYmVsaWV2ZSB0aGF0IHRoZSBC dXJnZXNzIHJldmlzaW9uLCBpbnRlcnByZXRlZCB0aHJvdWdoIHRoZSB0aGVtZSBvZiByZXBsYXlpbmcg bGlmZSdzIHRhcGUsIG9mZmVycyBwb3dlcmZ1bCBzdXBwb3J0IGZvciB0aGlzIGRpZmZlcmVudCB2aWV3
        IG9mIGxpZmUuICBJbiBzaG9ydCwgYW55IHJlcGxheSBvZiB0aGUgdGFwZSB3b3VsZCBsZWFkIGV2b2x1 dGlvbiBkb3duIGEgcGF0aHdheSByYWRpY2FsbHkgZGlmZmVyZW50IGZyb20gdGhlIHJvYWQgYWN0dWFs bHkgdGFrZW4uICBCdXQgdGhlc2UgZGlmZmVyZW5jZXMgaW4gb3V0Y29tZSBkbyBub3QgaW1wbHkgdGhh
        dCBldm9sdXRpb24gaXMgc2Vuc2VsZXNzLCBhbmQgd2l0aG91dCBtZWFuaW5nZnVsIHBhdHRlcm4uICBU aGUgZGl2ZXJnZW50IHJvdXRlIG9mIHRoZSByZXBsYXkgd291bGQgYmUganVzdCBhcyBpbnRlcnByZXRh YmxlLCBqdXN0IGFzIGV4cGxhaW5hYmxlIDx1PmFmdGVyPC91PiB0aGUgZmFjdCwgYXMgdGhlIGFjdHVh
        bCByb2FkLiAgQnV0IHRoZSBkaXZlcnNpdHkgb2YgcG9zc2libGUgaXRpbmVyYXJpZXMgZG9lcyBkZW1v bnN0cmF0ZSB0aGF0IGV2ZW50dWFsIHJlc3VsdHMgY2Fubm90IGJlIHByZWRpY3RlZCBhdCB0aGUgb3V0 c2V0LiAgRWFjaCBzdGVwIHByb2NlZWRzIGZvciBjYXVzZSwgYnV0IG5vIGZpbmFsZSBjYW4gYmUgc3Bl
        Y2lmaWVkIGF0IHRoZSBzdGFydCwgYW5kIG5vbmUgd291bGQgZXZlciBvY2N1ciBhIHNlY29uZCB0aW1l IGluIHRoZSBzYW1lIHdheSwgYmVjYXVzZSBhbnkgcGF0aHdheSBwcm9jZWVkcyB0aHJvdWdoIHRob3Vz YW5kcyBvZiBpbXByb2JhYmxlIHN0YWdlcy4gIEFsdGVyIGFueSBlYXJseSBldmVudCwgZXZlciBzbyBz
        bGlnaHRseSBhbmQgd2l0aG91dCBhcHBhcmVudCBpbXBvcnRhbmNlIGF0IHRoZSB0aW1lLCBhbmQgZXZv bHV0aW9uIGNhc2NhZGVzIGludG8gYSByYWRpY2FsbHkgZGlmZmVyZW50IGNoYW5uZWwuPC9wPgoKPHA+ VGhpcyB0aGlyZCBhdHRpdHVkZSBoYXMgYSBuYW1lLiAgSXQgcmVwcmVzZW50cyBubyBtb3JlIG5vciBs
        ZXNzIHRoYW4gdGhlIGVzc2VuY2Ugb2YgaGlzdG9yeS4gIEl0cyB3YXRjaHdvcmQgaXMgY29udGluZ2Vu Y3k8L3A+Cgo8cD4tLSBhbmQgY29udGluZ2VuY3kgaXMgYSB0aGluZyB1bnRvIGl0c2VsZiwgbm90IHRo ZSB0aXRyYXRpb24gb2YgZGV0ZXJtaW5pc20gYnkgcmFuZG9tbmVzcy4gIFNjaWVuY2UgaGFzIGJlZW4g
        c2xvdyB0byBhZG1pdCB0aGUgZGlmZmVyZW50IGV4cGxhbmF0b3J5IHdvcmxkIG9mIGhpc3RvcnkgaW50 byBpdHMgZG9tYWluIC0tIGFuZCBvdXIgaW50ZXJwcmV0YXRpb25zIGhhdmUgc3VmZmVyZWQgaW4gcG92 ZXJ0eSBmb3IgdGhpcyBvbWlzc2lvbi4gIFNjaWVuY2UgaGFzIGFsc28gdGVuZGVkIHRvIGRlbmlncmF0
        ZSBoaXN0b3J5LCB3aGVuIGZvcmNlZCB0byBhIGNvbmZyb250YXRpb24sIGJ5IHJlZ2FyZGluZyBhbnkg aW52b2NhdGlvbiBvZiBjb250aW5nZW5jeSBhcyBsZXNzIGVsZWdhbnQgb3IgbGVzcyBtZWFuaW5nZnVs IHRoYW4gZXhwbGFuYXRpb25zIGJhc2VkIGRpcmVjdGx5IG9uIHRpbWVsZXNzICZxdW90O2xhd3Mgb2Yg
        bmF0dXJlLiZxdW90OzwvcD4KCjxwPlRoaXMgYm9vayBpcyBhYm91dCB0aGUgbmF0dXJlIG9mIGhpc3Rv cnksIGFuZCB0aGUgb3ZlcndoZWxtaW5nIGltcHJvYmFiaWxpdHkgb2YgaHVtYW4gZXZvbHV0aW9uIHVu ZGVyIHRoZW1lcyBvZiBjb250aW5nZW5jeSBhbmQgdGhlIG1ldGFwaG9yIG9mIHJlcGxheWluZyBsaWZl
        J3MgdGFwZS4gIEl0IGZvY3Vzc2VzIHVwb24gdGhlIG5ldyBpbnRlcnByZXRhdGlvbiBvZiB0aGUgQnVy Z2VzcyBTaGFsZSBhcyBvdXIgZmluZXN0IGlsbHVzdHJhdGlvbiBvZiB3aGF0IGNvbnRpbmdlbmN5IGlt cGxpZXMgaW4gb3VyIHF1ZXN0IHRvIHVuZGVyc3RhbmQgdGhlIGV2b2x1dGlvbiBvZiBsaWZlLjwvcD4K
        CjxwPkkgY29uY2VudHJhdGUgdXBvbiBkZXRhaWxzIG9mIHRoZSBCdXJnZXNzIFNoYWxlIGJlY2F1c2Ug SSBkb24ndCBiZWxpZXZlIHRoYXQgaW1wb3J0YW50IGNvbmNlcHRzIHNob3VsZCBiZSBkaXNjdXNzZWQg dGVuZGVudGlvdXNseSBpbiB0aGUgYWJzdHJhY3QgKG11Y2ggYXMgSSBoYXZlIGRpc29iZXllZCB0aGUg
        cnVsZSBpbiB0aGlzIG9wZW5pbmcgY2hhcHRlciEpICBQZW9wbGUsIGFzIGN1cmlvdXMgcHJpbWF0ZXMs IGRvdGUgb24gY29uY3JldGUgb2JqZWN0cyB0aGF0IGNhbiBiZSBzZWVuIGFuZCBmb25kbGVkLiAgR29k IGR3ZWxscyBhbW9uZyB0aGUgZGV0YWlscywgbm90IGluIHRoZSByZWFsbSBvZiBwdXJlIGdlbmVyYWxp
        dHkuICBXZSBtdXN0IHRhY2tsZSBhbmQgZ3Jhc3AgdGhlIGxhcmdlciwgZW5jb21wYXNzaW5nIHRoZW1l cyBvZiBvdXIgdW5pdmVyc2UsIGJ1dCB3ZSBtYWtlIG91ciBiZXN0IGFwcHJvYWNoIHRocm91Z2ggc21h bGwgY3VyaW9zaXRpZXMgdGhhdCByaXZldCBvdXQgYXR0ZW50aW9uIC0tIGFsbCB0aG9zZSBwcmV0dHkg
        cGViYmxlcyBvbiB0aGUgc2hvcmVsaW5lIG9mIGtub3dsZWRnZS4gIEZvciB0aGUgb2NlYW4gb2YgdHJ1 dGggd2FzaGVzIG92ZXIgdGhlIHBlYmJsZXMgd2l0aCBldmVyeSB3YXZlIC0tIGFuZCB0aGV5IHJhdHRs ZSBhbmQgY2xpbmsgd2l0aCB0aGUgbW9zdCB3b25kcm91cyBkaW4uPC9wPgoKPHA+V2UgY2FuIGFyZ3Vl
        IGFib3V0IGFic3RyYWN0IGlkZWFzIGZvcmV2ZXIuICBXZSBjYW4gcG9zdHVyZSBhbmQgZmVpbnQuICBX ZSBtYXkgJnF1b3Q7cHJvdmUmcXVvdDsgdG8gdGhlIHNhdGlzZmFjdGlvbiBvZiBvbmUgZ2VuZXJhdGlv biwgb25seSB0byBiZWNvbWUgdGhlIGxhdWdoaW5nIHN0b2NrIG9mIGEgbGF0ZXIgY2VudHVyeSAob3Is
        IHdvcnNlIHN0aWxsLCB0byBiZSB1dHRlcmx5IGZvcmdvdHRlbikuICBXZSBtYXkgZXZlbiB2YWxpZGF0 ZSBhbiBpZGVhIGJ5IGdyYWZ0aW5nIGl0IHBlcm1hbmVudGx5IHVwb24gYW4gb2JqZWN0IG9mIG5hdHVy ZSAtLSB0aHVzIHBhcnRpY2lwYXRpbmcgaW4gdGhlIGxlZ2l0aW1hdGUgc2Vuc2Ugb2YgYSBncmVhdCBo
        dW1hbiBhZHZlbnR1cmUgY2FsbGVkICZxdW90O3Byb2dyZXNzIGluIHNjaWVudGlmaWMgdGhvdWdodC4m cXVvdDs8L3A+Cgo8cD5CdXQgdGhlIGFuaW1hbHMgb2YgdGhlIEJ1cmdlc3MgU2hhbGUgYXJlIHNvbWVo b3cgZXZlbiBtb3JlIHNhdGlzZnlpbmcgaW4gdGhlaXIgYWRhbWFudGluZSBmYWN0dWFsaXR5LiAgV2Ug
        d2lsbCBhcmd1ZSBmb3JldmVyIGFib3V0IHRoZSBtZWFuaW5nIG9mIGxpZmUsIGJ1dCA8dT5PcGFiaW5p YTwvdT4gZWl0aGVyIGRpZCBvciBkaWQgbm90IGhhdmUgZml2ZSBleWVzIC0tIGFuZCB3ZSBjYW4ga25v dyBmb3IgY2VydGFpbiBvbmUgd2F5IG9yIHRoZSBvdGhlci4gIFRoZSBhbmltYWxzIG9mIHRoZSBCdXJn
        ZXNzIFNoYWxlIGFyZSBhbHNvIHRoZSB3b3JsZCdzIG1vc3QgaW1wb3J0YW50IGZvc3NpbHMsIGluIHBh cnQgYmVjYXVzZSB0aGV5IGhhdmUgcmV2aXNlZCBvdXIgdmlldyBvZiBsaWZlLCBidXQgYWxzbyBiZWNh dXNlIHRoZXkgYXJlIG9iamVjdHMgb2Ygc3VjaCBleHF1aXNpdGUgYmVhdXR5LiAgVGhlaXIgbG92ZWxp
        bmVzcyBsaWVzIGFzIG11Y2ggaW4gdGhlIGJyZWFkdGggb2YgaWRlYXMgdGhhdCB0aGV5IGVtYm9keSwg YW5kIGluIHRoZSBtYWduaXR1ZGUgb2Ygb3VyIHN0cnVnZ2xlIHRvIGludGVycHJldCB0aGVpciBhbmF0 b215LCBhcyBpbiB0aGVpciBlbGVnYW5jZSBvZiBmb3JtIGFuZCBwcmVzZXJ2YXRpb24uPC9wPgoKPHA+
        VGhlIGFuaW1hbHMgb2YgdGhlIEJ1cmdlc3MgU2hhbGUgYXJlIGhvbHkgb2JqZWN0cyAtLSBpbiB0aGUg dW5jb252ZW50aW9uYWwgc2Vuc2UgdGhhdCB0aGlzIHdvcmQgY29udmV5cyBpbiBzb21lIGN1bHR1cmVz LiAgV2UgZG8gbm90IHBsYWNlIHRoZW0gb24gcGVkZXN0YWxzIGFuZCB3b3JzaGlwIGZyb20gYWZhci4g
        IFdlIGNsaW1iIG1vdW50YWlucyBhbmQgZHluYW1pdGUgaGlsbHNpZGVzIHRvIGZpbmQgdGhlbS4gIFdl IHF1YXJyeSB0aGVtLCBzcGxpdCB0aGVtLCBjYXJ2ZSB0aGVtLCBkcmF3IHRoZW0sIGFuZCBkaXNzZWN0 IHRoZW0sIHN0cnVnZ2xpbmcgdG8gd3Jlc3QgdGhlaXIgc2VjcmV0cy4gIFdlIHZpbGlmeSBhbmQgY3Vy
        c2UgdGhlbSBmb3IgdGhlaXIgZGFtLSBuYWJsZSBpbnRyYW5zaWdlbmNlLiAgVGhleSBhcmUgZ3J1YmJ5 IGxpdHRsZSBjcmVhdHVyZXMgb2YgYSBzZWEgZmxvb3IgNTMwIG1pbGxpb24geWVhcnMgb2xkLCBidXQg d2UgZ3JlZXQgdGhlbSB3aXRoIGF3ZSBiZWNhdXNlIHRoZXkgYXJlIHRoZSBPbGQgT25lcywgYW5kIHRo
        ZXkgYXJlIHRyeWluZyB0byB0ZWxsIHVzIHNvbWV0aGluZy48L3A+Cgo8YSBocmVmPSJodHRwOi8vd3d3 LmF2YW50c3Rhci5jb20iPjxpbWcgc3JjPSJ0cmFuc3B3ci5naWYiIGFsdD0iUG93ZXJlZCBieSBUcmFu c2l0Ii8+PC9hPjwhLS0gVFJBTlNJVCAtIElORk9BRlRFUiAtLT4KPC9ib2R5Pgo8L2h0bWw+Cg== </foxml:binaryContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
  <foxml:datastream ID="RELS-EXT" STATE="A" CONTROL_GROUP="X" VERSIONABLE="true">
    <foxml:datastreamVersion ID="RELS-EXT.0" LABEL="" CREATED="2011-09-15T22:00:54.177Z" MIMETYPE="text/xml" SIZE="392">
      <foxml:xmlContent>
        <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
          <rdf:Description rdf:about="info:fedora/hypatia:fixture_ftk_file_factory">
            <isPartOf xmlns="info:fedora/fedora-system:def/relations-external#" rdf:resource="info:fedora/hypatia:fixture_ftk_item_factory"/>
            <hasModel xmlns="info:fedora/fedora-system:def/model#" rdf:resource="info:fedora/afmodel:FileAsset"/>
          </rdf:Description>
        </rdf:RDF>
      </foxml:xmlContent>
    </foxml:datastreamVersion>
  </foxml:datastream>
</foxml:digitalObject>
